{
  "id": "7ad62a85dddebe1b8977c437f38f3a3f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/bnbStaker.sol": {
        "content": "/**\r\n *Submitted for verification at BscScan.com on 2022-03-21\r\n*/\r\n\r\n/**\r\n *Submitted for verification at FtmScan.com on 2022-03-11\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT \r\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\r\n \r\npragma solidity ^0.8;\r\n\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    function _msgSender() internal view returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor(){\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Claimable is Ownable {\r\n    \r\n\tfunction claimETH(uint256 amount) external onlyOwner {\r\n        (bool sent, ) = owner().call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n}\r\ncontract BNBStaker is Claimable {\r\n\tusing SafeMath for uint256;\r\n\r\n\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\r\n\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\r\n\tuint256 constant public PROJECT_FEE = 150;\r\n\tuint256 constant public PERCENT_STEP = 3;\r\n\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\r\n\tuint256 constant public PERCENTS_DIVIDER = 1000;\r\n    uint256 constant public TIME_STEP = 1 days;\r\n\t\r\n\tuint256 public totalStaked;\r\n\tuint256 public totalRefBonus;\r\n\r\n    struct Plan {\r\n        uint256 time;\r\n        uint256 percent;\r\n    }\r\n\r\n    Plan[] internal plans;\r\n\r\n\tstruct Deposit {\r\n        uint8 plan;\r\n\t\tuint256 percent;\r\n\t\tuint256 amount;\r\n\t\tuint256 profit;\r\n\t\tuint256 start;\r\n\t\tuint256 finish;\r\n\t}\r\n\r\n\tstruct User {\r\n\t\tDeposit[] deposits;\r\n\t\tuint256 checkpoint;\r\n\t\taddress referrer;\r\n\t\tuint256[3] levels;\r\n\t\tuint256 bonus;\r\n\t\tuint256 totalBonus;\r\n\t}\r\n\r\n\tmapping (address => User) internal users;\r\n\r\n\tuint256 public startUNIX;\r\n\taddress payable public commissionWallet;\r\n\r\n\tevent Newbie(address user);\r\n\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\r\n\tevent Withdrawn(address indexed user, uint256 amount);\r\n\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\r\n\tevent FeePayed(address indexed user, uint256 totalAmount);\r\n\r\n\tconstructor() {\r\n\t\tcommissionWallet = payable(owner());\r\n\t\tstartUNIX = 0;\r\n        plans.push(Plan(14, 80));\r\n        plans.push(Plan(21, 75));\r\n        plans.push(Plan(28, 70));\r\n        plans.push(Plan(14, 80));\r\n        plans.push(Plan(21, 75));\r\n        plans.push(Plan(28, 70));\r\n\t}\r\n\r\n\tfunction launch() public {\r\n        require(msg.sender == commissionWallet);\r\n\t\tstartUNIX = block.timestamp;\r\n\t\t\r\n    } \r\n\r\n\tfunction invest(address referrer, uint8 plan) public payable {\r\n\r\n\t\trequire(msg.value >= INVEST_MIN_AMOUNT,\"too small\");\r\n        require(plan < 6, \"Invalid plan\");\r\n\t\trequire(startUNIX < block.timestamp, \"contract hasn`t started yet\");\r\n\r\n\t\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\r\n\t\tcommissionWallet.transfer(fee);\r\n\t\temit FeePayed(msg.sender, fee);\r\n\r\n\t\tUser storage user = users[msg.sender];\r\n\r\n\t\tif (user.referrer == address(0)) {\r\n\t\t\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\r\n\t\t\t\tuser.referrer = referrer;\r\n\t\t\t}\r\n\r\n\t\t\taddress upline = user.referrer;\r\n\t\t\tfor (uint256 i = 0; i < 3; i++) {\r\n\t\t\t\tif (upline != address(0)) {\r\n\t\t\t\t\tusers[upline].levels[i] = users[upline].levels[i].add(1);\r\n\t\t\t\t\tupline = users[upline].referrer;\r\n\t\t\t\t} else break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (user.referrer != address(0)) {\r\n\r\n\t\t\taddress upline = user.referrer;\r\n\t\t\tfor (uint256 i = 0; i < 3; i++) {\r\n\t\t\t\tif (upline != address(0)) {\r\n\t\t\t\t\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\r\n\t\t\t\t\tusers[upline].bonus = users[upline].bonus.add(amount);\r\n\t\t\t\t\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\r\n\t\t\t\t\temit RefBonus(upline, msg.sender, i, amount);\r\n\t\t\t\t\tupline = users[upline].referrer;\r\n\t\t\t\t} else break;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (user.deposits.length == 0) {\r\n\t\t\tuser.checkpoint = block.timestamp;\r\n\t\t\temit Newbie(msg.sender);\r\n\t\t}\r\n\r\n\t\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\r\n\t\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\r\n\r\n\t\ttotalStaked = totalStaked.add(msg.value);\r\n\t\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\r\n\t}\r\n\r\n\tfunction withdraw() public {\r\n\t\tUser storage user = users[msg.sender];\r\n\r\n\t\tuint256 totalAmount = getUserDividends(msg.sender);\r\n\t\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\r\n\t\ttotalAmount = totalAmount.sub(fees);\r\n\r\n\t\tuint256 referralBonus = getUserReferralBonus(msg.sender);\r\n\t\tif (referralBonus > 0) {\r\n\t\t\tuser.bonus = 0;\r\n\t\t\ttotalAmount = totalAmount.add(referralBonus);\r\n\t\t}\r\n\r\n\t\trequire(totalAmount > 0, \"User has no dividends\");\r\n\r\n\t\tuint256 contractBalance = address(this).balance;\r\n\t\tif (contractBalance < totalAmount) {\r\n\t\t\ttotalAmount = contractBalance;\r\n\t\t}\r\n\r\n\t\tuser.checkpoint = block.timestamp;\r\n\t\tpayable(msg.sender).transfer(totalAmount);\r\n\r\n\t\temit Withdrawn(msg.sender, totalAmount);\r\n\t}\r\n\r\n\tfunction getContractBalance() public view returns (uint256) {\r\n\t\treturn address(this).balance;\r\n\t}\r\n\r\n\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\r\n\t\ttime = plans[plan].time;\r\n\t\tpercent = plans[plan].percent;\r\n\t}\r\n\r\n\tfunction getPercent(uint8 plan) public view returns (uint256) {\r\n\t\tif (block.timestamp > startUNIX) {\r\n\t\t\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\r\n\t\t} else {\r\n\t\t\treturn plans[plan].percent;\r\n\t\t}\r\n    }\r\n\r\n\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\r\n\t\tpercent = getPercent(plan);\r\n\r\n\t\tif (plan < 3) {\r\n\t\t\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\r\n\t\t} else if (plan < 6) {\r\n\t\t\tfor (uint256 i = 0; i < plans[plan].time; i++) {\r\n\t\t\t\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\r\n\t}\r\n\r\n\tfunction getUserDividends(address userAddress) public view returns (uint256) {\r\n\t\tUser storage user = users[userAddress];\r\n\r\n\t\tuint256 totalAmount;\r\n\r\n\t\tfor (uint256 i = 0; i < user.deposits.length; i++) {\r\n\t\t\tif (user.checkpoint < user.deposits[i].finish) {\r\n\t\t\t\tif (user.deposits[i].plan < 3) {\r\n\t\t\t\t\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\r\n\t\t\t\t\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\r\n\t\t\t\t\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\r\n\t\t\t\t\tif (from < to) {\r\n\t\t\t\t\t\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (block.timestamp > user.deposits[i].finish) {\r\n\t\t\t\t\ttotalAmount = totalAmount.add(user.deposits[i].profit);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn totalAmount;\r\n\t}\r\n\r\n\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\r\n\t\treturn users[userAddress].checkpoint;\r\n\t}\r\n\r\n\tfunction getUserReferrer(address userAddress) public view returns(address) {\r\n\t\treturn users[userAddress].referrer;\r\n\t}\r\n\r\n\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\r\n\t\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\r\n\t}\r\n\r\n\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\r\n\t\treturn users[userAddress].bonus;\r\n\t}\r\n\r\n\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\r\n\t\treturn users[userAddress].totalBonus;\r\n\t}\r\n\r\n\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\r\n\t\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\r\n\t}\r\n\r\n\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\r\n\t\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\r\n\t}\r\n\r\n\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\r\n\t\treturn users[userAddress].deposits.length;\r\n\t}\r\n\r\n\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\r\n\t\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\r\n\t\t\tamount = amount.add(users[userAddress].deposits[i].amount);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\r\n\t    User storage user = users[userAddress];\r\n\r\n\t\tplan = user.deposits[index].plan;\r\n\t\tpercent = user.deposits[index].percent;\r\n\t\tamount = user.deposits[index].amount;\r\n\t\tprofit = user.deposits[index].profit;\r\n\t\tstart = user.deposits[index].start;\r\n\t\tfinish = user.deposits[index].finish;\r\n\t}\r\n\r\n\tfunction isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/bnbStaker.sol": {
        "BNBStaker": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "name": "FeePayed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "finish",
                  "type": "uint256"
                }
              ],
              "name": "NewDeposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "Newbie",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "referral",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "level",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RefBonus",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "INVEST_MIN_AMOUNT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERCENTS_DIVIDER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERCENT_STEP",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PROJECT_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "REFERRAL_PERCENTS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TIME_STEP",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WITHDRAW_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "claimETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "commissionWallet",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                }
              ],
              "name": "getPercent",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                }
              ],
              "name": "getPlanInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "percent",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                }
              ],
              "name": "getResult",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finish",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserAmountOfDeposits",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserAvailable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserCheckpoint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getUserDepositInfo",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finish",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserDividends",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserDownlineCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserReferralBonus",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserReferralTotalBonus",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserReferralWithdrawn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserReferrer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddress",
                  "type": "address"
                }
              ],
              "name": "getUserTotalDeposits",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "plan",
                  "type": "uint8"
                }
              ],
              "name": "invest",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "launch",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startUNIX",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalRefBonus",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalStaked",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60e0604052603c6080908152601e60a052600a60c05262000025906001906003620002c5565b503480156200003357600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000546001600160a01b0316600760006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060068190555060046040518060400160405280600e815260200160508152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506004604051806040016040528060158152602001604b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060046040518060400160405280601c8152602001604681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060046040518060400160405280600e815260200160508152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506004604051806040016040528060158152602001604b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060046040518060400160405280601c8152602001604681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505062000331565b82805482825590600052602060002090810192821562000308579160200282015b8281111562000308578251829060ff16905591602001919060010190620002e6565b50620003169291506200031a565b5090565b5b808211156200031657600081556001016200031b565b611b9480620003416000396000f3fe6080604052600436106101ee5760003560e01c80636f9fb98a1161010d578063a8aeb6c2116100a0578063d7ffca911161006f578063d7ffca91146105d3578063e262113e1461060c578063e85abe0914610628578063f2fde38b14610661578063fe96973a1461068157600080fd5b8063a8aeb6c214610501578063aecaa63414610537578063c0806b031461056c578063c2341238146105bd57600080fd5b80638da5cb5b116100dc5780638da5cb5b146104a357806397c0262a146104c15780639bff5ddb1461020a578063a51b9533146104e157600080fd5b80636f9fb98a14610445578063715018a6146104585780637e3abeea1461046d578063817b1cd21461048d57600080fd5b806348c37203116101855780635936cf61116101545780635936cf61146103cf578063600d20ce146103ef57806369b11dd51461040f5780636bb185561461042557600080fd5b806348c372031461035957806348d44bd11461039257806357fc86b4146103a7578063581c5ae6146103bc57600080fd5b8063153ab9df116101c1578063153ab9df146102b957806332bc298c146102d957806336144c9a146102f05780633ccfd60b1461034457600080fd5b806301339c21146101f357806301c234a81461020a57806303a93c0c14610233578063040a772e14610299575b600080fd5b3480156101ff57600080fd5b506102086106a1565b005b34801561021657600080fd5b506102206103e881565b6040519081526020015b60405180910390f35b34801561023f57600080fd5b5061027e61024e3660046119c8565b6001600160a01b031660009081526005602081905260409091206003810154600482015491909201549192909190565b6040805193845260208401929092529082015260600161022a565b3480156102a557600080fd5b506102206102b43660046119c8565b6106be565b3480156102c557600080fd5b506102206102d43660046119c8565b6109c2565b3480156102e557600080fd5b506102206201518081565b3480156102fc57600080fd5b5061032c61030b3660046119c8565b6001600160a01b039081166000908152600560205260409020600201541690565b6040516001600160a01b03909116815260200161022a565b34801561035057600080fd5b506102086109f8565b34801561036557600080fd5b506102206103743660046119c8565b6001600160a01b031660009081526005602052604090206007015490565b34801561039e57600080fd5b50610220609681565b3480156103b357600080fd5b50610220600381565b6102086103ca366004611a0b565b610b2d565b3480156103db57600080fd5b5061027e6103ea366004611a6f565b6110e9565b3480156103fb57600080fd5b5061022061040a366004611a3d565b61122f565b34801561041b57600080fd5b5061022060035481565b34801561043157600080fd5b506102206104403660046119c8565b611250565b34801561045157600080fd5b5047610220565b34801561046457600080fd5b5061020861127c565b34801561047957600080fd5b506102206104883660046119c8565b6112f0565b34801561049957600080fd5b5061022060025481565b3480156104af57600080fd5b506000546001600160a01b031661032c565b3480156104cd57600080fd5b5060075461032c906001600160a01b031681565b3480156104ed57600080fd5b506102206104fc366004611a55565b61138c565b34801561050d57600080fd5b5061022061051c3660046119c8565b6001600160a01b031660009081526005602052604090205490565b34801561054357600080fd5b50610557610552366004611a55565b611448565b6040805192835260208301919091520161022a565b34801561057857600080fd5b5061058c6105873660046119e2565b6114c0565b6040805160ff90971687526020870195909552938501929092526060840152608083015260a082015260c00161022a565b3480156105c957600080fd5b5061022060065481565b3480156105df57600080fd5b506102206105ee3660046119c8565b6001600160a01b031660009081526005602052604090206001015490565b34801561061857600080fd5b5061022067016345785d8a000081565b34801561063457600080fd5b506102206106433660046119c8565b6001600160a01b031660009081526005602052604090206006015490565b34801561066d57600080fd5b5061020861067c3660046119c8565b61163a565b34801561068d57600080fd5b5061020861069c366004611a3d565b611670565b6007546001600160a01b031633146106b857600080fd5b42600655565b6001600160a01b038116600090815260056020526040812081805b82548110156109ba5782600001818154811061070557634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050154836001015410156109a857600383600001828154811061074757634e487b7160e01b600052603260045260246000fd5b600091825260209091206006909102015460ff1610156109225760006107ea6103e86107e486600001858154811061078f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101548760000186815481106107c457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002015461173890919063ffffffff16565b906117be565b90506000846001015485600001848154811061081657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401541161083757846001015461086d565b84600001838154811061085a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401545b905060004286600001858154811061089557634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050154106108b257426108e8565b8560000184815481106108d557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501545b90508082101561091a57610917610910620151806107e46109098587611823565b8790611738565b8690611881565b94505b5050506109a8565b82600001818154811061094557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501544211156109a8576109a583600001828154811061098457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301548361188190919063ffffffff16565b91505b806109b281611b2d565b9150506106d9565b509392505050565b60006109f26109d0836106be565b6001600160a01b03841660009081526005602052604090206006015490611881565b92915050565b33600081815260056020526040812091610a11906106be565b90506000610a276127106107e4846103e8611738565b9050610a338282611823565b336000908152600560205260409020600601549092508015610a635760006006850155610a608382611881565b92505b60008311610ab05760405162461bcd60e51b81526020600482015260156024820152745573657220686173206e6f206469766964656e647360581b60448201526064015b60405180910390fd5b4783811015610abd578093505b426001860155604051339085156108fc029086906000818181858888f19350505050158015610af0573d6000803e3d6000fd5b5060405184815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25050505050565b67016345785d8a0000341015610b715760405162461bcd60e51b81526020600482015260096024820152681d1bdbc81cdb585b1b60ba1b6044820152606401610aa7565b60068160ff1610610bb35760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b210383630b760a11b6044820152606401610aa7565b4260065410610c045760405162461bcd60e51b815260206004820152601b60248201527f636f6e7472616374206861736e607420737461727465642079657400000000006044820152606401610aa7565b6000610c176103e86107e4346096611738565b6007546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015610c52573d6000803e3d6000fd5b5060405181815233907f2899dc8c12def1caa9accb64257cf2fd9f960f21bb27a560a757eae3c2ec43c19060200160405180910390a233600090815260056020526040902060028101546001600160a01b0316610df7576001600160a01b03841660009081526005602052604090205415801590610cd957506001600160a01b0384163314155b15610cfc576002810180546001600160a01b0319166001600160a01b0386161790555b60028101546001600160a01b031660005b6003811015610df4576001600160a01b03821615610ddd57610d79600160056000856001600160a01b03166001600160a01b031681526020019081526020016000206003018360038110610d7157634e487b7160e01b600052603260045260246000fd5b015490611881565b6001600160a01b038316600090815260056020526040902060039081019083908110610db557634e487b7160e01b600052603260045260246000fd5b01556001600160a01b0391821660009081526005602052604090206002015490911690610de2565b610df4565b80610dec81611b2d565b915050610d0d565b50505b60028101546001600160a01b031615610f685760028101546001600160a01b031660005b6003811015610f65576001600160a01b03821615610f4e576000610e796103e86107e460018581548110610e5f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001543461173890919063ffffffff16565b6001600160a01b038416600090815260056020526040902060060154909150610ea29082611881565b6001600160a01b0384166000908152600560205260409020600681019190915560070154610ed09082611881565b6001600160a01b038416600081815260056020908152604091829020600701939093555183815284923392917fd41f7e766eebcc7ff42b11ac8691bdf864db4afc0c55e71d629d54edce460d98910160405180910390a4506001600160a01b0391821660009081526005602052604090206002015490911690610f53565b610f65565b80610f5d81611b2d565b915050610e1b565b50505b8054610fa8574260018201556040513381527f9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a9060200160405180910390a15b6000806000610fb786346110e9565b925092509250836000016040518060c001604052808860ff16815260200185815260200134815260200184815260200142815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548160ff021916908360ff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550506110843460025461188190919063ffffffff16565b6002556040805160ff881681526020810185905234818301526060810184905242608082015260a08101839052905133917f84e02daa69bdb087c9fe8d3041abca495512cb14e723070f6d1d4efface82e5d919081900360c00190a250505050505050565b60008060006110f78561138c565b925060038560ff16101561115a5761115360048660ff168154811061112c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206002909102015461114d6103e86107e48888611738565b90611738565b91506111da565b60068560ff1610156111da5760005b60048660ff168154811061118d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001548110156111d8576111c46111bd6103e86107e48761114d8a89611881565b8490611881565b9250806111d081611b2d565b915050611169565b505b61122661121f6201518060048860ff168154811061120857634e487b7160e01b600052603260045260246000fd5b600091825260209091206002909102015490611738565b4290611881565b90509250925092565b6001818154811061123f57600080fd5b600091825260209091200154905081565b6001600160a01b038116600090815260056020526040812060068101546007909101546109f291611823565b6000546001600160a01b031633146112a65760405162461bcd60e51b8152600401610aa790611a8a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000805b6001600160a01b038316600090815260056020526040902054811015611386576001600160a01b0383166000908152600560205260409020805461137291908390811061135157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600201548361188190919063ffffffff16565b91508061137e81611b2d565b9150506112f4565b50919050565b6000600654421115611406576109f26113c2620151806107e46113ba6006544261182390919063ffffffff16565b600390611738565b60048460ff16815481106113e657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015461188190919063ffffffff16565b60048260ff168154811061142a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101549050919050565b919050565b60008060048360ff168154811061146f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154915060048360ff16815481106114a757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101549050915091565b6001600160a01b03821660009081526005602052604081208054829182918291829182919081908990811061150557634e487b7160e01b600052603260045260246000fd5b6000918252602090912060069091020154815460ff909116975081908990811061153f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160010154955080600001888154811061157657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002015494508060000188815481106115ad57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015493508060000188815481106115e457634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160040154925080600001888154811061161b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501549150509295509295509295565b6000546001600160a01b031633146116645760405162461bcd60e51b8152600401610aa790611a8a565b61166d816118e0565b50565b6000546001600160a01b0316331461169a5760405162461bcd60e51b8152600401610aa790611a8a565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146116e7576040519150601f19603f3d011682016040523d82523d6000602084013e6116ec565b606091505b50509050806117345760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610aa7565b5050565b600082611747575060006109f2565b60006117538385611af7565b9050826117608583611ad7565b146117b75760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610aa7565b9392505050565b600080821161180f5760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610aa7565b600061181b8385611ad7565b949350505050565b6000828211156118755760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610aa7565b600061181b8385611b16565b60008061188e8385611abf565b9050838110156117b75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610aa7565b6001600160a01b0381166119455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610aa7565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461144357600080fd5b803560ff8116811461144357600080fd5b6000602082840312156119d9578081fd5b6117b7826119a0565b600080604083850312156119f4578081fd5b6119fd836119a0565b946020939093013593505050565b60008060408385031215611a1d578182fd5b611a26836119a0565b9150611a34602084016119b7565b90509250929050565b600060208284031215611a4e578081fd5b5035919050565b600060208284031215611a66578081fd5b6117b7826119b7565b60008060408385031215611a81578182fd5b6119fd836119b7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611ad257611ad2611b48565b500190565b600082611af257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b1157611b11611b48565b500290565b600082821015611b2857611b28611b48565b500390565b6000600019821415611b4157611b41611b48565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201b8a9ce2d71419e2553202db58d7ea3f99bd42473a488bdece35414c2561d95b64736f6c63430008040033",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x3C PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x1E PUSH1 0xA0 MSTORE PUSH1 0xA PUSH1 0xC0 MSTORE PUSH3 0x25 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x3 PUSH3 0x2C5 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x50 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4B DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x46 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x50 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4B DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x46 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH3 0x331 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x308 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x308 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2E6 JUMP JUMPDEST POP PUSH3 0x316 SWAP3 SWAP2 POP PUSH3 0x31A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x316 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x31B JUMP JUMPDEST PUSH2 0x1B94 DUP1 PUSH3 0x341 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA8AEB6C2 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD7FFCA91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xE262113E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xAECAA634 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC2341238 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x97C0262A EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x9BFF5DDB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xA51B9533 EQ PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48C37203 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x5936CF61 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x5936CF61 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x600D20CE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x69B11DD5 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6BB18556 EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48C37203 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x48D44BD1 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x57FC86B4 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x581C5AE6 EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153AB9DF GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x36144C9A EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1339C21 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x3A93C0C EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x6A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH3 0x15180 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x96 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x127C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x12F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x32C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x557 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x5EE CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x643 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x3 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0xFF AND LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 PUSH2 0x7EA PUSH2 0x3E8 PUSH2 0x7E4 DUP7 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x78F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x1738 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x816 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD GT PUSH2 0x837 JUMPI DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x86D JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x85A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP7 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD LT PUSH2 0x8B2 JUMPI TIMESTAMP PUSH2 0x8E8 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x91A JUMPI PUSH2 0x917 PUSH2 0x910 PUSH3 0x15180 PUSH2 0x7E4 PUSH2 0x909 DUP6 DUP8 PUSH2 0x1823 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1738 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP PUSH2 0x9A8 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x945 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A5 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x984 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD DUP4 PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x9B2 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0x9D0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0xA11 SWAP1 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA27 PUSH2 0x2710 PUSH2 0x7E4 DUP5 PUSH2 0x3E8 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH2 0xA33 DUP3 DUP3 PUSH2 0x1823 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 SWAP3 POP DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0xA60 DUP4 DUP3 PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP4 DUP2 LT ISZERO PUSH2 0xABD JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1D1BDBC81CDB585B1B PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0xFF AND LT PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B210383630B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 SLOAD LT PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206861736E60742073746172746564207965740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC17 PUSH2 0x3E8 PUSH2 0x7E4 CALLVALUE PUSH1 0x96 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2899DC8C12DEF1CAA9ACCB64257CF2FD9F960F21BB27A560A757EAE3C2EC43C1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xCFC JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xDDD JUMPI PUSH2 0xD79 PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xDB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST DUP1 PUSH2 0xDEC DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD0D JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF68 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF4E JUMPI PUSH1 0x0 PUSH2 0xE79 PUSH2 0x3E8 PUSH2 0x7E4 PUSH1 0x1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xE5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD CALLVALUE PUSH2 0x1738 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xEA2 SWAP1 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 ADD SLOAD PUSH2 0xED0 SWAP1 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x7 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE DUP5 SWAP3 CALLER SWAP3 SWAP2 PUSH32 0xD41F7E766EEBCC7FF42B11AC8691BDF864DB4AFC0C55E71D629D54EDCE460D98 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0xF65 JUMP JUMPDEST DUP1 PUSH2 0xF5D DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE1B JUMP JUMPDEST POP POP JUMPDEST DUP1 SLOAD PUSH2 0xFA8 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFB7 DUP7 CALLVALUE PUSH2 0x10E9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE POP POP PUSH2 0x1084 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLVALUE DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x84E02DAA69BDB087C9FE8D3041ABCA495512CB14E723070F6D1D4EFFACE82E5D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10F7 DUP6 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1153 PUSH1 0x4 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x112C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x114D PUSH2 0x3E8 PUSH2 0x7E4 DUP9 DUP9 PUSH2 0x1738 JUMP JUMPDEST SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x11DA JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x118D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11C4 PUSH2 0x11BD PUSH2 0x3E8 PUSH2 0x7E4 DUP8 PUSH2 0x114D DUP11 DUP10 PUSH2 0x1881 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x11D0 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1169 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1226 PUSH2 0x121F PUSH3 0x15180 PUSH1 0x4 DUP9 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x1738 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH2 0x9F2 SWAP2 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1372 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1351 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x137E DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F4 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1406 JUMPI PUSH2 0x9F2 PUSH2 0x13C2 PUSH3 0x15180 PUSH2 0x7E4 PUSH2 0x13BA PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1823 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x4 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x13E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x142A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x146F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x4 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP2 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x1505 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD DUP2 SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP8 POP DUP2 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x153F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD SWAP5 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x15AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD SWAP4 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x15E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD SWAP3 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x161B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x166D DUP2 PUSH2 0x18E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x169A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1747 JUMPI POP PUSH1 0x0 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP4 DUP6 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1760 DUP6 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST EQ PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x180F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP4 DUP6 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP4 DUP6 PUSH2 0x1B16 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x188E DUP4 DUP6 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B7 DUP3 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19FD DUP4 PUSH2 0x19A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A26 DUP4 PUSH2 0x19A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A34 PUSH1 0x20 DUP5 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A66 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B7 DUP3 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A81 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x19FD DUP4 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD2 PUSH2 0x1B48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B11 JUMPI PUSH2 0x1B11 PUSH2 0x1B48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B28 PUSH2 0x1B48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B41 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL DUP11 SWAP13 0xE2 0xD7 EQ NOT 0xE2 SSTORE ORIGIN MUL 0xDB PC 0xD7 0xEA EXTCODEHASH SWAP10 0xBD TIMESTAMP SELFBALANCE GASPRICE 0x48 DUP12 0xDE 0xCE CALLDATALOAD COINBASE 0x4C 0x25 PUSH2 0xD95B PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "2208:49:0:-:0;2083:8269;2208:49;2246:2;2083:8269;2208:49;;;2250:2;2208:49;;2254:2;2208:49;;;;;;;;:::i;:::-;;3492:287;;;;;;;;;-1:-1:-1;983:17:0;1026:18;;-1:-1:-1;;;;;;1026:18:0;518:10;1026:18;;;;;1060:43;;518:10;;;;1060:43;;983:17;;1060:43;-1:-1:-1;1157:7:0;1184:6;-1:-1:-1;;;;;1184:6:0;3511:16;;:35;;;;;-1:-1:-1;;;;;3511:35:0;;;;;-1:-1:-1;;;;;3511:35:0;;;;;;3563:1;3551:9;:13;;;;3575:5;3586:12;;;;;;;;3591:2;3586:12;;;;3595:2;3586:12;;;3575:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3610:5;3621:12;;;;;;;;3626:2;3621:12;;;;3630:2;3621:12;;;3610:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:5;3656:12;;;;;;;;3661:2;3656:12;;;;3665:2;3656:12;;;3645:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:5;3691:12;;;;;;;;3696:2;3691:12;;;;3700:2;3691:12;;;3680:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3715:5;3726:12;;;;;;;;3731:2;3726:12;;;;3735:2;3726:12;;;3715:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:5;3761:12;;;;;;;;3766:2;3761:12;;;;3770:2;3761:12;;;3750:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:8269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2083:8269:0;;;-1:-1:-1;2083:8269:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8599:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:1"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:173:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "239:109:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "249:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "271:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "326:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "335:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "338:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "328:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "328:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "328:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "300:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "311:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "318:4:1",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "307:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "307:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "297:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "297:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "290:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "290:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "287:2:1"
                            }
                          ]
                        },
                        "name": "abi_decode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "218:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "229:5:1",
                            "type": ""
                          }
                        ],
                        "src": "192:156:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "423:126:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "469:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "478:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "486:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "471:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "471:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "471:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "444:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "453:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "440:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "440:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "465:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "436:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "433:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "504:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "533:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "514:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "514:29:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "504:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "389:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "400:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "412:6:1",
                            "type": ""
                          }
                        ],
                        "src": "353:196:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "641:177:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "687:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "696:6:1"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "704:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "689:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "689:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "689:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "662:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "671:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "658:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "658:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "654:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "654:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "651:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "722:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "751:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "732:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "732:29:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "722:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "770:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "797:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "808:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "793:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "793:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "780:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "599:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "610:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "622:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "630:6:1",
                            "type": ""
                          }
                        ],
                        "src": "554:264:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "908:181:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "954:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "963:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "971:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "956:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "956:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "956:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "929:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "938:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "925:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "925:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "950:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "921:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "921:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "918:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "989:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1018:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "999:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "999:29:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "989:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1037:46:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1068:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1079:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1064:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1064:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1047:16:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1047:36:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1037:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "866:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "877:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "889:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "897:6:1",
                            "type": ""
                          }
                        ],
                        "src": "823:266:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1164:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1210:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1219:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1227:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1212:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1212:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1212:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1185:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1194:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1181:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1181:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1206:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1177:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1177:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1174:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1245:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1268:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1255:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1255:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1130:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1141:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1153:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1094:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1357:124:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1403:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1412:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1420:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1405:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1405:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1405:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1378:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1387:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1374:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1374:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1399:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1370:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1370:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1367:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1438:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1465:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1448:16:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1448:27:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1438:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1323:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1334:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1346:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1289:192:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1571:175:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1617:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1626:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1634:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1619:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1619:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1619:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1592:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1601:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1588:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1588:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1613:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1584:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1584:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1581:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1652:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1679:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1662:16:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1662:27:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1652:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1698:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1725:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1736:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1721:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1721:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1708:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1708:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1698:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1529:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1540:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1552:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1560:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1486:260:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1942:14:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1944:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1951:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1926:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1934:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1751:205:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2062:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2072:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2084:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2095:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2080:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2080:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2072:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2114:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2129:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2145:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2150:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2141:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2141:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2154:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2137:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2137:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2125:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2125:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2107:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2107:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2107:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2031:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2042:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2053:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1961:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2286:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2296:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2308:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2319:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2304:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2304:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2296:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2338:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2353:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2369:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2374:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2365:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2365:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2378:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2361:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2361:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2349:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2349:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2331:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2331:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2331:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2255:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2266:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2277:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2169:219:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2567:171:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2584:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2595:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2577:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2577:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2577:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2618:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2629:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2614:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2614:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2634:2:1",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2607:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2607:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2607:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2657:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2668:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2653:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2653:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2673:23:1",
                                    "type": "",
                                    "value": "User has no dividends"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2646:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2646:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2646:51:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2706:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2718:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2729:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2714:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2714:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2706:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2544:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2558:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2393:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2917:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2934:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2945:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2927:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2927:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2927:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2968:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2979:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2964:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2964:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2984:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2957:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2957:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2957:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3007:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3018:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3003:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3003:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3023:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2996:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2996:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2996:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3078:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3089:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3074:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3074:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3094:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3067:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3067:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3067:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3112:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3124:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3135:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3120:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3120:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3112:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2894:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2908:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2743:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3324:177:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3341:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3352:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3334:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3334:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3334:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3375:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3386:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3371:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3371:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3391:2:1",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3364:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3364:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3364:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3414:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3425:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3410:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3410:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3430:29:1",
                                    "type": "",
                                    "value": "SafeMath: addition overflow"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3403:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3403:57:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3403:57:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3469:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3481:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3492:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3477:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3477:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3469:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3301:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3315:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3150:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3680:158:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3697:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3708:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3690:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3690:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3690:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3731:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3742:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3727:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3727:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3747:1:1",
                                    "type": "",
                                    "value": "9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3720:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3720:29:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3720:29:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3769:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3780:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3765:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3765:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3785:11:1",
                                    "type": "",
                                    "value": "too small"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3758:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3758:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3758:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3806:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3818:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3829:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3814:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3814:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3806:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3657:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3671:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3506:332:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4017:170:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4034:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4045:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4027:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4027:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4027:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4068:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4079:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4064:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4064:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4084:2:1",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4057:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4057:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4057:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4107:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4118:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4103:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4103:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4123:22:1",
                                    "type": "",
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4096:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4096:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4096:50:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4155:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4167:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4178:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4163:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4163:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4155:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3994:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4008:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3843:344:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4366:180:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4383:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4394:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4376:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4376:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4376:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4417:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4428:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4433:2:1",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4406:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4406:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4406:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4456:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4467:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4452:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4452:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4472:32:1",
                                    "type": "",
                                    "value": "SafeMath: subtraction overflow"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4445:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4445:60:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4445:60:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4514:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4526:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4537:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4522:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4522:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4514:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4343:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4357:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4192:354:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4725:176:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4742:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4753:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4735:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4735:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4735:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4776:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4787:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4772:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4772:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4792:2:1",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4765:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4765:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4765:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4815:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4826:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4811:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4811:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4831:28:1",
                                    "type": "",
                                    "value": "SafeMath: division by zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4804:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4804:56:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4804:56:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4869:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4881:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4892:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4877:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4877:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4869:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4702:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4716:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4551:350:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5080:223:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5097:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5108:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5090:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5090:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5090:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5131:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5142:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5127:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5127:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5147:2:1",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5120:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5120:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5120:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5170:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5181:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5166:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5166:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5186:34:1",
                                    "type": "",
                                    "value": "SafeMath: multiplication overflo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5159:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5159:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5159:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5241:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5252:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5237:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5237:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5257:3:1",
                                    "type": "",
                                    "value": "w"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5230:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5230:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5230:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5270:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5282:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5293:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5278:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5278:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5270:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5057:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5071:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4906:397:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5482:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5499:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5510:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5492:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5492:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5492:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5533:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5544:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5529:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5529:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5549:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5522:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5522:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5522:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5572:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5583:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5568:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5568:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5588:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5561:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5561:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5561:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5632:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5644:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5655:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5640:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5640:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5632:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5459:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5473:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5308:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5843:177:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5860:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5871:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5853:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5853:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5894:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5905:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5890:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5890:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5910:2:1",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5883:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5883:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5883:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5933:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5944:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5929:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5929:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5949:29:1",
                                    "type": "",
                                    "value": "contract hasn`t started yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5922:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5922:57:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5922:57:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5988:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6000:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6011:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5996:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5996:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b33c03cfd03429813db412eb7bb4ad64b03c4d13bf57c68432728be01c361b11__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5820:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5834:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5669:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6199:162:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6216:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6227:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6209:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6209:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6209:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6250:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6261:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6246:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6246:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6266:2:1",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6239:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6239:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6239:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6289:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6300:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6285:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6285:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6305:14:1",
                                    "type": "",
                                    "value": "Invalid plan"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6278:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6278:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6278:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6329:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6341:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6352:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6337:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6337:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6329:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6176:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6190:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6025:336:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6467:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6477:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6489:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6500:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6485:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6485:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6477:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6519:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6530:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6512:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6512:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6512:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6436:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6447:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6458:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6366:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6677:119:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6687:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6699:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6710:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6695:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6695:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6687:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6729:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6740:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6722:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6722:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6722:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6767:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6778:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6763:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6763:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6783:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6756:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6756:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6756:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6638:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6649:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6657:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6668:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6548:248:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6958:162:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6968:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6980:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6991:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6976:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6976:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6968:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7010:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7021:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7003:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7003:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7003:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7048:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7059:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7044:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7044:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7064:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7037:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7037:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7037:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7091:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7102:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7087:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7087:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7107:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7080:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7080:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7080:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6911:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6922:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6930:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6938:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6949:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6801:319:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7362:305:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7372:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7384:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7395:3:1",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7380:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7380:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7372:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7415:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7430:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7438:4:1",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7426:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7426:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7408:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7408:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7408:36:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7464:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7475:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7460:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7460:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7480:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7453:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7453:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7453:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7507:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7518:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7503:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7503:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7523:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7496:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7496:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7496:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7550:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7561:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7546:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7546:18:1"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7566:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7539:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7539:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7539:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7593:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7604:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7589:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7589:19:1"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7610:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7582:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7582:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7582:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7637:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7648:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7633:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7633:19:1"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "7654:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7626:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7626:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7626:35:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7291:9:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "7302:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "7310:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7318:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7326:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7334:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7342:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7353:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7125:542:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7720:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7747:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7749:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7749:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7749:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7736:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "7743:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7739:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7739:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7733:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7733:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7730:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7778:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7789:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7792:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7785:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7785:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7778:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7703:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7706:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "7712:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7672:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7851:171:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7882:111:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "7903:1:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7910:3:1",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7915:10:1",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "7906:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7906:20:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7896:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7896:31:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7896:31:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7947:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7950:4:1",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7940:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7940:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7940:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "7975:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7978:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7968:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7968:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7968:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7871:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7864:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7864:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7861:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8002:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8011:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8014:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "8007:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8007:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "8002:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7836:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7839:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "7845:1:1",
                            "type": ""
                          }
                        ],
                        "src": "7805:217:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8079:116:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8138:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8140:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8140:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8140:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "8110:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "8103:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8103:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "8096:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8096:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "8118:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8129:1:1",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "8125:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8125:6:1"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "8133:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "8121:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8121:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8115:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8115:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8092:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8092:45:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8089:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8169:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8184:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8187:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "8180:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8180:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "8169:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8058:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8061:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "8067:7:1",
                            "type": ""
                          }
                        ],
                        "src": "8027:168:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8249:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8271:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8273:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8273:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8273:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8265:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8268:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8262:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8262:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8259:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8302:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8314:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8317:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8310:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8310:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "8302:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8231:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8234:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "8240:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8200:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8377:88:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8408:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8410:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8410:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8410:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8393:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8404:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "8400:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8400:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "8390:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8390:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8387:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8439:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8450:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8457:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8446:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8446:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "8439:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8359:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "8369:3:1",
                            "type": ""
                          }
                        ],
                        "src": "8330:135:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8502:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8519:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8526:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8531:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8522:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8522:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8512:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8512:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8512:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8559:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8562:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8552:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8552:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8552:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8583:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8586:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8576:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8576:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8576:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "8470:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"User has no dividends\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"too small\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"SafeMath: subtraction overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"SafeMath: division by zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b33c03cfd03429813db412eb7bb4ad64b03c4d13bf57c68432728be01c361b11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"contract hasn`t started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid plan\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106101ee5760003560e01c80636f9fb98a1161010d578063a8aeb6c2116100a0578063d7ffca911161006f578063d7ffca91146105d3578063e262113e1461060c578063e85abe0914610628578063f2fde38b14610661578063fe96973a1461068157600080fd5b8063a8aeb6c214610501578063aecaa63414610537578063c0806b031461056c578063c2341238146105bd57600080fd5b80638da5cb5b116100dc5780638da5cb5b146104a357806397c0262a146104c15780639bff5ddb1461020a578063a51b9533146104e157600080fd5b80636f9fb98a14610445578063715018a6146104585780637e3abeea1461046d578063817b1cd21461048d57600080fd5b806348c37203116101855780635936cf61116101545780635936cf61146103cf578063600d20ce146103ef57806369b11dd51461040f5780636bb185561461042557600080fd5b806348c372031461035957806348d44bd11461039257806357fc86b4146103a7578063581c5ae6146103bc57600080fd5b8063153ab9df116101c1578063153ab9df146102b957806332bc298c146102d957806336144c9a146102f05780633ccfd60b1461034457600080fd5b806301339c21146101f357806301c234a81461020a57806303a93c0c14610233578063040a772e14610299575b600080fd5b3480156101ff57600080fd5b506102086106a1565b005b34801561021657600080fd5b506102206103e881565b6040519081526020015b60405180910390f35b34801561023f57600080fd5b5061027e61024e3660046119c8565b6001600160a01b031660009081526005602081905260409091206003810154600482015491909201549192909190565b6040805193845260208401929092529082015260600161022a565b3480156102a557600080fd5b506102206102b43660046119c8565b6106be565b3480156102c557600080fd5b506102206102d43660046119c8565b6109c2565b3480156102e557600080fd5b506102206201518081565b3480156102fc57600080fd5b5061032c61030b3660046119c8565b6001600160a01b039081166000908152600560205260409020600201541690565b6040516001600160a01b03909116815260200161022a565b34801561035057600080fd5b506102086109f8565b34801561036557600080fd5b506102206103743660046119c8565b6001600160a01b031660009081526005602052604090206007015490565b34801561039e57600080fd5b50610220609681565b3480156103b357600080fd5b50610220600381565b6102086103ca366004611a0b565b610b2d565b3480156103db57600080fd5b5061027e6103ea366004611a6f565b6110e9565b3480156103fb57600080fd5b5061022061040a366004611a3d565b61122f565b34801561041b57600080fd5b5061022060035481565b34801561043157600080fd5b506102206104403660046119c8565b611250565b34801561045157600080fd5b5047610220565b34801561046457600080fd5b5061020861127c565b34801561047957600080fd5b506102206104883660046119c8565b6112f0565b34801561049957600080fd5b5061022060025481565b3480156104af57600080fd5b506000546001600160a01b031661032c565b3480156104cd57600080fd5b5060075461032c906001600160a01b031681565b3480156104ed57600080fd5b506102206104fc366004611a55565b61138c565b34801561050d57600080fd5b5061022061051c3660046119c8565b6001600160a01b031660009081526005602052604090205490565b34801561054357600080fd5b50610557610552366004611a55565b611448565b6040805192835260208301919091520161022a565b34801561057857600080fd5b5061058c6105873660046119e2565b6114c0565b6040805160ff90971687526020870195909552938501929092526060840152608083015260a082015260c00161022a565b3480156105c957600080fd5b5061022060065481565b3480156105df57600080fd5b506102206105ee3660046119c8565b6001600160a01b031660009081526005602052604090206001015490565b34801561061857600080fd5b5061022067016345785d8a000081565b34801561063457600080fd5b506102206106433660046119c8565b6001600160a01b031660009081526005602052604090206006015490565b34801561066d57600080fd5b5061020861067c3660046119c8565b61163a565b34801561068d57600080fd5b5061020861069c366004611a3d565b611670565b6007546001600160a01b031633146106b857600080fd5b42600655565b6001600160a01b038116600090815260056020526040812081805b82548110156109ba5782600001818154811061070557634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050154836001015410156109a857600383600001828154811061074757634e487b7160e01b600052603260045260246000fd5b600091825260209091206006909102015460ff1610156109225760006107ea6103e86107e486600001858154811061078f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101548760000186815481106107c457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002015461173890919063ffffffff16565b906117be565b90506000846001015485600001848154811061081657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401541161083757846001015461086d565b84600001838154811061085a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600401545b905060004286600001858154811061089557634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160050154106108b257426108e8565b8560000184815481106108d557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501545b90508082101561091a57610917610910620151806107e46109098587611823565b8790611738565b8690611881565b94505b5050506109a8565b82600001818154811061094557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501544211156109a8576109a583600001828154811061098457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301548361188190919063ffffffff16565b91505b806109b281611b2d565b9150506106d9565b509392505050565b60006109f26109d0836106be565b6001600160a01b03841660009081526005602052604090206006015490611881565b92915050565b33600081815260056020526040812091610a11906106be565b90506000610a276127106107e4846103e8611738565b9050610a338282611823565b336000908152600560205260409020600601549092508015610a635760006006850155610a608382611881565b92505b60008311610ab05760405162461bcd60e51b81526020600482015260156024820152745573657220686173206e6f206469766964656e647360581b60448201526064015b60405180910390fd5b4783811015610abd578093505b426001860155604051339085156108fc029086906000818181858888f19350505050158015610af0573d6000803e3d6000fd5b5060405184815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25050505050565b67016345785d8a0000341015610b715760405162461bcd60e51b81526020600482015260096024820152681d1bdbc81cdb585b1b60ba1b6044820152606401610aa7565b60068160ff1610610bb35760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b210383630b760a11b6044820152606401610aa7565b4260065410610c045760405162461bcd60e51b815260206004820152601b60248201527f636f6e7472616374206861736e607420737461727465642079657400000000006044820152606401610aa7565b6000610c176103e86107e4346096611738565b6007546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015610c52573d6000803e3d6000fd5b5060405181815233907f2899dc8c12def1caa9accb64257cf2fd9f960f21bb27a560a757eae3c2ec43c19060200160405180910390a233600090815260056020526040902060028101546001600160a01b0316610df7576001600160a01b03841660009081526005602052604090205415801590610cd957506001600160a01b0384163314155b15610cfc576002810180546001600160a01b0319166001600160a01b0386161790555b60028101546001600160a01b031660005b6003811015610df4576001600160a01b03821615610ddd57610d79600160056000856001600160a01b03166001600160a01b031681526020019081526020016000206003018360038110610d7157634e487b7160e01b600052603260045260246000fd5b015490611881565b6001600160a01b038316600090815260056020526040902060039081019083908110610db557634e487b7160e01b600052603260045260246000fd5b01556001600160a01b0391821660009081526005602052604090206002015490911690610de2565b610df4565b80610dec81611b2d565b915050610d0d565b50505b60028101546001600160a01b031615610f685760028101546001600160a01b031660005b6003811015610f65576001600160a01b03821615610f4e576000610e796103e86107e460018581548110610e5f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001543461173890919063ffffffff16565b6001600160a01b038416600090815260056020526040902060060154909150610ea29082611881565b6001600160a01b0384166000908152600560205260409020600681019190915560070154610ed09082611881565b6001600160a01b038416600081815260056020908152604091829020600701939093555183815284923392917fd41f7e766eebcc7ff42b11ac8691bdf864db4afc0c55e71d629d54edce460d98910160405180910390a4506001600160a01b0391821660009081526005602052604090206002015490911690610f53565b610f65565b80610f5d81611b2d565b915050610e1b565b50505b8054610fa8574260018201556040513381527f9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a9060200160405180910390a15b6000806000610fb786346110e9565b925092509250836000016040518060c001604052808860ff16815260200185815260200134815260200184815260200142815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548160ff021916908360ff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550506110843460025461188190919063ffffffff16565b6002556040805160ff881681526020810185905234818301526060810184905242608082015260a08101839052905133917f84e02daa69bdb087c9fe8d3041abca495512cb14e723070f6d1d4efface82e5d919081900360c00190a250505050505050565b60008060006110f78561138c565b925060038560ff16101561115a5761115360048660ff168154811061112c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206002909102015461114d6103e86107e48888611738565b90611738565b91506111da565b60068560ff1610156111da5760005b60048660ff168154811061118d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001548110156111d8576111c46111bd6103e86107e48761114d8a89611881565b8490611881565b9250806111d081611b2d565b915050611169565b505b61122661121f6201518060048860ff168154811061120857634e487b7160e01b600052603260045260246000fd5b600091825260209091206002909102015490611738565b4290611881565b90509250925092565b6001818154811061123f57600080fd5b600091825260209091200154905081565b6001600160a01b038116600090815260056020526040812060068101546007909101546109f291611823565b6000546001600160a01b031633146112a65760405162461bcd60e51b8152600401610aa790611a8a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000805b6001600160a01b038316600090815260056020526040902054811015611386576001600160a01b0383166000908152600560205260409020805461137291908390811061135157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600201548361188190919063ffffffff16565b91508061137e81611b2d565b9150506112f4565b50919050565b6000600654421115611406576109f26113c2620151806107e46113ba6006544261182390919063ffffffff16565b600390611738565b60048460ff16815481106113e657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015461188190919063ffffffff16565b60048260ff168154811061142a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101549050919050565b919050565b60008060048360ff168154811061146f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154915060048360ff16815481106114a757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101549050915091565b6001600160a01b03821660009081526005602052604081208054829182918291829182919081908990811061150557634e487b7160e01b600052603260045260246000fd5b6000918252602090912060069091020154815460ff909116975081908990811061153f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160010154955080600001888154811061157657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002015494508060000188815481106115ad57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015493508060000188815481106115e457634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160040154925080600001888154811061161b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501549150509295509295509295565b6000546001600160a01b031633146116645760405162461bcd60e51b8152600401610aa790611a8a565b61166d816118e0565b50565b6000546001600160a01b0316331461169a5760405162461bcd60e51b8152600401610aa790611a8a565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146116e7576040519150601f19603f3d011682016040523d82523d6000602084013e6116ec565b606091505b50509050806117345760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610aa7565b5050565b600082611747575060006109f2565b60006117538385611af7565b9050826117608583611ad7565b146117b75760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610aa7565b9392505050565b600080821161180f5760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610aa7565b600061181b8385611ad7565b949350505050565b6000828211156118755760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610aa7565b600061181b8385611b16565b60008061188e8385611abf565b9050838110156117b75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610aa7565b6001600160a01b0381166119455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610aa7565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461144357600080fd5b803560ff8116811461144357600080fd5b6000602082840312156119d9578081fd5b6117b7826119a0565b600080604083850312156119f4578081fd5b6119fd836119a0565b946020939093013593505050565b60008060408385031215611a1d578182fd5b611a26836119a0565b9150611a34602084016119b7565b90509250929050565b600060208284031215611a4e578081fd5b5035919050565b600060208284031215611a66578081fd5b6117b7826119b7565b60008060408385031215611a81578182fd5b6119fd836119b7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611ad257611ad2611b48565b500190565b600082611af257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b1157611b11611b48565b500290565b600082821015611b2857611b28611b48565b500390565b6000600019821415611b4157611b41611b48565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201b8a9ce2d71419e2553202db58d7ea3f99bd42473a488bdece35414c2561d95b64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA8AEB6C2 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD7FFCA91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xE262113E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xAECAA634 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC2341238 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x97C0262A EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x9BFF5DDB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xA51B9533 EQ PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48C37203 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x5936CF61 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x5936CF61 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x600D20CE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x69B11DD5 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6BB18556 EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48C37203 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x48D44BD1 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x57FC86B4 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x581C5AE6 EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153AB9DF GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x36144C9A EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1339C21 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x3A93C0C EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x6A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH3 0x15180 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x96 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x127C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x12F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x32C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x557 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x5EE CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x643 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x3 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0xFF AND LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 PUSH2 0x7EA PUSH2 0x3E8 PUSH2 0x7E4 DUP7 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x78F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x1738 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x816 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD GT PUSH2 0x837 JUMPI DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x86D JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x85A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP7 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD LT PUSH2 0x8B2 JUMPI TIMESTAMP PUSH2 0x8E8 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x91A JUMPI PUSH2 0x917 PUSH2 0x910 PUSH3 0x15180 PUSH2 0x7E4 PUSH2 0x909 DUP6 DUP8 PUSH2 0x1823 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1738 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP PUSH2 0x9A8 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x945 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A5 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x984 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD DUP4 PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x9B2 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0x9D0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0xA11 SWAP1 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA27 PUSH2 0x2710 PUSH2 0x7E4 DUP5 PUSH2 0x3E8 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH2 0xA33 DUP3 DUP3 PUSH2 0x1823 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 SWAP3 POP DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0xA60 DUP4 DUP3 PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP4 DUP2 LT ISZERO PUSH2 0xABD JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1D1BDBC81CDB585B1B PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0xFF AND LT PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B210383630B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 SLOAD LT PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206861736E60742073746172746564207965740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC17 PUSH2 0x3E8 PUSH2 0x7E4 CALLVALUE PUSH1 0x96 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2899DC8C12DEF1CAA9ACCB64257CF2FD9F960F21BB27A560A757EAE3C2EC43C1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xCFC JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xDDD JUMPI PUSH2 0xD79 PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xDB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST DUP1 PUSH2 0xDEC DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD0D JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF68 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF4E JUMPI PUSH1 0x0 PUSH2 0xE79 PUSH2 0x3E8 PUSH2 0x7E4 PUSH1 0x1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xE5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD CALLVALUE PUSH2 0x1738 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xEA2 SWAP1 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 ADD SLOAD PUSH2 0xED0 SWAP1 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x7 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE DUP5 SWAP3 CALLER SWAP3 SWAP2 PUSH32 0xD41F7E766EEBCC7FF42B11AC8691BDF864DB4AFC0C55E71D629D54EDCE460D98 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0xF65 JUMP JUMPDEST DUP1 PUSH2 0xF5D DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE1B JUMP JUMPDEST POP POP JUMPDEST DUP1 SLOAD PUSH2 0xFA8 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFB7 DUP7 CALLVALUE PUSH2 0x10E9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE POP POP PUSH2 0x1084 CALLVALUE PUSH1 0x2 SLOAD PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLVALUE DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x84E02DAA69BDB087C9FE8D3041ABCA495512CB14E723070F6D1D4EFFACE82E5D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10F7 DUP6 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1153 PUSH1 0x4 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x112C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x114D PUSH2 0x3E8 PUSH2 0x7E4 DUP9 DUP9 PUSH2 0x1738 JUMP JUMPDEST SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x11DA JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x118D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11C4 PUSH2 0x11BD PUSH2 0x3E8 PUSH2 0x7E4 DUP8 PUSH2 0x114D DUP11 DUP10 PUSH2 0x1881 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x11D0 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1169 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1226 PUSH2 0x121F PUSH3 0x15180 PUSH1 0x4 DUP9 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1208 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x1738 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH2 0x9F2 SWAP2 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1372 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1351 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x137E DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F4 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1406 JUMPI PUSH2 0x9F2 PUSH2 0x13C2 PUSH3 0x15180 PUSH2 0x7E4 PUSH2 0x13BA PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1823 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x4 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x13E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1881 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x142A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x146F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x4 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP2 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x1505 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD DUP2 SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP8 POP DUP2 SWAP1 DUP10 SWAP1 DUP2 LT PUSH2 0x153F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD SLOAD SWAP5 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x15AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x3 ADD SLOAD SWAP4 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x15E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD SWAP3 POP DUP1 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x161B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD SLOAD SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x166D DUP2 PUSH2 0x18E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x169A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1747 JUMPI POP PUSH1 0x0 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1753 DUP4 DUP6 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1760 DUP6 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST EQ PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x180F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP4 DUP6 PUSH2 0x1AD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP4 DUP6 PUSH2 0x1B16 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x188E DUP4 DUP6 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B7 DUP3 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19FD DUP4 PUSH2 0x19A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A26 DUP4 PUSH2 0x19A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A34 PUSH1 0x20 DUP5 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A66 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B7 DUP3 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A81 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x19FD DUP4 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD2 PUSH2 0x1B48 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B11 JUMPI PUSH2 0x1B11 PUSH2 0x1B48 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B28 PUSH2 0x1B48 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B41 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL DUP11 SWAP13 0xE2 0xD7 EQ NOT 0xE2 SSTORE ORIGIN MUL 0xDB PC 0xD7 0xEA EXTCODEHASH SWAP10 0xBD TIMESTAMP SELFBALANCE GASPRICE 0x48 DUP12 0xDE 0xCE CALLDATALOAD COINBASE 0x4C 0x25 PUSH2 0xD95B PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "2083:8269:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3784:119;;;;;;;;;;;;;:::i;:::-;;2413:47;;;;;;;;;;;;2456:4;2413:47;;;;;6512:25:1;;;6500:2;6485:18;2413:47:0;;;;;;;;8530:205;;;;;;;;;;-1:-1:-1;8530:205:0;;;;;:::i;:::-;-1:-1:-1;;;;;8641:18:0;8601:7;8641:18;;;:5;:18;;;;;;;;:25;;;:28;8671;;;;8701;;;;;8641;;8671;;8701;8530:205;;;;;7003:25:1;;;7059:2;7044:18;;7037:34;;;;7087:18;;;7080:34;6991:2;6976:18;8530:205:0;6958:162:1;7387:886:0;;;;;;;;;;-1:-1:-1;7387:886:0;;;;;:::i;:::-;;:::i;9167:161::-;;;;;;;;;;-1:-1:-1;9167:161:0;;;;;:::i;:::-;;:::i;2467:42::-;;;;;;;;;;;;2503:6;2467:42;;8406:119;;;;;;;;;;-1:-1:-1;8406:119:0;;;;;:::i;:::-;-1:-1:-1;;;;;8493:18:0;;;8472:7;8493:18;;;:5;:18;;;;;:27;;;;;8406:119;;;;-1:-1:-1;;;;;2125:32:1;;;2107:51;;2095:2;2080:18;8406:119:0;2062:102:1;5640:719:0;;;;;;;;;;;;;:::i;8866:131::-;;;;;;;;;;-1:-1:-1;8866:131:0;;;;;:::i;:::-;-1:-1:-1;;;;;8963:18:0;8942:7;8963:18;;;:5;:18;;;;;:29;;;;8866:131;2261:41;;;;;;;;;;;;2299:3;2261:41;;2306:40;;;;;;;;;;;;2345:1;2306:40;;3909:1726;;;;;;:::i;:::-;;:::i;6886:496::-;;;;;;;;;;-1:-1:-1;6886:496:0;;;;;:::i;:::-;;:::i;2208:49::-;;;;;;;;;;-1:-1:-1;2208:49:0;;;;;:::i;:::-;;:::i;2546:28::-;;;;;;;;;;;;;;;;9002:160;;;;;;;;;;-1:-1:-1;9002:160:0;;;;;:::i;:::-;;:::i;6364:98::-;;;;;;;;;;-1:-1:-1;6436:21:0;6364:98;;1333:140;;;;;;;;;;;;;:::i;9472:231::-;;;;;;;;;;-1:-1:-1;9472:231:0;;;;;:::i;:::-;;:::i;2516:26::-;;;;;;;;;;;;;;;;1119:79;;;;;;;;;;-1:-1:-1;1157:7:0;1184:6;-1:-1:-1;;;;;1184:6:0;1119:79;;3054:39;;;;;;;;;;-1:-1:-1;3054:39:0;;;;-1:-1:-1;;;;;3054:39:0;;;6623:258;;;;;;;;;;-1:-1:-1;6623:258:0;;;;;:::i;:::-;;:::i;9333:134::-;;;;;;;;;;-1:-1:-1;9333:134:0;;;;;:::i;:::-;-1:-1:-1;;;;;9428:18:0;9407:7;9428:18;;;:5;:18;;;;;:34;;9333:134;6467:151;;;;;;;;;;-1:-1:-1;6467:151:0;;;;;:::i;:::-;;:::i;:::-;;;;6722:25:1;;;6778:2;6763:18;;6756:34;;;;6695:18;6467:151:0;6677:119:1;9708:471:0;;;;;;;;;;-1:-1:-1;9708:471:0;;;;;:::i;:::-;;:::i;:::-;;;;7438:4:1;7426:17;;;7408:36;;7475:2;7460:18;;7453:34;;;;7503:18;;;7496:34;;;;7561:2;7546:18;;7539:34;7604:3;7589:19;;7582:35;7648:3;7633:19;;7626:35;7395:3;7380:19;9708:471:0;7362:305:1;3026:24:0;;;;;;;;;;;;;;;;8278:123;;;;;;;;;;-1:-1:-1;8278:123:0;;;;;:::i;:::-;-1:-1:-1;;;;;8367:18:0;8346:7;8367:18;;;:5;:18;;;;;:29;;;;8278:123;2151:53;;;;;;;;;;;;2195:9;2151:53;;8740:121;;;;;;;;;;-1:-1:-1;8740:121:0;;;;;:::i;:::-;-1:-1:-1;;;;;8832:18:0;8811:7;8832:18;;;:5;:18;;;;;:24;;;;8740:121;1481:109;;;;;;;;;;-1:-1:-1;1481:109:0;;;;;:::i;:::-;;:::i;1911:167::-;;;;;;;;;;-1:-1:-1;1911:167:0;;;;;:::i;:::-;;:::i;3784:119::-;3842:16;;-1:-1:-1;;;;;3842:16:0;3828:10;:30;3820:39;;;;;;3876:15;3864:9;:27;3784:119::o;7387:886::-;-1:-1:-1;;;;;7489:18:0;;7455:7;7489:18;;;:5;:18;;;;;7455:7;;7540:704;7564:20;;7560:24;;7540:704;;;7619:4;:13;;7633:1;7619:16;;;;;;-1:-1:-1;;;7619:16:0;;;;;;;;;;;;;;;;;;;:23;;;7601:4;:15;;;:41;7597:642;;;7679:1;7655:4;:13;;7669:1;7655:16;;;;;;-1:-1:-1;;;7655:16:0;;;;;;;;;;;;;;;;;;;;;;:21;;;:25;7651:582;;;7690:13;7706:75;2456:4;7706:53;7734:4;:13;;7748:1;7734:16;;;;;;-1:-1:-1;;;7734:16:0;;;;;;;;;;;;;;;;;;;:24;;;7706:4;:13;;7720:1;7706:16;;;;;;-1:-1:-1;;;7706:16:0;;;;;;;;;;;;;;;;;;;:23;;;:27;;:53;;;;:::i;:::-;:57;;:75::i;:::-;7690:91;;7789:12;7829:4;:15;;;7804:4;:13;;7818:1;7804:16;;;;;;-1:-1:-1;;;7804:16:0;;;;;;;;;;;;;;;;;;;:22;;;:40;:83;;7872:4;:15;;;7804:83;;;7847:4;:13;;7861:1;7847:16;;;;;;-1:-1:-1;;;7847:16:0;;;;;;;;;;;;;;;;;;;:22;;;7804:83;7789:98;;7895:10;7934:15;7908:4;:13;;7922:1;7908:16;;;;;;-1:-1:-1;;;7908:16:0;;;;;;;;;;;;;;;;;;;:23;;;:41;:85;;7978:15;7908:85;;;7952:4;:13;;7966:1;7952:16;;;;;;-1:-1:-1;;;7952:16:0;;;;;;;;;;;;;;;;;;;:23;;;7908:85;7895:98;;8012:2;8005:4;:9;8001:102;;;8039:55;8055:38;2503:6;8055:23;8065:12;:2;8072:4;8065:6;:12::i;:::-;8055:5;;:9;:23::i;:38::-;8039:11;;:15;:55::i;:::-;8025:69;;8001:102;7651:582;;;;;;8138:4;:13;;8152:1;8138:16;;;;;;-1:-1:-1;;;8138:16:0;;;;;;;;;;;;;;;;;;;:23;;;8120:15;:41;8116:117;;;8185:40;8201:4;:13;;8215:1;8201:16;;;;;;-1:-1:-1;;;8201:16:0;;;;;;;;;;;;;;;;;;;:23;;;8185:11;:15;;:40;;;;:::i;:::-;8171:54;;8116:117;7586:3;;;;:::i;:::-;;;;7540:704;;;-1:-1:-1;8257:11:0;7387:886;-1:-1:-1;;;7387:886:0:o;9167:161::-;9234:7;9255:68;9293:29;9310:11;9293:16;:29::i;:::-;-1:-1:-1;;;;;8832:18:0;;8811:7;8832:18;;;:5;:18;;;;;:24;;;9255:37;;:68::i;:::-;9248:75;9167:161;-1:-1:-1;;9167:161:0:o;5640:719::-;5698:10;5672:17;5692;;;:5;:17;;;;;;5738:28;;:16;:28::i;:::-;5716:50;-1:-1:-1;5771:12:0;5786:40;5820:5;5786:29;5716:50;2389:4;5786:15;:29::i;:40::-;5771:55;-1:-1:-1;5845:21:0;:11;5771:55;5845:15;:21::i;:::-;5918:10;5873:21;8832:18;;;:5;:18;;;;;:24;;;5831:35;;-1:-1:-1;5938:17:0;;5934:99;;5976:1;5963:10;;;:14;5997:30;:11;6013:13;5997:15;:30::i;:::-;5983:44;;5934:99;6061:1;6047:11;:15;6039:49;;;;-1:-1:-1;;;6039:49:0;;2595:2:1;6039:49:0;;;2577:21:1;2634:2;2614:18;;;2607:30;-1:-1:-1;;;2653:18:1;;;2646:51;2714:18;;6039:49:0;;;;;;;;;6121:21;6151:29;;;6147:76;;;6202:15;6188:29;;6147:76;6247:15;6229;;;:33;6267:41;;6275:10;;6267:41;;;;;6296:11;;6267:41;;;;6296:11;6275:10;6267:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6320:34:0;;6512:25:1;;;6330:10:0;;6320:34;;6500:2:1;6485:18;6320:34:0;;;;;;;5640:719;;;;;:::o;3909:1726::-;2195:9;3985;:30;;3977:51;;;;-1:-1:-1;;;3977:51:0;;3708:2:1;3977:51:0;;;3690:21:1;3747:1;3727:18;;;3720:29;-1:-1:-1;;;3765:18:1;;;3758:39;3814:18;;3977:51:0;3680:158:1;3977:51:0;4054:1;4047:4;:8;;;4039:33;;;;-1:-1:-1;;;4039:33:0;;6227:2:1;4039:33:0;;;6209:21:1;6266:2;6246:18;;;6239:30;-1:-1:-1;;;6285:18:1;;;6278:42;6337:18;;4039:33:0;6199:162:1;4039:33:0;4097:15;4085:9;;:27;4077:67;;;;-1:-1:-1;;;4077:67:0;;5871:2:1;4077:67:0;;;5853:21:1;5910:2;5890:18;;;5883:30;5949:29;5929:18;;;5922:57;5996:18;;4077:67:0;5843:177:1;4077:67:0;4151:11;4165:48;2456:4;4165:26;:9;2299:3;4165:13;:26::i;:48::-;4218:16;;:30;;4151:62;;-1:-1:-1;;;;;;4218:16:0;;:30;;;;;4151:62;;4218:16;:30;:16;:30;4151:62;4218:16;:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4258:25:0;;6512::1;;;4267:10:0;;4258:25;;6500:2:1;6485:18;4258:25:0;;;;;;;4316:10;4290:17;4310;;;:5;:17;;;;;4338:13;;;;-1:-1:-1;;;;;4338:13:0;4334:386;;-1:-1:-1;;;;;4377:15:0;;4411:1;4377:15;;;:5;:15;;;;;:31;:35;;;;:61;;-1:-1:-1;;;;;;4416:22:0;;4428:10;4416:22;;4377:61;4373:105;;;4447:13;;;:24;;-1:-1:-1;;;;;;4447:24:0;-1:-1:-1;;;;;4447:24:0;;;;;4373:105;4502:13;;;;-1:-1:-1;;;;;4502:13:0;4485:14;4521:194;4545:1;4541;:5;4521:194;;;-1:-1:-1;;;;;4564:20:0;;;4560:148;;4620:30;4648:1;4620:5;:13;4626:6;-1:-1:-1;;;;;4620:13:0;-1:-1:-1;;;;;4620:13:0;;;;;;;;;;;;:20;;4641:1;4620:23;;;;;-1:-1:-1;;;4620:23:0;;;;;;;;;;;;:27;:30::i;:::-;-1:-1:-1;;;;;4594:13:0;;;;;;:5;:13;;;;;:20;;;;;4615:1;;4594:23;;;;-1:-1:-1;;;4594:23:0;;;;;;;;;;:56;-1:-1:-1;;;;;4667:13:0;;;;;;;:5;:13;;;;;:22;;;;;;;4560:148;;;4703:5;;4560:148;4548:3;;;;:::i;:::-;;;;4521:194;;;;4334:386;;4730:13;;;;-1:-1:-1;;;;;4730:13:0;:27;4726:480;;4784:13;;;;-1:-1:-1;;;;;4784:13:0;4767:14;4803:396;4827:1;4823;:5;4803:396;;;-1:-1:-1;;;;;4846:20:0;;;4842:350;;4876:14;4893:57;2456:4;4893:35;4907:17;4925:1;4907:20;;;;;;-1:-1:-1;;;4907:20:0;;;;;;;;;;;;;;;;;4893:9;:13;;:35;;;;:::i;:57::-;-1:-1:-1;;;;;4980:13:0;;;;;;:5;:13;;;;;:19;;;4876:74;;-1:-1:-1;4980:31:0;;4876:74;4980:23;:31::i;:::-;-1:-1:-1;;;;;4958:13:0;;;;;;:5;:13;;;;;:19;;;:53;;;;5046:24;;;:36;;5075:6;5046:28;:36::i;:::-;-1:-1:-1;;;;;5019:13:0;;;;;;:5;:13;;;;;;;;;:24;;:63;;;;5095:39;6512:25:1;;;5124:1:0;;5112:10;;5019:13;5095:39;;6485:18:1;5095:39:0;;;;;;;-1:-1:-1;;;;;;5151:13:0;;;;;;;:5;:13;;;;;:22;;;;;;;4842:350;;;5187:5;;4842:350;4830:3;;;;:::i;:::-;;;;4803:396;;;;4726:480;;5216:20;;5212:105;;5267:15;5249;;;:33;5293:18;;5300:10;2107:51:1;;5293:18:0;;2095:2:1;2080:18;5293::0;;;;;;;5212:105;5324:15;5341:14;5357;5375:26;5385:4;5391:9;5375;:26::i;:::-;5323:78;;;;;;5406:4;:13;;5425:66;;;;;;;;5433:4;5425:66;;;;;;5439:7;5425:66;;;;5448:9;5425:66;;;;5459:6;5425:66;;;;5467:15;5425:66;;;;5484:6;5425:66;;;5406:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5513:26;5529:9;5513:11;;:15;;:26;;;;:::i;:::-;5499:11;:40;5549:81;;;7438:4:1;7426:17;;7408:36;;7475:2;7460:18;;7453:34;;;5587:9:0;7503:18:1;;;7496:34;7561:2;7546:18;;7539:34;;;5606:15:0;7604:3:1;7589:19;;7582:35;7648:3;7633:19;;7626:35;;;5549:81:0;;5560:10;;5549:81;;;;;;7395:3:1;5549:81:0;;;3909:1726;;;;;;;:::o;6886:496::-;6955:15;6972:14;6988;7019:16;7030:4;7019:10;:16::i;:::-;7009:26;;7053:1;7046:4;:8;;;7042:268;;;7071:64;7118:5;7124:4;7118:11;;;;;;;;-1:-1:-1;;;7118:11:0;;;;;;;;;;;;;;;;;;;;;;:16;7071:42;2456:4;7071:20;:7;7083;7071:11;:20::i;:42::-;:46;;:64::i;:::-;7062:73;;7042:268;;;7158:1;7151:4;:8;;;7147:163;;;7172:9;7167:138;7191:5;7197:4;7191:11;;;;;;;;-1:-1:-1;;;7191:11:0;;;;;;;;;;;;;;;;;;;:16;;;7187:1;:20;7167:138;;;7230:68;7241:56;2456:4;7241:34;7267:7;7242:19;:7;7254:6;7242:11;:19::i;7241:56::-;7230:6;;:10;:68::i;:::-;7221:77;-1:-1:-1;7209:3:0;;;;:::i;:::-;;;;7167:138;;;;7147:163;7325:52;7345:31;2503:6;7345:5;7351:4;7345:11;;;;;;;;-1:-1:-1;;;7345:11:0;;;;;;;;;;;;;;;;;;;;;;:16;;:20;:31::i;:::-;7325:15;;:19;:52::i;:::-;7316:61;;6886:496;;;;;:::o;2208:49::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2208:49:0;:::o;9002:160::-;-1:-1:-1;;;;;9132:18:0;;9077:7;9132:18;;;:5;:18;;;;;:24;;;;9098:29;;;;;:59;;:33;:59::i;1333:140::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;1432:1:::1;1416:6:::0;;1395:40:::1;::::0;-1:-1:-1;;;;;1416:6:0;;::::1;::::0;1395:40:::1;::::0;1432:1;;1395:40:::1;1463:1;1446:19:::0;;-1:-1:-1;;;;;;1446:19:0::1;::::0;;1333:140::o;9472:231::-;9543:14;;9564:135;-1:-1:-1;;;;;9588:18:0;;;;;;:5;:18;;;;;:34;9584:38;;9564:135;;;-1:-1:-1;;;;;9655:18:0;;;;;;:5;:18;;;;;:30;;9644:49;;9655:18;9683:1;;9655:30;;;;-1:-1:-1;;;9655:30:0;;;;;;;;;;;;;;;;;;;:37;;;9644:6;:10;;:49;;;;:::i;:::-;9635:58;-1:-1:-1;9624:3:0;;;;:::i;:::-;;;;9564:135;;;;9472:231;;;:::o;6623:258::-;6676:7;6712:9;;6694:15;:27;6690:184;;;6736:88;6760:63;2503:6;6760:48;6777:30;6797:9;;6777:15;:19;;:30;;;;:::i;:::-;2345:1;;6760:16;:48::i;:63::-;6736:5;6742:4;6736:11;;;;;;;;-1:-1:-1;;;6736:11:0;;;;;;;;;;;;;;;;;;;:19;;;:23;;:88;;;;:::i;6690:184::-;6849:5;6855:4;6849:11;;;;;;;;-1:-1:-1;;;6849:11:0;;;;;;;;;;;;;;;;;;;:19;;;6842:26;;6623:258;;;:::o;6690:184::-;6623:258;;;:::o;6467:151::-;6520:12;6534:15;6563:5;6569:4;6563:11;;;;;;;;-1:-1:-1;;;6563:11:0;;;;;;;;;;;;;;;;;;;:16;;;6556:23;;6594:5;6600:4;6594:11;;;;;;;;-1:-1:-1;;;6594:11:0;;;;;;;;;;;;;;;;;;;:19;;;6584:29;;6467:151;;;:::o;9708:471::-;-1:-1:-1;;;;;9912:18:0;;9792:10;9912:18;;;:5;:18;;;;;9944:20;;9792:10;;;;;;;;;;9912:18;;;9958:5;;9944:20;;;;-1:-1:-1;;;9944:20:0;;;;;;;;;;;;;;;;;;;;;;:25;9984:20;;9944:25;;;;;-1:-1:-1;9984:4:0;;9998:5;;9984:20;;;;-1:-1:-1;;;9984:20:0;;;;;;;;;;;;;;;;;;;:28;;;9974:38;;10026:4;:13;;10040:5;10026:20;;;;;;-1:-1:-1;;;10026:20:0;;;;;;;;;;;;;;;;;;;:27;;;10017:36;;10067:4;:13;;10081:5;10067:20;;;;;;-1:-1:-1;;;10067:20:0;;;;;;;;;;;;;;;;;;;:27;;;10058:36;;10107:4;:13;;10121:5;10107:20;;;;;;-1:-1:-1;;;10107:20:0;;;;;;;;;;;;;;;;;;;:26;;;10099:34;;10147:4;:13;;10161:5;10147:20;;;;;;-1:-1:-1;;;10147:20:0;;;;;;;;;;;;;;;;;;;:27;;;10138:36;;9708:471;;;;;;;;;:::o;1481:109::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;1554:28:::1;1573:8;1554:18;:28::i;:::-;1481:109:::0;:::o;1911:167::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;1976:9:::1;1184:6:::0;;1991:31:::1;::::0;-1:-1:-1;;;;;1184:6:0;;;;2011;;1976:9;1991:31;1976:9;1991:31;2011:6;1184;1991:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:47;;;2041:4;2033:37;;;::::0;-1:-1:-1;;;2033:37:0;;4045:2:1;2033:37:0::1;::::0;::::1;4027:21:1::0;4084:2;4064:18;;;4057:30;-1:-1:-1;;;4103:18:1;;;4096:50;4163:18;;2033:37:0::1;4017:170:1::0;2033:37:0::1;1316:1;1911:167:::0;:::o;10763:250::-;10821:7;10845:6;10841:47;;-1:-1:-1;10875:1:0;10868:8;;10841:47;10900:9;10912:5;10916:1;10912;:5;:::i;:::-;10900:17;-1:-1:-1;10945:1:0;10936:5;10940:1;10900:17;10936:5;:::i;:::-;:10;10928:56;;;;-1:-1:-1;;;10928:56:0;;5108:2:1;10928:56:0;;;5090:21:1;5147:2;5127:18;;;5120:30;5186:34;5166:18;;;5159:62;-1:-1:-1;;;5237:18:1;;;5230:31;5278:19;;10928:56:0;5080:223:1;10928:56:0;11004:1;10763:250;-1:-1:-1;;;10763:250:0:o;11021:179::-;11079:7;11111:1;11107;:5;11099:44;;;;-1:-1:-1;;;11099:44:0;;4753:2:1;11099:44:0;;;4735:21:1;4792:2;4772:18;;;4765:30;4831:28;4811:18;;;4804:56;4877:18;;11099:44:0;4725:176:1;11099:44:0;11154:9;11166:5;11170:1;11166;:5;:::i;:::-;11154:17;11021:179;-1:-1:-1;;;;11021:179:0:o;10571:184::-;10629:7;10662:1;10657;:6;;10649:49;;;;-1:-1:-1;;;10649:49:0;;4394:2:1;10649:49:0;;;4376:21:1;4433:2;4413:18;;;4406:30;4472:32;4452:18;;;4445:60;4522:18;;10649:49:0;4366:180:1;10649:49:0;10709:9;10721:5;10725:1;10721;:5;:::i;10382:181::-;10440:7;;10472:5;10476:1;10472;:5;:::i;:::-;10460:17;;10501:1;10496;:6;;10488:46;;;;-1:-1:-1;;;10488:46:0;;3352:2:1;10488:46:0;;;3334:21:1;3391:2;3371:18;;;3364:30;3430:29;3410:18;;;3403:57;3477:18;;10488:46:0;3324:177:1;1598:266:0;-1:-1:-1;;;;;1686:22:0;;1664:110;;;;-1:-1:-1;;;1664:110:0;;2945:2:1;1664:110:0;;;2927:21:1;2984:2;2964:18;;;2957:30;3023:34;3003:18;;;2996:62;-1:-1:-1;;;3074:18:1;;;3067:36;3120:19;;1664:110:0;2917:228:1;1664:110:0;1811:6;;;1790:38;;-1:-1:-1;;;;;1790:38:0;;;;1811:6;;;1790:38;;;1839:6;:17;;-1:-1:-1;;;;;;1839:17:0;-1:-1:-1;;;;;1839:17:0;;;;;;;;;;1598:266::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;192:156;258:20;;318:4;307:16;;297:27;;287:2;;338:1;335;328:12;353:196;412:6;465:2;453:9;444:7;440:23;436:32;433:2;;;486:6;478;471:22;433:2;514:29;533:9;514:29;:::i;554:264::-;622:6;630;683:2;671:9;662:7;658:23;654:32;651:2;;;704:6;696;689:22;651:2;732:29;751:9;732:29;:::i;:::-;722:39;808:2;793:18;;;;780:32;;-1:-1:-1;;;641:177:1:o;823:266::-;889:6;897;950:2;938:9;929:7;925:23;921:32;918:2;;;971:6;963;956:22;918:2;999:29;1018:9;999:29;:::i;:::-;989:39;;1047:36;1079:2;1068:9;1064:18;1047:36;:::i;:::-;1037:46;;908:181;;;;;:::o;1094:190::-;1153:6;1206:2;1194:9;1185:7;1181:23;1177:32;1174:2;;;1227:6;1219;1212:22;1174:2;-1:-1:-1;1255:23:1;;1164:120;-1:-1:-1;1164:120:1:o;1289:192::-;1346:6;1399:2;1387:9;1378:7;1374:23;1370:32;1367:2;;;1420:6;1412;1405:22;1367:2;1448:27;1465:9;1448:27;:::i;1486:260::-;1552:6;1560;1613:2;1601:9;1592:7;1588:23;1584:32;1581:2;;;1634:6;1626;1619:22;1581:2;1662:27;1679:9;1662:27;:::i;5308:356::-;5510:2;5492:21;;;5529:18;;;5522:30;5588:34;5583:2;5568:18;;5561:62;5655:2;5640:18;;5482:182::o;7672:128::-;7712:3;7743:1;7739:6;7736:1;7733:13;7730:2;;;7749:18;;:::i;:::-;-1:-1:-1;7785:9:1;;7720:80::o;7805:217::-;7845:1;7871;7861:2;;-1:-1:-1;;;7896:31:1;;7950:4;7947:1;7940:15;7978:4;7903:1;7968:15;7861:2;-1:-1:-1;8007:9:1;;7851:171::o;8027:168::-;8067:7;8133:1;8129;8125:6;8121:14;8118:1;8115:21;8110:1;8103:9;8096:17;8092:45;8089:2;;;8140:18;;:::i;:::-;-1:-1:-1;8180:9:1;;8079:116::o;8200:125::-;8240:4;8268:1;8265;8262:8;8259:2;;;8273:18;;:::i;:::-;-1:-1:-1;8310:9:1;;8249:76::o;8330:135::-;8369:3;-1:-1:-1;;8390:17:1;;8387:2;;;8410:18;;:::i;:::-;-1:-1:-1;8457:1:1;8446:13;;8377:88::o;8470:127::-;8531:10;8526:3;8522:20;8519:1;8512:31;8562:4;8559:1;8552:15;8586:4;8583:1;8576:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1412000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "INVEST_MIN_AMOUNT()": "250",
                "PERCENTS_DIVIDER()": "253",
                "PERCENT_STEP()": "274",
                "PROJECT_FEE()": "252",
                "REFERRAL_PERCENTS(uint256)": "2031",
                "TIME_STEP()": "252",
                "WITHDRAW_FEE()": "273",
                "claimETH(uint256)": "infinite",
                "commissionWallet()": "1104",
                "getContractBalance()": "229",
                "getPercent(uint8)": "infinite",
                "getPlanInfo(uint8)": "3874",
                "getResult(uint8,uint256)": "infinite",
                "getUserAmountOfDeposits(address)": "1271",
                "getUserAvailable(address)": "infinite",
                "getUserCheckpoint(address)": "1276",
                "getUserDepositInfo(address,uint256)": "11002",
                "getUserDividends(address)": "infinite",
                "getUserDownlineCount(address)": "3021",
                "getUserReferralBonus(address)": "1320",
                "getUserReferralTotalBonus(address)": "1278",
                "getUserReferralWithdrawn(address)": "2320",
                "getUserReferrer(address)": "1363",
                "getUserTotalDeposits(address)": "infinite",
                "invest(address,uint8)": "infinite",
                "launch()": "21036",
                "owner()": "1076",
                "renounceOwnership()": "24233",
                "startUNIX()": "1095",
                "totalRefBonus()": "1073",
                "totalStaked()": "1096",
                "transferOwnership(address)": "24539",
                "withdraw()": "infinite"
              },
              "internal": {
                "isContract(address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "INVEST_MIN_AMOUNT()": "e262113e",
              "PERCENTS_DIVIDER()": "01c234a8",
              "PERCENT_STEP()": "57fc86b4",
              "PROJECT_FEE()": "48d44bd1",
              "REFERRAL_PERCENTS(uint256)": "600d20ce",
              "TIME_STEP()": "32bc298c",
              "WITHDRAW_FEE()": "9bff5ddb",
              "claimETH(uint256)": "fe96973a",
              "commissionWallet()": "97c0262a",
              "getContractBalance()": "6f9fb98a",
              "getPercent(uint8)": "a51b9533",
              "getPlanInfo(uint8)": "aecaa634",
              "getResult(uint8,uint256)": "5936cf61",
              "getUserAmountOfDeposits(address)": "a8aeb6c2",
              "getUserAvailable(address)": "153ab9df",
              "getUserCheckpoint(address)": "d7ffca91",
              "getUserDepositInfo(address,uint256)": "c0806b03",
              "getUserDividends(address)": "040a772e",
              "getUserDownlineCount(address)": "03a93c0c",
              "getUserReferralBonus(address)": "e85abe09",
              "getUserReferralTotalBonus(address)": "48c37203",
              "getUserReferralWithdrawn(address)": "6bb18556",
              "getUserReferrer(address)": "36144c9a",
              "getUserTotalDeposits(address)": "7e3abeea",
              "invest(address,uint8)": "581c5ae6",
              "launch()": "01339c21",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "startUNIX()": "c2341238",
              "totalRefBonus()": "69b11dd5",
              "totalStaked()": "817b1cd2",
              "transferOwnership(address)": "f2fde38b",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"FeePayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INVEST_MIN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROJECT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"REFERRAL_PERCENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"getPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"getPlanInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmountOfDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDownlineCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralTotalBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startUNIX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRefBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bnbStaker.sol\":\"BNBStaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bnbStaker.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-03-21\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at FtmScan.com on 2022-03-11\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT \\r\\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\\r\\n \\r\\npragma solidity ^0.8;\\r\\n\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(){\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    \\r\\n\\tfunction claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\ncontract BNBStaker is Claimable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\r\\n\\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\\r\\n\\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\\r\\n\\tuint256 constant public PROJECT_FEE = 150;\\r\\n\\tuint256 constant public PERCENT_STEP = 3;\\r\\n\\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\\r\\n\\tuint256 constant public PERCENTS_DIVIDER = 1000;\\r\\n    uint256 constant public TIME_STEP = 1 days;\\r\\n\\t\\r\\n\\tuint256 public totalStaked;\\r\\n\\tuint256 public totalRefBonus;\\r\\n\\r\\n    struct Plan {\\r\\n        uint256 time;\\r\\n        uint256 percent;\\r\\n    }\\r\\n\\r\\n    Plan[] internal plans;\\r\\n\\r\\n\\tstruct Deposit {\\r\\n        uint8 plan;\\r\\n\\t\\tuint256 percent;\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 profit;\\r\\n\\t\\tuint256 start;\\r\\n\\t\\tuint256 finish;\\r\\n\\t}\\r\\n\\r\\n\\tstruct User {\\r\\n\\t\\tDeposit[] deposits;\\r\\n\\t\\tuint256 checkpoint;\\r\\n\\t\\taddress referrer;\\r\\n\\t\\tuint256[3] levels;\\r\\n\\t\\tuint256 bonus;\\r\\n\\t\\tuint256 totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tmapping (address => User) internal users;\\r\\n\\r\\n\\tuint256 public startUNIX;\\r\\n\\taddress payable public commissionWallet;\\r\\n\\r\\n\\tevent Newbie(address user);\\r\\n\\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\\r\\n\\tevent Withdrawn(address indexed user, uint256 amount);\\r\\n\\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\\r\\n\\tevent FeePayed(address indexed user, uint256 totalAmount);\\r\\n\\r\\n\\tconstructor() {\\r\\n\\t\\tcommissionWallet = payable(owner());\\r\\n\\t\\tstartUNIX = 0;\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n\\t}\\r\\n\\r\\n\\tfunction launch() public {\\r\\n        require(msg.sender == commissionWallet);\\r\\n\\t\\tstartUNIX = block.timestamp;\\r\\n\\t\\t\\r\\n    } \\r\\n\\r\\n\\tfunction invest(address referrer, uint8 plan) public payable {\\r\\n\\r\\n\\t\\trequire(msg.value >= INVEST_MIN_AMOUNT,\\\"too small\\\");\\r\\n        require(plan < 6, \\\"Invalid plan\\\");\\r\\n\\t\\trequire(startUNIX < block.timestamp, \\\"contract hasn`t started yet\\\");\\r\\n\\r\\n\\t\\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\\r\\n\\t\\tcommissionWallet.transfer(fee);\\r\\n\\t\\temit FeePayed(msg.sender, fee);\\r\\n\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tif (user.referrer == address(0)) {\\r\\n\\t\\t\\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\\r\\n\\t\\t\\t\\tuser.referrer = referrer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tusers[upline].levels[i] = users[upline].levels[i].add(1);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.referrer != address(0)) {\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tusers[upline].bonus = users[upline].bonus.add(amount);\\r\\n\\t\\t\\t\\t\\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\\r\\n\\t\\t\\t\\t\\temit RefBonus(upline, msg.sender, i, amount);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.deposits.length == 0) {\\r\\n\\t\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\t\\temit Newbie(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\\r\\n\\t\\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\\r\\n\\r\\n\\t\\ttotalStaked = totalStaked.add(msg.value);\\r\\n\\t\\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public {\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tuint256 totalAmount = getUserDividends(msg.sender);\\r\\n\\t\\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\\r\\n\\t\\ttotalAmount = totalAmount.sub(fees);\\r\\n\\r\\n\\t\\tuint256 referralBonus = getUserReferralBonus(msg.sender);\\r\\n\\t\\tif (referralBonus > 0) {\\r\\n\\t\\t\\tuser.bonus = 0;\\r\\n\\t\\t\\ttotalAmount = totalAmount.add(referralBonus);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequire(totalAmount > 0, \\\"User has no dividends\\\");\\r\\n\\r\\n\\t\\tuint256 contractBalance = address(this).balance;\\r\\n\\t\\tif (contractBalance < totalAmount) {\\r\\n\\t\\t\\ttotalAmount = contractBalance;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\tpayable(msg.sender).transfer(totalAmount);\\r\\n\\r\\n\\t\\temit Withdrawn(msg.sender, totalAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getContractBalance() public view returns (uint256) {\\r\\n\\t\\treturn address(this).balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\\r\\n\\t\\ttime = plans[plan].time;\\r\\n\\t\\tpercent = plans[plan].percent;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPercent(uint8 plan) public view returns (uint256) {\\r\\n\\t\\tif (block.timestamp > startUNIX) {\\r\\n\\t\\t\\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn plans[plan].percent;\\r\\n\\t\\t}\\r\\n    }\\r\\n\\r\\n\\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\\r\\n\\t\\tpercent = getPercent(plan);\\r\\n\\r\\n\\t\\tif (plan < 3) {\\r\\n\\t\\t\\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\\r\\n\\t\\t} else if (plan < 6) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < plans[plan].time; i++) {\\r\\n\\t\\t\\t\\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDividends(address userAddress) public view returns (uint256) {\\r\\n\\t\\tUser storage user = users[userAddress];\\r\\n\\r\\n\\t\\tuint256 totalAmount;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < user.deposits.length; i++) {\\r\\n\\t\\t\\tif (user.checkpoint < user.deposits[i].finish) {\\r\\n\\t\\t\\t\\tif (user.deposits[i].plan < 3) {\\r\\n\\t\\t\\t\\t\\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\\r\\n\\t\\t\\t\\t\\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\\r\\n\\t\\t\\t\\t\\tif (from < to) {\\r\\n\\t\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else if (block.timestamp > user.deposits[i].finish) {\\r\\n\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(user.deposits[i].profit);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn totalAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].checkpoint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferrer(address userAddress) public view returns(address) {\\r\\n\\t\\treturn users[userAddress].referrer;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\\r\\n\\t\\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].bonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].deposits.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\\r\\n\\t\\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\\r\\n\\t\\t\\tamount = amount.add(users[userAddress].deposits[i].amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\\r\\n\\t    User storage user = users[userAddress];\\r\\n\\r\\n\\t\\tplan = user.deposits[index].plan;\\r\\n\\t\\tpercent = user.deposits[index].percent;\\r\\n\\t\\tamount = user.deposits[index].amount;\\r\\n\\t\\tprofit = user.deposits[index].profit;\\r\\n\\t\\tstart = user.deposits[index].start;\\r\\n\\t\\tfinish = user.deposits[index].finish;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly { size := extcodesize(addr) }\\r\\n        return size > 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5d8e9b536d8041f7630d6b0edaa4138369ce2948a2e4faf03ca78a3d38aa2f14\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 26,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 173,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "REFERRAL_PERCENTS",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "astId": 190,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "totalStaked",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 192,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "totalRefBonus",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 201,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "plans",
                "offset": 0,
                "slot": "4",
                "type": "t_array(t_struct(Plan)197_storage)dyn_storage"
              },
              {
                "astId": 236,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "users",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_struct(User)231_storage)"
              },
              {
                "astId": 238,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "startUNIX",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 240,
                "contract": "contracts/bnbStaker.sol:BNBStaker",
                "label": "commissionWallet",
                "offset": 0,
                "slot": "7",
                "type": "t_address_payable"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_address_payable": {
                "encoding": "inplace",
                "label": "address payable",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Deposit)214_storage)dyn_storage": {
                "base": "t_struct(Deposit)214_storage",
                "encoding": "dynamic_array",
                "label": "struct BNBStaker.Deposit[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(Plan)197_storage)dyn_storage": {
                "base": "t_struct(Plan)197_storage",
                "encoding": "dynamic_array",
                "label": "struct BNBStaker.Plan[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)3_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[3]",
                "numberOfBytes": "96"
              },
              "t_array(t_uint256)dyn_storage": {
                "base": "t_uint256",
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32"
              },
              "t_mapping(t_address,t_struct(User)231_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct BNBStaker.User)",
                "numberOfBytes": "32",
                "value": "t_struct(User)231_storage"
              },
              "t_struct(Deposit)214_storage": {
                "encoding": "inplace",
                "label": "struct BNBStaker.Deposit",
                "members": [
                  {
                    "astId": 203,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "plan",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint8"
                  },
                  {
                    "astId": 205,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "percent",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 207,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "amount",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 209,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "profit",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 211,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "start",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 213,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "finish",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "192"
              },
              "t_struct(Plan)197_storage": {
                "encoding": "inplace",
                "label": "struct BNBStaker.Plan",
                "members": [
                  {
                    "astId": 194,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "time",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 196,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "percent",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(User)231_storage": {
                "encoding": "inplace",
                "label": "struct BNBStaker.User",
                "members": [
                  {
                    "astId": 218,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "deposits",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_array(t_struct(Deposit)214_storage)dyn_storage"
                  },
                  {
                    "astId": 220,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "checkpoint",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 222,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "referrer",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  },
                  {
                    "astId": 226,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "levels",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_array(t_uint256)3_storage"
                  },
                  {
                    "astId": 228,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "bonus",
                    "offset": 0,
                    "slot": "6",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 230,
                    "contract": "contracts/bnbStaker.sol:BNBStaker",
                    "label": "totalBonus",
                    "offset": 0,
                    "slot": "7",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "256"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Claimable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "claimETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061038c806100616000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007a578063fe96973a1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b6100596100883660046102db565b61011d565b61005961009b366004610309565b610153565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca90610321565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101475760405162461bcd60e51b81526004016100ca90610321565b6101508161021b565b50565b6000546001600160a01b0316331461017d5760405162461bcd60e51b81526004016100ca90610321565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146101ca576040519150601f19603f3d011682016040523d82523d6000602084013e6101cf565b606091505b50509050806102175760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100ca565b5050565b6001600160a01b0381166102805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156102ec578081fd5b81356001600160a01b0381168114610302578182fd5b9392505050565b60006020828403121561031a578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122087ed55ecde887d9accdac59cb066694a842c9155c3dfe9bb9b2416b301b80fb664736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x38C DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x59 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x150 DUP2 PUSH2 0x21B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x302 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xED SSTORE 0xEC 0xDE DUP9 PUSH30 0x9ACCDAC59CB066694A842C9155C3DFE9BB9B2416B301B80FB664736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1871:210:0:-:0;;;;;;;;;;;;-1:-1:-1;983:17:0;1026:18;;-1:-1:-1;;;;;;1026:18:0;518:10;1026:18;;;;;1060:43;;518:10;;;;1060:43;;983:17;;1060:43;959:152;1871:210;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2052:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:236:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "139:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "165:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "191:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "178:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "169:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "264:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "273:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "266:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "266:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "223:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "234:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "249:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "254:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "245:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "245:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "258:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "241:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "241:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "230:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "230:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "220:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "220:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "213:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "210:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:306:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "395:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "441:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "450:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "458:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "443:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "443:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "416:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "425:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "412:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "412:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "437:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "408:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "408:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "405:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "476:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "499:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "486:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "486:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "476:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "361:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "372:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "384:6:1",
                            "type": ""
                          }
                        ],
                        "src": "325:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "711:14:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "713:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "720:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "713:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "695:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "703:3:1",
                            "type": ""
                          }
                        ],
                        "src": "520:205:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "831:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "841:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "864:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "849:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "849:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "841:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "883:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "898:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "914:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "919:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "910:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "910:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "923:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "906:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "906:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "894:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "894:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "876:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "876:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "876:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "800:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "811:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "822:4:1",
                            "type": ""
                          }
                        ],
                        "src": "730:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1112:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1129:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1140:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1122:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1122:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1163:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1174:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1159:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1159:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1179:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1152:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1152:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1152:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1202:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1213:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1198:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1198:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1218:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1191:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1191:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1191:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1273:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1284:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1269:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1269:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1289:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1262:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1262:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1262:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1307:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1319:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1330:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1315:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1315:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1089:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1103:4:1",
                            "type": ""
                          }
                        ],
                        "src": "938:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1519:170:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1536:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1547:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1529:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1529:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1529:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1570:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1581:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1566:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1566:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1586:2:1",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1559:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1559:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1559:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1609:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1620:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1605:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1605:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1625:22:1",
                                    "type": "",
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1598:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1598:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1598:50:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1657:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1669:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1680:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1665:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1665:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1657:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1496:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1510:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1345:344:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1868:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1885:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1896:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1878:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1878:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1878:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1919:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1930:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1915:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1915:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1935:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1908:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1908:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1958:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1969:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1954:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1954:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1974:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1947:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1947:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1947:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2018:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2030:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2041:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2026:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2026:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1845:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1859:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1694:356:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007a578063fe96973a1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b6100596100883660046102db565b61011d565b61005961009b366004610309565b610153565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca90610321565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101475760405162461bcd60e51b81526004016100ca90610321565b6101508161021b565b50565b6000546001600160a01b0316331461017d5760405162461bcd60e51b81526004016100ca90610321565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146101ca576040519150601f19603f3d011682016040523d82523d6000602084013e6101cf565b606091505b50509050806102175760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100ca565b5050565b6001600160a01b0381166102805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156102ec578081fd5b81356001600160a01b0381168114610302578182fd5b9392505050565b60006020828403121561031a578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122087ed55ecde887d9accdac59cb066694a842c9155c3dfe9bb9b2416b301b80fb664736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x59 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x150 DUP2 PUSH2 0x21B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x302 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xED SSTORE 0xEC 0xDE DUP9 PUSH30 0x9ACCDAC59CB066694A842C9155C3DFE9BB9B2416B301B80FB664736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1871:210:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:140;;;:::i;:::-;;1119:79;1157:7;1184:6;1119:79;;;-1:-1:-1;;;;;1184:6:0;;;876:51:1;;1119:79:0;;;;;864:2:1;1119:79:0;;;1481:109;;;;;;:::i;:::-;;:::i;1911:167::-;;;;;;:::i;:::-;;:::i;1333:140::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;;;;;;;;;1432:1:::1;1416:6:::0;;1395:40:::1;::::0;-1:-1:-1;;;;;1416:6:0;;::::1;::::0;1395:40:::1;::::0;1432:1;;1395:40:::1;1463:1;1446:19:::0;;-1:-1:-1;;;;;;1446:19:0::1;::::0;;1333:140::o;1481:109::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;1554:28:::1;1573:8;1554:18;:28::i;:::-;1481:109:::0;:::o;1911:167::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;;;;;;:::i;:::-;1976:9:::1;1184:6:::0;;1991:31:::1;::::0;-1:-1:-1;;;;;1184:6:0;;;;2011;;1976:9;1991:31;1976:9;1991:31;2011:6;1184;1991:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:47;;;2041:4;2033:37;;;::::0;-1:-1:-1;;;2033:37:0;;1547:2:1;2033:37:0::1;::::0;::::1;1529:21:1::0;1586:2;1566:18;;;1559:30;-1:-1:-1;;;1605:18:1;;;1598:50;1665:18;;2033:37:0::1;1519:170:1::0;2033:37:0::1;1316:1;1911:167:::0;:::o;1598:266::-;-1:-1:-1;;;;;1686:22:0;;1664:110;;;;-1:-1:-1;;;1664:110:0;;1140:2:1;1664:110:0;;;1122:21:1;1179:2;1159:18;;;1152:30;1218:34;1198:18;;;1191:62;-1:-1:-1;;;1269:18:1;;;1262:36;1315:19;;1664:110:0;1112:228:1;1664:110:0;1811:6;;;1790:38;;-1:-1:-1;;;;;1790:38:0;;;;1811:6;;;1790:38;;;1839:6;:17;;-1:-1:-1;;;;;;1839:17:0;-1:-1:-1;;;;;1839:17:0;;;;;;;;;;1598:266::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:190::-;384:6;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:1;;395:120;-1:-1:-1;395:120:1:o;1694:356::-;1896:2;1878:21;;;1915:18;;;1908:30;1974:34;1969:2;1954:18;;1947:62;2041:2;2026:18;;1868:182::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "181600",
                "executionCost": "22599",
                "totalCost": "204199"
              },
              "external": {
                "claimETH(uint256)": "infinite",
                "owner()": "992",
                "renounceOwnership()": "24143",
                "transferOwnership(address)": "24416"
              }
            },
            "methodIdentifiers": {
              "claimETH(uint256)": "fe96973a",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bnbStaker.sol\":\"Claimable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bnbStaker.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-03-21\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at FtmScan.com on 2022-03-11\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT \\r\\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\\r\\n \\r\\npragma solidity ^0.8;\\r\\n\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(){\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    \\r\\n\\tfunction claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\ncontract BNBStaker is Claimable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\r\\n\\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\\r\\n\\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\\r\\n\\tuint256 constant public PROJECT_FEE = 150;\\r\\n\\tuint256 constant public PERCENT_STEP = 3;\\r\\n\\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\\r\\n\\tuint256 constant public PERCENTS_DIVIDER = 1000;\\r\\n    uint256 constant public TIME_STEP = 1 days;\\r\\n\\t\\r\\n\\tuint256 public totalStaked;\\r\\n\\tuint256 public totalRefBonus;\\r\\n\\r\\n    struct Plan {\\r\\n        uint256 time;\\r\\n        uint256 percent;\\r\\n    }\\r\\n\\r\\n    Plan[] internal plans;\\r\\n\\r\\n\\tstruct Deposit {\\r\\n        uint8 plan;\\r\\n\\t\\tuint256 percent;\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 profit;\\r\\n\\t\\tuint256 start;\\r\\n\\t\\tuint256 finish;\\r\\n\\t}\\r\\n\\r\\n\\tstruct User {\\r\\n\\t\\tDeposit[] deposits;\\r\\n\\t\\tuint256 checkpoint;\\r\\n\\t\\taddress referrer;\\r\\n\\t\\tuint256[3] levels;\\r\\n\\t\\tuint256 bonus;\\r\\n\\t\\tuint256 totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tmapping (address => User) internal users;\\r\\n\\r\\n\\tuint256 public startUNIX;\\r\\n\\taddress payable public commissionWallet;\\r\\n\\r\\n\\tevent Newbie(address user);\\r\\n\\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\\r\\n\\tevent Withdrawn(address indexed user, uint256 amount);\\r\\n\\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\\r\\n\\tevent FeePayed(address indexed user, uint256 totalAmount);\\r\\n\\r\\n\\tconstructor() {\\r\\n\\t\\tcommissionWallet = payable(owner());\\r\\n\\t\\tstartUNIX = 0;\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n\\t}\\r\\n\\r\\n\\tfunction launch() public {\\r\\n        require(msg.sender == commissionWallet);\\r\\n\\t\\tstartUNIX = block.timestamp;\\r\\n\\t\\t\\r\\n    } \\r\\n\\r\\n\\tfunction invest(address referrer, uint8 plan) public payable {\\r\\n\\r\\n\\t\\trequire(msg.value >= INVEST_MIN_AMOUNT,\\\"too small\\\");\\r\\n        require(plan < 6, \\\"Invalid plan\\\");\\r\\n\\t\\trequire(startUNIX < block.timestamp, \\\"contract hasn`t started yet\\\");\\r\\n\\r\\n\\t\\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\\r\\n\\t\\tcommissionWallet.transfer(fee);\\r\\n\\t\\temit FeePayed(msg.sender, fee);\\r\\n\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tif (user.referrer == address(0)) {\\r\\n\\t\\t\\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\\r\\n\\t\\t\\t\\tuser.referrer = referrer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tusers[upline].levels[i] = users[upline].levels[i].add(1);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.referrer != address(0)) {\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tusers[upline].bonus = users[upline].bonus.add(amount);\\r\\n\\t\\t\\t\\t\\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\\r\\n\\t\\t\\t\\t\\temit RefBonus(upline, msg.sender, i, amount);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.deposits.length == 0) {\\r\\n\\t\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\t\\temit Newbie(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\\r\\n\\t\\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\\r\\n\\r\\n\\t\\ttotalStaked = totalStaked.add(msg.value);\\r\\n\\t\\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public {\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tuint256 totalAmount = getUserDividends(msg.sender);\\r\\n\\t\\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\\r\\n\\t\\ttotalAmount = totalAmount.sub(fees);\\r\\n\\r\\n\\t\\tuint256 referralBonus = getUserReferralBonus(msg.sender);\\r\\n\\t\\tif (referralBonus > 0) {\\r\\n\\t\\t\\tuser.bonus = 0;\\r\\n\\t\\t\\ttotalAmount = totalAmount.add(referralBonus);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequire(totalAmount > 0, \\\"User has no dividends\\\");\\r\\n\\r\\n\\t\\tuint256 contractBalance = address(this).balance;\\r\\n\\t\\tif (contractBalance < totalAmount) {\\r\\n\\t\\t\\ttotalAmount = contractBalance;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\tpayable(msg.sender).transfer(totalAmount);\\r\\n\\r\\n\\t\\temit Withdrawn(msg.sender, totalAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getContractBalance() public view returns (uint256) {\\r\\n\\t\\treturn address(this).balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\\r\\n\\t\\ttime = plans[plan].time;\\r\\n\\t\\tpercent = plans[plan].percent;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPercent(uint8 plan) public view returns (uint256) {\\r\\n\\t\\tif (block.timestamp > startUNIX) {\\r\\n\\t\\t\\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn plans[plan].percent;\\r\\n\\t\\t}\\r\\n    }\\r\\n\\r\\n\\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\\r\\n\\t\\tpercent = getPercent(plan);\\r\\n\\r\\n\\t\\tif (plan < 3) {\\r\\n\\t\\t\\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\\r\\n\\t\\t} else if (plan < 6) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < plans[plan].time; i++) {\\r\\n\\t\\t\\t\\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDividends(address userAddress) public view returns (uint256) {\\r\\n\\t\\tUser storage user = users[userAddress];\\r\\n\\r\\n\\t\\tuint256 totalAmount;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < user.deposits.length; i++) {\\r\\n\\t\\t\\tif (user.checkpoint < user.deposits[i].finish) {\\r\\n\\t\\t\\t\\tif (user.deposits[i].plan < 3) {\\r\\n\\t\\t\\t\\t\\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\\r\\n\\t\\t\\t\\t\\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\\r\\n\\t\\t\\t\\t\\tif (from < to) {\\r\\n\\t\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else if (block.timestamp > user.deposits[i].finish) {\\r\\n\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(user.deposits[i].profit);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn totalAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].checkpoint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferrer(address userAddress) public view returns(address) {\\r\\n\\t\\treturn users[userAddress].referrer;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\\r\\n\\t\\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].bonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].deposits.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\\r\\n\\t\\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\\r\\n\\t\\t\\tamount = amount.add(users[userAddress].deposits[i].amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\\r\\n\\t    User storage user = users[userAddress];\\r\\n\\r\\n\\t\\tplan = user.deposits[index].plan;\\r\\n\\t\\tpercent = user.deposits[index].percent;\\r\\n\\t\\tamount = user.deposits[index].amount;\\r\\n\\t\\tprofit = user.deposits[index].profit;\\r\\n\\t\\tstart = user.deposits[index].start;\\r\\n\\t\\tfinish = user.deposits[index].finish;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly { size := extcodesize(addr) }\\r\\n        return size > 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5d8e9b536d8041f7630d6b0edaa4138369ce2948a2e4faf03ca78a3d38aa2f14\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 26,
                "contract": "contracts/bnbStaker.sol:Claimable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220738fc6a43b2b3db8c737c5e8b1ad152f896b3eab0ad63111a20486268c7d16d764736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x8FC6A43B2B3DB8C737C5E8B1AD152F896B3EAB0A 0xD6 BALANCE GT LOG2 DIV DUP7 0x26 DUP13 PUSH30 0x16D764736F6C634300080400330000000000000000000000000000000000 ",
              "sourceMap": "266:506:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220738fc6a43b2b3db8c737c5e8b1ad152f896b3eab0ad63111a20486268c7d16d764736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x8FC6A43B2B3DB8C737C5E8B1AD152F896B3EAB0A 0xD6 BALANCE GT LOG2 DIV DUP7 0x26 DUP13 PUSH30 0x16D764736F6C634300080400330000000000000000000000000000000000 ",
              "sourceMap": "266:506:0:-:0;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12600",
                "executionCost": "66",
                "totalCost": "12666"
              },
              "internal": {
                "_msgData()": "infinite",
                "_msgSender()": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bnbStaker.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bnbStaker.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-03-21\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at FtmScan.com on 2022-03-11\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT \\r\\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\\r\\n \\r\\npragma solidity ^0.8;\\r\\n\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(){\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    \\r\\n\\tfunction claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\ncontract BNBStaker is Claimable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\r\\n\\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\\r\\n\\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\\r\\n\\tuint256 constant public PROJECT_FEE = 150;\\r\\n\\tuint256 constant public PERCENT_STEP = 3;\\r\\n\\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\\r\\n\\tuint256 constant public PERCENTS_DIVIDER = 1000;\\r\\n    uint256 constant public TIME_STEP = 1 days;\\r\\n\\t\\r\\n\\tuint256 public totalStaked;\\r\\n\\tuint256 public totalRefBonus;\\r\\n\\r\\n    struct Plan {\\r\\n        uint256 time;\\r\\n        uint256 percent;\\r\\n    }\\r\\n\\r\\n    Plan[] internal plans;\\r\\n\\r\\n\\tstruct Deposit {\\r\\n        uint8 plan;\\r\\n\\t\\tuint256 percent;\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 profit;\\r\\n\\t\\tuint256 start;\\r\\n\\t\\tuint256 finish;\\r\\n\\t}\\r\\n\\r\\n\\tstruct User {\\r\\n\\t\\tDeposit[] deposits;\\r\\n\\t\\tuint256 checkpoint;\\r\\n\\t\\taddress referrer;\\r\\n\\t\\tuint256[3] levels;\\r\\n\\t\\tuint256 bonus;\\r\\n\\t\\tuint256 totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tmapping (address => User) internal users;\\r\\n\\r\\n\\tuint256 public startUNIX;\\r\\n\\taddress payable public commissionWallet;\\r\\n\\r\\n\\tevent Newbie(address user);\\r\\n\\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\\r\\n\\tevent Withdrawn(address indexed user, uint256 amount);\\r\\n\\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\\r\\n\\tevent FeePayed(address indexed user, uint256 totalAmount);\\r\\n\\r\\n\\tconstructor() {\\r\\n\\t\\tcommissionWallet = payable(owner());\\r\\n\\t\\tstartUNIX = 0;\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n\\t}\\r\\n\\r\\n\\tfunction launch() public {\\r\\n        require(msg.sender == commissionWallet);\\r\\n\\t\\tstartUNIX = block.timestamp;\\r\\n\\t\\t\\r\\n    } \\r\\n\\r\\n\\tfunction invest(address referrer, uint8 plan) public payable {\\r\\n\\r\\n\\t\\trequire(msg.value >= INVEST_MIN_AMOUNT,\\\"too small\\\");\\r\\n        require(plan < 6, \\\"Invalid plan\\\");\\r\\n\\t\\trequire(startUNIX < block.timestamp, \\\"contract hasn`t started yet\\\");\\r\\n\\r\\n\\t\\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\\r\\n\\t\\tcommissionWallet.transfer(fee);\\r\\n\\t\\temit FeePayed(msg.sender, fee);\\r\\n\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tif (user.referrer == address(0)) {\\r\\n\\t\\t\\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\\r\\n\\t\\t\\t\\tuser.referrer = referrer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tusers[upline].levels[i] = users[upline].levels[i].add(1);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.referrer != address(0)) {\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tusers[upline].bonus = users[upline].bonus.add(amount);\\r\\n\\t\\t\\t\\t\\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\\r\\n\\t\\t\\t\\t\\temit RefBonus(upline, msg.sender, i, amount);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.deposits.length == 0) {\\r\\n\\t\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\t\\temit Newbie(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\\r\\n\\t\\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\\r\\n\\r\\n\\t\\ttotalStaked = totalStaked.add(msg.value);\\r\\n\\t\\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public {\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tuint256 totalAmount = getUserDividends(msg.sender);\\r\\n\\t\\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\\r\\n\\t\\ttotalAmount = totalAmount.sub(fees);\\r\\n\\r\\n\\t\\tuint256 referralBonus = getUserReferralBonus(msg.sender);\\r\\n\\t\\tif (referralBonus > 0) {\\r\\n\\t\\t\\tuser.bonus = 0;\\r\\n\\t\\t\\ttotalAmount = totalAmount.add(referralBonus);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequire(totalAmount > 0, \\\"User has no dividends\\\");\\r\\n\\r\\n\\t\\tuint256 contractBalance = address(this).balance;\\r\\n\\t\\tif (contractBalance < totalAmount) {\\r\\n\\t\\t\\ttotalAmount = contractBalance;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\tpayable(msg.sender).transfer(totalAmount);\\r\\n\\r\\n\\t\\temit Withdrawn(msg.sender, totalAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getContractBalance() public view returns (uint256) {\\r\\n\\t\\treturn address(this).balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\\r\\n\\t\\ttime = plans[plan].time;\\r\\n\\t\\tpercent = plans[plan].percent;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPercent(uint8 plan) public view returns (uint256) {\\r\\n\\t\\tif (block.timestamp > startUNIX) {\\r\\n\\t\\t\\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn plans[plan].percent;\\r\\n\\t\\t}\\r\\n    }\\r\\n\\r\\n\\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\\r\\n\\t\\tpercent = getPercent(plan);\\r\\n\\r\\n\\t\\tif (plan < 3) {\\r\\n\\t\\t\\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\\r\\n\\t\\t} else if (plan < 6) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < plans[plan].time; i++) {\\r\\n\\t\\t\\t\\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDividends(address userAddress) public view returns (uint256) {\\r\\n\\t\\tUser storage user = users[userAddress];\\r\\n\\r\\n\\t\\tuint256 totalAmount;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < user.deposits.length; i++) {\\r\\n\\t\\t\\tif (user.checkpoint < user.deposits[i].finish) {\\r\\n\\t\\t\\t\\tif (user.deposits[i].plan < 3) {\\r\\n\\t\\t\\t\\t\\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\\r\\n\\t\\t\\t\\t\\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\\r\\n\\t\\t\\t\\t\\tif (from < to) {\\r\\n\\t\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else if (block.timestamp > user.deposits[i].finish) {\\r\\n\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(user.deposits[i].profit);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn totalAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].checkpoint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferrer(address userAddress) public view returns(address) {\\r\\n\\t\\treturn users[userAddress].referrer;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\\r\\n\\t\\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].bonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].deposits.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\\r\\n\\t\\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\\r\\n\\t\\t\\tamount = amount.add(users[userAddress].deposits[i].amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\\r\\n\\t    User storage user = users[userAddress];\\r\\n\\r\\n\\t\\tplan = user.deposits[index].plan;\\r\\n\\t\\tpercent = user.deposits[index].percent;\\r\\n\\t\\tamount = user.deposits[index].amount;\\r\\n\\t\\tprofit = user.deposits[index].profit;\\r\\n\\t\\tstart = user.deposits[index].start;\\r\\n\\t\\tfinish = user.deposits[index].finish;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly { size := extcodesize(addr) }\\r\\n        return size > 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5d8e9b536d8041f7630d6b0edaa4138369ce2948a2e4faf03ca78a3d38aa2f14\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Ownable": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b5806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215610262578081fd5b81356001600160a01b0381168114610278578182fd5b939250505056fea2646970667358221220329472c3cc33426c9c9eacc9506b0fd679e7a8643ffa9c95cb6b2bdb6c23b31e64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B5 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x262 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x278 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP5 PUSH19 0xC3CC33426C9C9EACC9506B0FD679E7A8643FFA SWAP13 SWAP6 0xCB PUSH12 0x2BDB6C23B31E64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "776:1091:0:-:0;;;959:152;;;;;;;;;-1:-1:-1;983:17:0;1026:18;;-1:-1:-1;;;;;;1026:18:0;518:10;1026:18;;;;;1060:43;;518:10;;;;1060:43;;983:17;;1060:43;959:152;776:1091;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1298:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:236:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "139:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "165:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "191:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "178:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "169:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "264:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "273:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "266:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "266:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "266:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "223:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "234:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "249:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "254:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "245:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "245:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "258:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "241:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "241:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "230:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "230:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "220:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "220:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "213:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "210:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:306:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "426:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "436:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "448:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "459:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "444:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "478:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "509:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "514:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "505:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "505:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "518:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "501:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "501:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "471:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "471:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "471:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "395:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "406:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "417:4:1",
                            "type": ""
                          }
                        ],
                        "src": "325:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "707:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "724:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "735:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "717:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "717:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "758:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "769:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "754:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "754:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "774:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "747:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "747:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "747:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "797:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "808:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "793:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "793:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "813:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "786:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "786:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "786:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "868:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "879:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "884:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "857:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "857:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "857:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "902:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "914:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "925:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "910:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "910:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "902:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "684:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "698:4:1",
                            "type": ""
                          }
                        ],
                        "src": "533:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1114:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1131:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1142:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1124:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1124:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1124:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1165:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1176:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1161:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1161:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1181:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1154:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1154:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1154:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1204:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1215:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1200:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1200:18:1"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1220:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1193:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1193:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1193:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1264:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1276:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1287:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1264:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1091:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1105:4:1",
                            "type": ""
                          }
                        ],
                        "src": "940:356:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215610262578081fd5b81356001600160a01b0381168114610278578182fd5b939250505056fea2646970667358221220329472c3cc33426c9c9eacc9506b0fd679e7a8643ffa9c95cb6b2bdb6c23b31e64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x262 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x278 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP5 PUSH19 0xC3CC33426C9C9EACC9506B0FD679E7A8643FFA SWAP13 SWAP6 0xCB PUSH12 0x2BDB6C23B31E64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "776:1091:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:140;;;:::i;:::-;;1119:79;1157:7;1184:6;1119:79;;;-1:-1:-1;;;;;1184:6:0;;;471:51:1;;1119:79:0;;;;;459:2:1;1119:79:0;;;1481:109;;;;;;:::i;:::-;;:::i;1333:140::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;1142:2:1;1238:67:0;;;1124:21:1;;;1161:18;;;1154:30;1220:34;1200:18;;;1193:62;1272:18;;1238:67:0;;;;;;;;;1432:1:::1;1416:6:::0;;1395:40:::1;::::0;-1:-1:-1;;;;;1416:6:0;;::::1;::::0;1395:40:::1;::::0;1432:1;;1395:40:::1;1463:1;1446:19:::0;;-1:-1:-1;;;;;;1446:19:0::1;::::0;;1333:140::o;1481:109::-;1246:6;;-1:-1:-1;;;;;1246:6:0;518:10;1246:22;1238:67;;;;-1:-1:-1;;;1238:67:0;;1142:2:1;1238:67:0;;;1124:21:1;;;1161:18;;;1154:30;1220:34;1200:18;;;1193:62;1272:18;;1238:67:0;1114:182:1;1238:67:0;1554:28:::1;1573:8;1554:18;:28::i;:::-;1481:109:::0;:::o;1598:266::-;-1:-1:-1;;;;;1686:22:0;;1664:110;;;;-1:-1:-1;;;1664:110:0;;735:2:1;1664:110:0;;;717:21:1;774:2;754:18;;;747:30;813:34;793:18;;;786:62;-1:-1:-1;;;864:18:1;;;857:36;910:19;;1664:110:0;707:228:1;1664:110:0;1811:6;;;1790:38;;-1:-1:-1;;;;;1790:38:0;;;;1811:6;;;1790:38;;;1839:6;:17;;-1:-1:-1;;;;;;1839:17:0;-1:-1:-1;;;;;1839:17:0;;;;;;;;;;1598:266::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "138600",
                "executionCost": "22556",
                "totalCost": "161156"
              },
              "external": {
                "owner()": "992",
                "renounceOwnership()": "24143",
                "transferOwnership(address)": "24416"
              },
              "internal": {
                "_transferOwnership(address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bnbStaker.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bnbStaker.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-03-21\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at FtmScan.com on 2022-03-11\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT \\r\\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\\r\\n \\r\\npragma solidity ^0.8;\\r\\n\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(){\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    \\r\\n\\tfunction claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\ncontract BNBStaker is Claimable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\r\\n\\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\\r\\n\\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\\r\\n\\tuint256 constant public PROJECT_FEE = 150;\\r\\n\\tuint256 constant public PERCENT_STEP = 3;\\r\\n\\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\\r\\n\\tuint256 constant public PERCENTS_DIVIDER = 1000;\\r\\n    uint256 constant public TIME_STEP = 1 days;\\r\\n\\t\\r\\n\\tuint256 public totalStaked;\\r\\n\\tuint256 public totalRefBonus;\\r\\n\\r\\n    struct Plan {\\r\\n        uint256 time;\\r\\n        uint256 percent;\\r\\n    }\\r\\n\\r\\n    Plan[] internal plans;\\r\\n\\r\\n\\tstruct Deposit {\\r\\n        uint8 plan;\\r\\n\\t\\tuint256 percent;\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 profit;\\r\\n\\t\\tuint256 start;\\r\\n\\t\\tuint256 finish;\\r\\n\\t}\\r\\n\\r\\n\\tstruct User {\\r\\n\\t\\tDeposit[] deposits;\\r\\n\\t\\tuint256 checkpoint;\\r\\n\\t\\taddress referrer;\\r\\n\\t\\tuint256[3] levels;\\r\\n\\t\\tuint256 bonus;\\r\\n\\t\\tuint256 totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tmapping (address => User) internal users;\\r\\n\\r\\n\\tuint256 public startUNIX;\\r\\n\\taddress payable public commissionWallet;\\r\\n\\r\\n\\tevent Newbie(address user);\\r\\n\\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\\r\\n\\tevent Withdrawn(address indexed user, uint256 amount);\\r\\n\\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\\r\\n\\tevent FeePayed(address indexed user, uint256 totalAmount);\\r\\n\\r\\n\\tconstructor() {\\r\\n\\t\\tcommissionWallet = payable(owner());\\r\\n\\t\\tstartUNIX = 0;\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n\\t}\\r\\n\\r\\n\\tfunction launch() public {\\r\\n        require(msg.sender == commissionWallet);\\r\\n\\t\\tstartUNIX = block.timestamp;\\r\\n\\t\\t\\r\\n    } \\r\\n\\r\\n\\tfunction invest(address referrer, uint8 plan) public payable {\\r\\n\\r\\n\\t\\trequire(msg.value >= INVEST_MIN_AMOUNT,\\\"too small\\\");\\r\\n        require(plan < 6, \\\"Invalid plan\\\");\\r\\n\\t\\trequire(startUNIX < block.timestamp, \\\"contract hasn`t started yet\\\");\\r\\n\\r\\n\\t\\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\\r\\n\\t\\tcommissionWallet.transfer(fee);\\r\\n\\t\\temit FeePayed(msg.sender, fee);\\r\\n\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tif (user.referrer == address(0)) {\\r\\n\\t\\t\\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\\r\\n\\t\\t\\t\\tuser.referrer = referrer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tusers[upline].levels[i] = users[upline].levels[i].add(1);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.referrer != address(0)) {\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tusers[upline].bonus = users[upline].bonus.add(amount);\\r\\n\\t\\t\\t\\t\\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\\r\\n\\t\\t\\t\\t\\temit RefBonus(upline, msg.sender, i, amount);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.deposits.length == 0) {\\r\\n\\t\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\t\\temit Newbie(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\\r\\n\\t\\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\\r\\n\\r\\n\\t\\ttotalStaked = totalStaked.add(msg.value);\\r\\n\\t\\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public {\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tuint256 totalAmount = getUserDividends(msg.sender);\\r\\n\\t\\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\\r\\n\\t\\ttotalAmount = totalAmount.sub(fees);\\r\\n\\r\\n\\t\\tuint256 referralBonus = getUserReferralBonus(msg.sender);\\r\\n\\t\\tif (referralBonus > 0) {\\r\\n\\t\\t\\tuser.bonus = 0;\\r\\n\\t\\t\\ttotalAmount = totalAmount.add(referralBonus);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequire(totalAmount > 0, \\\"User has no dividends\\\");\\r\\n\\r\\n\\t\\tuint256 contractBalance = address(this).balance;\\r\\n\\t\\tif (contractBalance < totalAmount) {\\r\\n\\t\\t\\ttotalAmount = contractBalance;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\tpayable(msg.sender).transfer(totalAmount);\\r\\n\\r\\n\\t\\temit Withdrawn(msg.sender, totalAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getContractBalance() public view returns (uint256) {\\r\\n\\t\\treturn address(this).balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\\r\\n\\t\\ttime = plans[plan].time;\\r\\n\\t\\tpercent = plans[plan].percent;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPercent(uint8 plan) public view returns (uint256) {\\r\\n\\t\\tif (block.timestamp > startUNIX) {\\r\\n\\t\\t\\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn plans[plan].percent;\\r\\n\\t\\t}\\r\\n    }\\r\\n\\r\\n\\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\\r\\n\\t\\tpercent = getPercent(plan);\\r\\n\\r\\n\\t\\tif (plan < 3) {\\r\\n\\t\\t\\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\\r\\n\\t\\t} else if (plan < 6) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < plans[plan].time; i++) {\\r\\n\\t\\t\\t\\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDividends(address userAddress) public view returns (uint256) {\\r\\n\\t\\tUser storage user = users[userAddress];\\r\\n\\r\\n\\t\\tuint256 totalAmount;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < user.deposits.length; i++) {\\r\\n\\t\\t\\tif (user.checkpoint < user.deposits[i].finish) {\\r\\n\\t\\t\\t\\tif (user.deposits[i].plan < 3) {\\r\\n\\t\\t\\t\\t\\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\\r\\n\\t\\t\\t\\t\\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\\r\\n\\t\\t\\t\\t\\tif (from < to) {\\r\\n\\t\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else if (block.timestamp > user.deposits[i].finish) {\\r\\n\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(user.deposits[i].profit);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn totalAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].checkpoint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferrer(address userAddress) public view returns(address) {\\r\\n\\t\\treturn users[userAddress].referrer;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\\r\\n\\t\\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].bonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].deposits.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\\r\\n\\t\\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\\r\\n\\t\\t\\tamount = amount.add(users[userAddress].deposits[i].amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\\r\\n\\t    User storage user = users[userAddress];\\r\\n\\r\\n\\t\\tplan = user.deposits[index].plan;\\r\\n\\t\\tpercent = user.deposits[index].percent;\\r\\n\\t\\tamount = user.deposits[index].amount;\\r\\n\\t\\tprofit = user.deposits[index].profit;\\r\\n\\t\\tstart = user.deposits[index].start;\\r\\n\\t\\tfinish = user.deposits[index].finish;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly { size := extcodesize(addr) }\\r\\n        return size > 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5d8e9b536d8041f7630d6b0edaa4138369ce2948a2e4faf03ca78a3d38aa2f14\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 26,
                "contract": "contracts/bnbStaker.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209675c5c71dc971f3c84a6394e48201713a827029ef99db51676e3fcd26ae703964736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH22 0xC5C71DC971F3C84A6394E48201713A827029EF99DB51 PUSH8 0x6E3FCD26AE703964 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "10356:847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10356:847:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209675c5c71dc971f3c84a6394e48201713a827029ef99db51676e3fcd26ae703964736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH22 0xC5C71DC971F3C84A6394E48201713A827029EF99DB51 PUSH8 0x6E3FCD26AE703964 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "10356:847:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bnbStaker.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bnbStaker.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-03-21\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at FtmScan.com on 2022-03-11\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT \\r\\n//https://api.binance.com/api/v3/ticker/price?symbol=BNBBUSD\\r\\n \\r\\npragma solidity ^0.8;\\r\\n\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor(){\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    \\r\\n\\tfunction claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\ncontract BNBStaker is Claimable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\r\\n\\tuint256 constant public INVEST_MIN_AMOUNT = 0.1 ether;\\r\\n\\tuint256[] public REFERRAL_PERCENTS = [60, 30, 10];\\r\\n\\tuint256 constant public PROJECT_FEE = 150;\\r\\n\\tuint256 constant public PERCENT_STEP = 3;\\r\\n\\tuint256 constant public WITHDRAW_FEE = 1000; //In base point\\r\\n\\tuint256 constant public PERCENTS_DIVIDER = 1000;\\r\\n    uint256 constant public TIME_STEP = 1 days;\\r\\n\\t\\r\\n\\tuint256 public totalStaked;\\r\\n\\tuint256 public totalRefBonus;\\r\\n\\r\\n    struct Plan {\\r\\n        uint256 time;\\r\\n        uint256 percent;\\r\\n    }\\r\\n\\r\\n    Plan[] internal plans;\\r\\n\\r\\n\\tstruct Deposit {\\r\\n        uint8 plan;\\r\\n\\t\\tuint256 percent;\\r\\n\\t\\tuint256 amount;\\r\\n\\t\\tuint256 profit;\\r\\n\\t\\tuint256 start;\\r\\n\\t\\tuint256 finish;\\r\\n\\t}\\r\\n\\r\\n\\tstruct User {\\r\\n\\t\\tDeposit[] deposits;\\r\\n\\t\\tuint256 checkpoint;\\r\\n\\t\\taddress referrer;\\r\\n\\t\\tuint256[3] levels;\\r\\n\\t\\tuint256 bonus;\\r\\n\\t\\tuint256 totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tmapping (address => User) internal users;\\r\\n\\r\\n\\tuint256 public startUNIX;\\r\\n\\taddress payable public commissionWallet;\\r\\n\\r\\n\\tevent Newbie(address user);\\r\\n\\tevent NewDeposit(address indexed user, uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish);\\r\\n\\tevent Withdrawn(address indexed user, uint256 amount);\\r\\n\\tevent RefBonus(address indexed referrer, address indexed referral, uint256 indexed level, uint256 amount);\\r\\n\\tevent FeePayed(address indexed user, uint256 totalAmount);\\r\\n\\r\\n\\tconstructor() {\\r\\n\\t\\tcommissionWallet = payable(owner());\\r\\n\\t\\tstartUNIX = 0;\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n        plans.push(Plan(14, 80));\\r\\n        plans.push(Plan(21, 75));\\r\\n        plans.push(Plan(28, 70));\\r\\n\\t}\\r\\n\\r\\n\\tfunction launch() public {\\r\\n        require(msg.sender == commissionWallet);\\r\\n\\t\\tstartUNIX = block.timestamp;\\r\\n\\t\\t\\r\\n    } \\r\\n\\r\\n\\tfunction invest(address referrer, uint8 plan) public payable {\\r\\n\\r\\n\\t\\trequire(msg.value >= INVEST_MIN_AMOUNT,\\\"too small\\\");\\r\\n        require(plan < 6, \\\"Invalid plan\\\");\\r\\n\\t\\trequire(startUNIX < block.timestamp, \\\"contract hasn`t started yet\\\");\\r\\n\\r\\n\\t\\tuint256 fee = msg.value.mul(PROJECT_FEE).div(PERCENTS_DIVIDER);\\r\\n\\t\\tcommissionWallet.transfer(fee);\\r\\n\\t\\temit FeePayed(msg.sender, fee);\\r\\n\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tif (user.referrer == address(0)) {\\r\\n\\t\\t\\tif (users[referrer].deposits.length > 0 && referrer != msg.sender) {\\r\\n\\t\\t\\t\\tuser.referrer = referrer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tusers[upline].levels[i] = users[upline].levels[i].add(1);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.referrer != address(0)) {\\r\\n\\r\\n\\t\\t\\taddress upline = user.referrer;\\r\\n\\t\\t\\tfor (uint256 i = 0; i < 3; i++) {\\r\\n\\t\\t\\t\\tif (upline != address(0)) {\\r\\n\\t\\t\\t\\t\\tuint256 amount = msg.value.mul(REFERRAL_PERCENTS[i]).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tusers[upline].bonus = users[upline].bonus.add(amount);\\r\\n\\t\\t\\t\\t\\tusers[upline].totalBonus = users[upline].totalBonus.add(amount);\\r\\n\\t\\t\\t\\t\\temit RefBonus(upline, msg.sender, i, amount);\\r\\n\\t\\t\\t\\t\\tupline = users[upline].referrer;\\r\\n\\t\\t\\t\\t} else break;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif (user.deposits.length == 0) {\\r\\n\\t\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\t\\temit Newbie(msg.sender);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t(uint256 percent, uint256 profit, uint256 finish) = getResult(plan, msg.value);\\r\\n\\t\\tuser.deposits.push(Deposit(plan, percent, msg.value, profit, block.timestamp, finish));\\r\\n\\r\\n\\t\\ttotalStaked = totalStaked.add(msg.value);\\r\\n\\t\\temit NewDeposit(msg.sender, plan, percent, msg.value, profit, block.timestamp, finish);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw() public {\\r\\n\\t\\tUser storage user = users[msg.sender];\\r\\n\\r\\n\\t\\tuint256 totalAmount = getUserDividends(msg.sender);\\r\\n\\t\\tuint256 fees = totalAmount.mul(WITHDRAW_FEE).div(10000);\\r\\n\\t\\ttotalAmount = totalAmount.sub(fees);\\r\\n\\r\\n\\t\\tuint256 referralBonus = getUserReferralBonus(msg.sender);\\r\\n\\t\\tif (referralBonus > 0) {\\r\\n\\t\\t\\tuser.bonus = 0;\\r\\n\\t\\t\\ttotalAmount = totalAmount.add(referralBonus);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\trequire(totalAmount > 0, \\\"User has no dividends\\\");\\r\\n\\r\\n\\t\\tuint256 contractBalance = address(this).balance;\\r\\n\\t\\tif (contractBalance < totalAmount) {\\r\\n\\t\\t\\ttotalAmount = contractBalance;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuser.checkpoint = block.timestamp;\\r\\n\\t\\tpayable(msg.sender).transfer(totalAmount);\\r\\n\\r\\n\\t\\temit Withdrawn(msg.sender, totalAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getContractBalance() public view returns (uint256) {\\r\\n\\t\\treturn address(this).balance;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPlanInfo(uint8 plan) public view returns(uint256 time, uint256 percent) {\\r\\n\\t\\ttime = plans[plan].time;\\r\\n\\t\\tpercent = plans[plan].percent;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPercent(uint8 plan) public view returns (uint256) {\\r\\n\\t\\tif (block.timestamp > startUNIX) {\\r\\n\\t\\t\\treturn plans[plan].percent.add(PERCENT_STEP.mul(block.timestamp.sub(startUNIX)).div(TIME_STEP));\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn plans[plan].percent;\\r\\n\\t\\t}\\r\\n    }\\r\\n\\r\\n\\tfunction getResult(uint8 plan, uint256 deposit) public view returns (uint256 percent, uint256 profit, uint256 finish) {\\r\\n\\t\\tpercent = getPercent(plan);\\r\\n\\r\\n\\t\\tif (plan < 3) {\\r\\n\\t\\t\\tprofit = deposit.mul(percent).div(PERCENTS_DIVIDER).mul(plans[plan].time);\\r\\n\\t\\t} else if (plan < 6) {\\r\\n\\t\\t\\tfor (uint256 i = 0; i < plans[plan].time; i++) {\\r\\n\\t\\t\\t\\tprofit = profit.add((deposit.add(profit)).mul(percent).div(PERCENTS_DIVIDER));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfinish = block.timestamp.add(plans[plan].time.mul(TIME_STEP));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDividends(address userAddress) public view returns (uint256) {\\r\\n\\t\\tUser storage user = users[userAddress];\\r\\n\\r\\n\\t\\tuint256 totalAmount;\\r\\n\\r\\n\\t\\tfor (uint256 i = 0; i < user.deposits.length; i++) {\\r\\n\\t\\t\\tif (user.checkpoint < user.deposits[i].finish) {\\r\\n\\t\\t\\t\\tif (user.deposits[i].plan < 3) {\\r\\n\\t\\t\\t\\t\\tuint256 share = user.deposits[i].amount.mul(user.deposits[i].percent).div(PERCENTS_DIVIDER);\\r\\n\\t\\t\\t\\t\\tuint256 from = user.deposits[i].start > user.checkpoint ? user.deposits[i].start : user.checkpoint;\\r\\n\\t\\t\\t\\t\\tuint256 to = user.deposits[i].finish < block.timestamp ? user.deposits[i].finish : block.timestamp;\\r\\n\\t\\t\\t\\t\\tif (from < to) {\\r\\n\\t\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(share.mul(to.sub(from)).div(TIME_STEP));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else if (block.timestamp > user.deposits[i].finish) {\\r\\n\\t\\t\\t\\t\\ttotalAmount = totalAmount.add(user.deposits[i].profit);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn totalAmount;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserCheckpoint(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].checkpoint;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferrer(address userAddress) public view returns(address) {\\r\\n\\t\\treturn users[userAddress].referrer;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDownlineCount(address userAddress) public view returns(uint256, uint256, uint256) {\\r\\n\\t\\treturn (users[userAddress].levels[0], users[userAddress].levels[1], users[userAddress].levels[2]);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].bonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralTotalBonus(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserReferralWithdrawn(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].totalBonus.sub(users[userAddress].bonus);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAvailable(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn getUserReferralBonus(userAddress).add(getUserDividends(userAddress));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserAmountOfDeposits(address userAddress) public view returns(uint256) {\\r\\n\\t\\treturn users[userAddress].deposits.length;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserTotalDeposits(address userAddress) public view returns(uint256 amount) {\\r\\n\\t\\tfor (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\\r\\n\\t\\t\\tamount = amount.add(users[userAddress].deposits[i].amount);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction getUserDepositInfo(address userAddress, uint256 index) public view returns(uint8 plan, uint256 percent, uint256 amount, uint256 profit, uint256 start, uint256 finish) {\\r\\n\\t    User storage user = users[userAddress];\\r\\n\\r\\n\\t\\tplan = user.deposits[index].plan;\\r\\n\\t\\tpercent = user.deposits[index].percent;\\r\\n\\t\\tamount = user.deposits[index].amount;\\r\\n\\t\\tprofit = user.deposits[index].profit;\\r\\n\\t\\tstart = user.deposits[index].start;\\r\\n\\t\\tfinish = user.deposits[index].finish;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly { size := extcodesize(addr) }\\r\\n        return size > 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x5d8e9b536d8041f7630d6b0edaa4138369ce2948a2e4faf03ca78a3d38aa2f14\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/bnbStaker.sol": {
        "ast": {
          "absolutePath": "contracts/bnbStaker.sol",
          "exportedSymbols": {
            "BNBStaker": [
              1354
            ],
            "Claimable": [
              158
            ],
            "Context": [
              22
            ],
            "Ownable": [
              132
            ],
            "SafeMath": [
              1464
            ]
          },
          "id": 1465,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8"
              ],
              "nodeType": "PragmaDirective",
              "src": "239:21:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 22,
              "linearizedBaseContracts": [
                22
              ],
              "name": "Context",
              "nameLocation": "275:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 9,
                    "nodeType": "Block",
                    "src": "500:36:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 6,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "518:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "518:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 5,
                        "id": 8,
                        "nodeType": "Return",
                        "src": "511:17:0"
                      }
                    ]
                  },
                  "id": 10,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "455:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "465:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "491:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "491:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "490:9:0"
                  },
                  "scope": 22,
                  "src": "446:90:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 20,
                    "nodeType": "Block",
                    "src": "601:168:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 15,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "612:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$22",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 16,
                        "nodeType": "ExpressionStatement",
                        "src": "612:4:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 17,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "753:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "753:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 14,
                        "id": 19,
                        "nodeType": "Return",
                        "src": "746:15:0"
                      }
                    ]
                  },
                  "id": 21,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "553:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "561:2:0"
                  },
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "587:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "587:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "586:14:0"
                  },
                  "scope": 22,
                  "src": "544:225:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1465,
              "src": "266:506:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 23,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 22,
                    "src": "796:7:0"
                  },
                  "id": 24,
                  "nodeType": "InheritanceSpecifier",
                  "src": "796:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 132,
              "linearizedBaseContracts": [
                132,
                22
              ],
              "name": "Ownable",
              "nameLocation": "785:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "827:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "811:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 32,
                  "name": "OwnershipTransferred",
                  "nameLocation": "848:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "895:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "879:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "879:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 30,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "935:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "919:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "919:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "868:82:0"
                  },
                  "src": "842:109:0"
                },
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "972:139:0",
                    "statements": [
                      {
                        "assignments": [
                          36
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 36,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nameLocation": "991:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 52,
                            "src": "983:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 35,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "983:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1003:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1003:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "983:32:0"
                      },
                      {
                        "expression": {
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1026:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 41,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1035:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1026:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1026:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 47,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1089:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1081:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 45,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1081:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1081:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1093:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 44,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1060:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1060:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51,
                        "nodeType": "EmitStatement",
                        "src": "1055:48:0"
                      }
                    ]
                  },
                  "id": 53,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "970:2:0"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "972:0:0"
                  },
                  "scope": 132,
                  "src": "959:152:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "1166:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 58,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1184:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 57,
                        "id": 59,
                        "nodeType": "Return",
                        "src": "1177:13:0"
                      }
                    ]
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 61,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1128:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1133:2:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "1157:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:0"
                  },
                  "scope": 132,
                  "src": "1119:79:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "1227:98:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 64,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "1246:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 65,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "1256:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 66,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1256:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1246:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1270:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 63,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1238:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1238:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "1238:67:0"
                      },
                      {
                        "id": 71,
                        "nodeType": "PlaceholderStatement",
                        "src": "1316:1:0"
                      }
                    ]
                  },
                  "id": 73,
                  "name": "onlyOwner",
                  "nameLocation": "1215:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1224:2:0"
                  },
                  "src": "1206:119:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 93,
                    "nodeType": "Block",
                    "src": "1379:94:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1416:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 82,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1432:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1424:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1424:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1424:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1395:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "EmitStatement",
                        "src": "1390:45:0"
                      },
                      {
                        "expression": {
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1446:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1463:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1455:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1455:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1455:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1446:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 92,
                        "nodeType": "ExpressionStatement",
                        "src": "1446:19:0"
                      }
                    ]
                  },
                  "functionSelector": "715018a6",
                  "id": 94,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 76,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 75,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 73,
                        "src": "1369:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1369:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1342:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1359:2:0"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:0:0"
                  },
                  "scope": 132,
                  "src": "1333:140:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1543:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1573:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1554:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "1554:28:0"
                      }
                    ]
                  },
                  "functionSelector": "f2fde38b",
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 99,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 98,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 73,
                        "src": "1533:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1533:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1490:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1516:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1508:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1508:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1507:18:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1543:0:0"
                  },
                  "scope": 132,
                  "src": "1481:109:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1653:211:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 112,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 108,
                                "src": "1686:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1706:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 114,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1698:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 113,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1698:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1698:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1686:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1723:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 111,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1664:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1664:110:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "1664:110:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1811:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 123,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "1819:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1790:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1790:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "EmitStatement",
                        "src": "1785:43:0"
                      },
                      {
                        "expression": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 126,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1839:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 127,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "1848:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1839:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:17:0"
                      }
                    ]
                  },
                  "id": 131,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "1607:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1634:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "1626:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1626:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1625:18:0"
                  },
                  "returnParameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1653:0:0"
                  },
                  "scope": 132,
                  "src": "1598:266:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1465,
              "src": "776:1091:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 133,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 132,
                    "src": "1893:7:0"
                  },
                  "id": 134,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1893:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 158,
              "linearizedBaseContracts": [
                158,
                132,
                22
              ],
              "name": "Claimable",
              "nameLocation": "1880:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "1964:114:0",
                    "statements": [
                      {
                        "assignments": [
                          142,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 142,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "1981:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 156,
                            "src": "1976:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 141,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1976:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 150,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2019:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 143,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "1991:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1991:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1991:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 146,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "2011:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1991:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1975:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 152,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "2041:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2047:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 151,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2033:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2033:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "2033:37:0"
                      }
                    ]
                  },
                  "functionSelector": "fe96973a",
                  "id": 157,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 138,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 73,
                        "src": "1954:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1954:9:0"
                    }
                  ],
                  "name": "claimETH",
                  "nameLocation": "1920:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1937:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "1929:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1929:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1928:16:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1964:0:0"
                  },
                  "scope": 158,
                  "src": "1911:167:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1465,
              "src": "1871:210:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 159,
                    "name": "Claimable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 158,
                    "src": "2105:9:0"
                  },
                  "id": 160,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2105:9:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1354,
              "linearizedBaseContracts": [
                1354,
                158,
                132,
                22
              ],
              "name": "BNBStaker",
              "nameLocation": "2092:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 163,
                  "libraryName": {
                    "id": 161,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1464,
                    "src": "2125:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "2119:27:0",
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": true,
                  "functionSelector": "e262113e",
                  "id": 166,
                  "mutability": "constant",
                  "name": "INVEST_MIN_AMOUNT",
                  "nameLocation": "2175:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2151:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e31",
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2195:9:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "600d20ce",
                  "id": 173,
                  "mutability": "mutable",
                  "name": "REFERRAL_PERCENTS",
                  "nameLocation": "2225:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2208:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 167,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2208:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 168,
                    "nodeType": "ArrayTypeName",
                    "src": "2208:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": {
                    "components": [
                      {
                        "hexValue": "3630",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2246:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      {
                        "hexValue": "3330",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "hexValue": "3130",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2254:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "id": 172,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2245:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                      "typeString": "uint8[3] memory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "48d44bd1",
                  "id": 176,
                  "mutability": "constant",
                  "name": "PROJECT_FEE",
                  "nameLocation": "2285:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2261:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313530",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2299:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_150_by_1",
                      "typeString": "int_const 150"
                    },
                    "value": "150"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "57fc86b4",
                  "id": 179,
                  "mutability": "constant",
                  "name": "PERCENT_STEP",
                  "nameLocation": "2330:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2306:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2345:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "9bff5ddb",
                  "id": 182,
                  "mutability": "constant",
                  "name": "WITHDRAW_FEE",
                  "nameLocation": "2374:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2350:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "01c234a8",
                  "id": 185,
                  "mutability": "constant",
                  "name": "PERCENTS_DIVIDER",
                  "nameLocation": "2437:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2413:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2456:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "32bc298c",
                  "id": 188,
                  "mutability": "constant",
                  "name": "TIME_STEP",
                  "nameLocation": "2491:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2467:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2503:6:0",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "817b1cd2",
                  "id": 190,
                  "mutability": "mutable",
                  "name": "totalStaked",
                  "nameLocation": "2531:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2516:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "69b11dd5",
                  "id": 192,
                  "mutability": "mutable",
                  "name": "totalRefBonus",
                  "nameLocation": "2561:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2546:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "BNBStaker.Plan",
                  "id": 197,
                  "members": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "2614:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2606:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "percent",
                      "nameLocation": "2637:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2629:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2629:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Plan",
                  "nameLocation": "2590:4:0",
                  "nodeType": "StructDefinition",
                  "scope": 1354,
                  "src": "2583:69:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "plans",
                  "nameLocation": "2676:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2660:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                    "typeString": "struct BNBStaker.Plan[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 199,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 198,
                        "name": "Plan",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 197,
                        "src": "2660:4:0"
                      },
                      "referencedDeclaration": 197,
                      "src": "2660:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Plan_$197_storage_ptr",
                        "typeString": "struct BNBStaker.Plan"
                      }
                    },
                    "id": 200,
                    "nodeType": "ArrayTypeName",
                    "src": "2660:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr",
                      "typeString": "struct BNBStaker.Plan[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "BNBStaker.Deposit",
                  "id": 214,
                  "members": [
                    {
                      "constant": false,
                      "id": 203,
                      "mutability": "mutable",
                      "name": "plan",
                      "nameLocation": "2719:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2713:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 202,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2713:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "percent",
                      "nameLocation": "2736:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2728:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2728:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2756:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2748:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2748:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "profit",
                      "nameLocation": "2775:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2767:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2767:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "start",
                      "nameLocation": "2794:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2786:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2786:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "finish",
                      "nameLocation": "2812:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2804:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2804:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Deposit",
                  "nameLocation": "2694:7:0",
                  "nodeType": "StructDefinition",
                  "scope": 1354,
                  "src": "2687:136:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BNBStaker.User",
                  "id": 231,
                  "members": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "deposits",
                      "nameLocation": "2855:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2845:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage_ptr",
                        "typeString": "struct BNBStaker.Deposit[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 216,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 215,
                            "name": "Deposit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 214,
                            "src": "2845:7:0"
                          },
                          "referencedDeclaration": 214,
                          "src": "2845:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$214_storage_ptr",
                            "typeString": "struct BNBStaker.Deposit"
                          }
                        },
                        "id": 217,
                        "nodeType": "ArrayTypeName",
                        "src": "2845:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage_ptr",
                          "typeString": "struct BNBStaker.Deposit[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "checkpoint",
                      "nameLocation": "2876:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2868:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2868:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "referrer",
                      "nameLocation": "2899:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2891:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2891:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 226,
                      "mutability": "mutable",
                      "name": "levels",
                      "nameLocation": "2923:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2912:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                        "typeString": "uint256[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2912:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 225,
                        "length": {
                          "hexValue": "33",
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2920:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                          "typeString": "uint256[3]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "bonus",
                      "nameLocation": "2942:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2934:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2934:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 230,
                      "mutability": "mutable",
                      "name": "totalBonus",
                      "nameLocation": "2960:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2952:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2952:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "User",
                  "nameLocation": "2835:4:0",
                  "nodeType": "StructDefinition",
                  "scope": 1354,
                  "src": "2828:147:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "users",
                  "nameLocation": "3015:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "2980:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                    "typeString": "mapping(address => struct BNBStaker.User)"
                  },
                  "typeName": {
                    "id": 235,
                    "keyType": {
                      "id": 232,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2980:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                      "typeString": "mapping(address => struct BNBStaker.User)"
                    },
                    "valueType": {
                      "id": 234,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 233,
                        "name": "User",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 231,
                        "src": "3000:4:0"
                      },
                      "referencedDeclaration": 231,
                      "src": "3000:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                        "typeString": "struct BNBStaker.User"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "c2341238",
                  "id": 238,
                  "mutability": "mutable",
                  "name": "startUNIX",
                  "nameLocation": "3041:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "3026:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "97c0262a",
                  "id": 240,
                  "mutability": "mutable",
                  "name": "commissionWallet",
                  "nameLocation": "3077:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "3054:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 244,
                  "name": "Newbie",
                  "nameLocation": "3105:6:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3120:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "3112:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3112:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3111:14:0"
                  },
                  "src": "3099:27:0"
                },
                {
                  "anonymous": false,
                  "id": 260,
                  "name": "NewDeposit",
                  "nameLocation": "3135:10:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3162:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3146:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 248,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "3174:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3168:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "percent",
                        "nameLocation": "3188:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3180:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3180:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3205:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3197:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3197:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "profit",
                        "nameLocation": "3221:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3213:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3213:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "start",
                        "nameLocation": "3237:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3229:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3229:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "finish",
                        "nameLocation": "3252:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "3244:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3145:114:0"
                  },
                  "src": "3129:131:0"
                },
                {
                  "anonymous": false,
                  "id": 266,
                  "name": "Withdrawn",
                  "nameLocation": "3269:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3295:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "3279:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3279:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3309:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "3301:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3278:38:0"
                  },
                  "src": "3263:54:0"
                },
                {
                  "anonymous": false,
                  "id": 276,
                  "name": "RefBonus",
                  "nameLocation": "3326:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 268,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "referrer",
                        "nameLocation": "3351:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3335:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "referral",
                        "nameLocation": "3377:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3361:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3361:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "level",
                        "nameLocation": "3403:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3387:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3387:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3418:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3410:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3410:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3334:91:0"
                  },
                  "src": "3320:106:0"
                },
                {
                  "anonymous": false,
                  "id": 282,
                  "name": "FeePayed",
                  "nameLocation": "3435:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "3444:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3444:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalAmount",
                        "nameLocation": "3474:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "3466:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3443:43:0"
                  },
                  "src": "3429:58:0"
                },
                {
                  "body": {
                    "id": 351,
                    "nodeType": "Block",
                    "src": "3506:273:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 285,
                            "name": "commissionWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "3511:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 288,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "3538:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3538:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3530:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 286,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3530:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3530:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3511:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "3511:35:0"
                      },
                      {
                        "expression": {
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 293,
                            "name": "startUNIX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "3551:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3563:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3551:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 296,
                        "nodeType": "ExpressionStatement",
                        "src": "3551:13:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3134",
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3591:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_14_by_1",
                                    "typeString": "int_const 14"
                                  },
                                  "value": "14"
                                },
                                {
                                  "hexValue": "3830",
                                  "id": 302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3595:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_80_by_1",
                                    "typeString": "int_const 80"
                                  },
                                  "value": "80"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_14_by_1",
                                    "typeString": "int_const 14"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_80_by_1",
                                    "typeString": "int_const 80"
                                  }
                                ],
                                "id": 300,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3586:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3586:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 297,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3575:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3575:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3575:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3575:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3231",
                                  "id": 310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3626:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  "value": "21"
                                },
                                {
                                  "hexValue": "3735",
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3630:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_75_by_1",
                                    "typeString": "int_const 75"
                                  },
                                  "value": "75"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_75_by_1",
                                    "typeString": "int_const 75"
                                  }
                                ],
                                "id": 309,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3621:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3621:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 306,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3610:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3610:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3610:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "3610:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3238",
                                  "id": 319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3661:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  "value": "28"
                                },
                                {
                                  "hexValue": "3730",
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3665:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_70_by_1",
                                    "typeString": "int_const 70"
                                  },
                                  "value": "70"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_70_by_1",
                                    "typeString": "int_const 70"
                                  }
                                ],
                                "id": 318,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3656:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3656:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 315,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3645:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3645:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3645:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3134",
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3696:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_14_by_1",
                                    "typeString": "int_const 14"
                                  },
                                  "value": "14"
                                },
                                {
                                  "hexValue": "3830",
                                  "id": 329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3700:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_80_by_1",
                                    "typeString": "int_const 80"
                                  },
                                  "value": "80"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_14_by_1",
                                    "typeString": "int_const 14"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_80_by_1",
                                    "typeString": "int_const 80"
                                  }
                                ],
                                "id": 327,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3691:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3691:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 324,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3680:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3680:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3680:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3231",
                                  "id": 337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3731:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  "value": "21"
                                },
                                {
                                  "hexValue": "3735",
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3735:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_75_by_1",
                                    "typeString": "int_const 75"
                                  },
                                  "value": "75"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_75_by_1",
                                    "typeString": "int_const 75"
                                  }
                                ],
                                "id": 336,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3726:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3726:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 333,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3715:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3715:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3715:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "3715:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3238",
                                  "id": 346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3766:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  "value": "28"
                                },
                                {
                                  "hexValue": "3730",
                                  "id": 347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3770:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_70_by_1",
                                    "typeString": "int_const 70"
                                  },
                                  "value": "70"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_70_by_1",
                                    "typeString": "int_const 70"
                                  }
                                ],
                                "id": 345,
                                "name": "Plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3761:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Plan_$197_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Plan storage pointer)"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3761:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Plan_$197_memory_ptr",
                                "typeString": "struct BNBStaker.Plan memory"
                              }
                            ],
                            "expression": {
                              "id": 342,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3750:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3750:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$_t_struct$_Plan_$197_storage_$returns$__$bound_to$_t_array$_t_struct$_Plan_$197_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Plan storage ref[] storage pointer,struct BNBStaker.Plan storage ref)"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3750:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "3750:24:0"
                      }
                    ]
                  },
                  "id": 352,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3503:2:0"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3506:0:0"
                  },
                  "scope": 1354,
                  "src": "3492:287:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "3809:94:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 356,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3828:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3828:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 358,
                                "name": "commissionWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 240,
                                "src": "3842:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3828:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 355,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3820:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3820:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "3820:39:0"
                      },
                      {
                        "expression": {
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 362,
                            "name": "startUNIX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "3864:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 363,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3876:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3876:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3864:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "3864:27:0"
                      }
                    ]
                  },
                  "functionSelector": "01339c21",
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "launch",
                  "nameLocation": "3793:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3799:2:0"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3809:0:0"
                  },
                  "scope": 1354,
                  "src": "3784:119:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "3970:1665:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 376,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3985:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3985:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 378,
                                "name": "INVEST_MIN_AMOUNT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "3998:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3985:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6f20736d616c6c",
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4016:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce",
                                "typeString": "literal_string \"too small\""
                              },
                              "value": "too small"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce",
                                "typeString": "literal_string \"too small\""
                              }
                            ],
                            "id": 375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3977:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3977:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "3977:51:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 384,
                                "name": "plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "4047:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4054:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "4047:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420706c616e",
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4057:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e",
                                "typeString": "literal_string \"Invalid plan\""
                              },
                              "value": "Invalid plan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e",
                                "typeString": "literal_string \"Invalid plan\""
                              }
                            ],
                            "id": 383,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4039:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4039:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "4039:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 391,
                                "name": "startUNIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 238,
                                "src": "4085:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 392,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4097:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4097:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4085:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "636f6e7472616374206861736e6074207374617274656420796574",
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4114:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b33c03cfd03429813db412eb7bb4ad64b03c4d13bf57c68432728be01c361b11",
                                "typeString": "literal_string \"contract hasn`t started yet\""
                              },
                              "value": "contract hasn`t started yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b33c03cfd03429813db412eb7bb4ad64b03c4d13bf57c68432728be01c361b11",
                                "typeString": "literal_string \"contract hasn`t started yet\""
                              }
                            ],
                            "id": 390,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4077:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4077:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "4077:67:0"
                      },
                      {
                        "assignments": [
                          399
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 399,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "4159:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "4151:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 398,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4151:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 408,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 406,
                              "name": "PERCENTS_DIVIDER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "4196:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 403,
                                  "name": "PROJECT_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 176,
                                  "src": "4179:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 400,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4165:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4165:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "4165:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4165:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1463,
                            "src": "4165:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4165:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4151:62:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 412,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4244:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 409,
                              "name": "commissionWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4218:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4218:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4218:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "4218:30:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 416,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4267:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4267:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 418,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4279:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 415,
                            "name": "FeePayed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "4258:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "EmitStatement",
                        "src": "4253:30:0"
                      },
                      {
                        "assignments": [
                          423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 423,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "4303:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "4290:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                              "typeString": "struct BNBStaker.User"
                            },
                            "typeName": {
                              "id": 422,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 421,
                                "name": "User",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 231,
                                "src": "4290:4:0"
                              },
                              "referencedDeclaration": 231,
                              "src": "4290:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 428,
                        "initialValue": {
                          "baseExpression": {
                            "id": 424,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "4310:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                              "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "expression": {
                              "id": 425,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4316:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4316:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct BNBStaker.User storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4290:37:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 429,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4338:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User storage pointer"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referrer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 222,
                            "src": "4338:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4363:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4355:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4355:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4355:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4338:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 507,
                        "nodeType": "IfStatement",
                        "src": "4334:386:0",
                        "trueBody": {
                          "id": 506,
                          "nodeType": "Block",
                          "src": "4367:353:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 436,
                                          "name": "users",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 236,
                                          "src": "4377:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                            "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                          }
                                        },
                                        "id": 438,
                                        "indexExpression": {
                                          "id": 437,
                                          "name": "referrer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 370,
                                          "src": "4383:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4377:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$231_storage",
                                          "typeString": "struct BNBStaker.User storage ref"
                                        }
                                      },
                                      "id": 439,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deposits",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 218,
                                      "src": "4377:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                        "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                      }
                                    },
                                    "id": 440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4377:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4411:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4377:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 443,
                                    "name": "referrer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "4416:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 444,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4428:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4428:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "4416:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4377:61:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 455,
                              "nodeType": "IfStatement",
                              "src": "4373:105:0",
                              "trueBody": {
                                "id": 454,
                                "nodeType": "Block",
                                "src": "4440:38:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 452,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 448,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 423,
                                          "src": "4447:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                            "typeString": "struct BNBStaker.User storage pointer"
                                          }
                                        },
                                        "id": 450,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "referrer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 222,
                                        "src": "4447:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 451,
                                        "name": "referrer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 370,
                                        "src": "4463:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4447:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 453,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4447:24:0"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                457
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 457,
                                  "mutability": "mutable",
                                  "name": "upline",
                                  "nameLocation": "4493:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 506,
                                  "src": "4485:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 456,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4485:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 460,
                              "initialValue": {
                                "expression": {
                                  "id": 458,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "4502:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 459,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "referrer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 222,
                                "src": "4502:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4485:30:0"
                            },
                            {
                              "body": {
                                "id": 504,
                                "nodeType": "Block",
                                "src": "4553:162:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 476,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 471,
                                        "name": "upline",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 457,
                                        "src": "4564:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 474,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4582:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 473,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4574:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 472,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4574:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4574:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4564:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 502,
                                      "nodeType": "Break",
                                      "src": "4703:5:0"
                                    },
                                    "id": 503,
                                    "nodeType": "IfStatement",
                                    "src": "4560:148:0",
                                    "trueBody": {
                                      "id": 501,
                                      "nodeType": "Block",
                                      "src": "4586:111:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 492,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 477,
                                                    "name": "users",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 236,
                                                    "src": "4594:5:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                      "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                    }
                                                  },
                                                  "id": 479,
                                                  "indexExpression": {
                                                    "id": 478,
                                                    "name": "upline",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 457,
                                                    "src": "4600:6:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "4594:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_User_$231_storage",
                                                    "typeString": "struct BNBStaker.User storage ref"
                                                  }
                                                },
                                                "id": 480,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "levels",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 226,
                                                "src": "4594:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                  "typeString": "uint256[3] storage ref"
                                                }
                                              },
                                              "id": 482,
                                              "indexExpression": {
                                                "id": 481,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 462,
                                                "src": "4615:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "4594:23:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "31",
                                                  "id": 490,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4648:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                  },
                                                  "value": "1"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                  }
                                                ],
                                                "expression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 483,
                                                        "name": "users",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 236,
                                                        "src": "4620:5:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                          "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                        }
                                                      },
                                                      "id": 485,
                                                      "indexExpression": {
                                                        "id": 484,
                                                        "name": "upline",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 457,
                                                        "src": "4626:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "4620:13:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_User_$231_storage",
                                                        "typeString": "struct BNBStaker.User storage ref"
                                                      }
                                                    },
                                                    "id": 486,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "levels",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 226,
                                                    "src": "4620:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                                      "typeString": "uint256[3] storage ref"
                                                    }
                                                  },
                                                  "id": 488,
                                                  "indexExpression": {
                                                    "id": 487,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 462,
                                                    "src": "4641:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "4620:23:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 489,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1379,
                                                "src": "4620:27:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 491,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4620:30:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4594:56:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 493,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4594:56:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 499,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 494,
                                              "name": "upline",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 457,
                                              "src": "4658:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 495,
                                                  "name": "users",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 236,
                                                  "src": "4667:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                  }
                                                },
                                                "id": 497,
                                                "indexExpression": {
                                                  "id": 496,
                                                  "name": "upline",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 457,
                                                  "src": "4673:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "4667:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                                  "typeString": "struct BNBStaker.User storage ref"
                                                }
                                              },
                                              "id": 498,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "referrer",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 222,
                                              "src": "4667:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "4658:31:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 500,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4658:31:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 465,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 462,
                                  "src": "4541:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4545:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "4541:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 505,
                              "initializationExpression": {
                                "assignments": [
                                  462
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 462,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "4534:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 505,
                                    "src": "4526:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 461,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4526:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 464,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4538:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4526:13:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "4548:3:0",
                                  "subExpression": {
                                    "id": 468,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 462,
                                    "src": "4548:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 470,
                                "nodeType": "ExpressionStatement",
                                "src": "4548:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "4521:194:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 508,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User storage pointer"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "referrer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 222,
                            "src": "4730:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4755:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4747:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 510,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4747:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4747:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4730:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 596,
                        "nodeType": "IfStatement",
                        "src": "4726:480:0",
                        "trueBody": {
                          "id": 595,
                          "nodeType": "Block",
                          "src": "4759:447:0",
                          "statements": [
                            {
                              "assignments": [
                                516
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 516,
                                  "mutability": "mutable",
                                  "name": "upline",
                                  "nameLocation": "4775:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 595,
                                  "src": "4767:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 515,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4767:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 519,
                              "initialValue": {
                                "expression": {
                                  "id": 517,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "4784:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "referrer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 222,
                                "src": "4784:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4767:30:0"
                            },
                            {
                              "body": {
                                "id": 593,
                                "nodeType": "Block",
                                "src": "4835:364:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 530,
                                        "name": "upline",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 516,
                                        "src": "4846:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 533,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4864:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 532,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4856:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 531,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4856:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 534,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4856:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4846:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 591,
                                      "nodeType": "Break",
                                      "src": "5187:5:0"
                                    },
                                    "id": 592,
                                    "nodeType": "IfStatement",
                                    "src": "4842:350:0",
                                    "trueBody": {
                                      "id": 590,
                                      "nodeType": "Block",
                                      "src": "4868:313:0",
                                      "statements": [
                                        {
                                          "assignments": [
                                            537
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 537,
                                              "mutability": "mutable",
                                              "name": "amount",
                                              "nameLocation": "4884:6:0",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 590,
                                              "src": "4876:14:0",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 536,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4876:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 548,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "id": 546,
                                                "name": "PERCENTS_DIVIDER",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "4933:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "baseExpression": {
                                                      "id": 541,
                                                      "name": "REFERRAL_PERCENTS",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 173,
                                                      "src": "4907:17:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                        "typeString": "uint256[] storage ref"
                                                      }
                                                    },
                                                    "id": 543,
                                                    "indexExpression": {
                                                      "id": 542,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 521,
                                                      "src": "4925:1:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4907:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "expression": {
                                                      "id": 538,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "4893:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 539,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4893:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 540,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1438,
                                                  "src": "4893:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 544,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4893:35:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 545,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1463,
                                              "src": "4893:39:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 547,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4893:57:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "4876:74:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 560,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 549,
                                                  "name": "users",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 236,
                                                  "src": "4958:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                  }
                                                },
                                                "id": 551,
                                                "indexExpression": {
                                                  "id": 550,
                                                  "name": "upline",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 516,
                                                  "src": "4964:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "4958:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                                  "typeString": "struct BNBStaker.User storage ref"
                                                }
                                              },
                                              "id": 552,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "bonus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 228,
                                              "src": "4958:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "id": 558,
                                                  "name": "amount",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 537,
                                                  "src": "5004:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 553,
                                                      "name": "users",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 236,
                                                      "src": "4980:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                        "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                      }
                                                    },
                                                    "id": 555,
                                                    "indexExpression": {
                                                      "id": 554,
                                                      "name": "upline",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 516,
                                                      "src": "4986:6:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4980:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_User_$231_storage",
                                                      "typeString": "struct BNBStaker.User storage ref"
                                                    }
                                                  },
                                                  "id": 556,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "bonus",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 228,
                                                  "src": "4980:19:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 557,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1379,
                                                "src": "4980:23:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 559,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4980:31:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4958:53:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 561,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4958:53:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 573,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 562,
                                                  "name": "users",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 236,
                                                  "src": "5019:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                  }
                                                },
                                                "id": 564,
                                                "indexExpression": {
                                                  "id": 563,
                                                  "name": "upline",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 516,
                                                  "src": "5025:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5019:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                                  "typeString": "struct BNBStaker.User storage ref"
                                                }
                                              },
                                              "id": 565,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberName": "totalBonus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 230,
                                              "src": "5019:24:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "id": 571,
                                                  "name": "amount",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 537,
                                                  "src": "5075:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 566,
                                                      "name": "users",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 236,
                                                      "src": "5046:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                        "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                      }
                                                    },
                                                    "id": 568,
                                                    "indexExpression": {
                                                      "id": 567,
                                                      "name": "upline",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 516,
                                                      "src": "5052:6:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5046:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_User_$231_storage",
                                                      "typeString": "struct BNBStaker.User storage ref"
                                                    }
                                                  },
                                                  "id": 569,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "totalBonus",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 230,
                                                  "src": "5046:24:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 570,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1379,
                                                "src": "5046:28:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 572,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5046:36:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5019:63:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 574,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5019:63:0"
                                        },
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "id": 576,
                                                "name": "upline",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 516,
                                                "src": "5104:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "id": 577,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "5112:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 578,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "5112:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 579,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 521,
                                                "src": "5124:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 580,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 537,
                                                "src": "5127:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 575,
                                              "name": "RefBonus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 276,
                                              "src": "5095:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256,uint256)"
                                              }
                                            },
                                            "id": 581,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5095:39:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 582,
                                          "nodeType": "EmitStatement",
                                          "src": "5090:44:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 588,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 583,
                                              "name": "upline",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 516,
                                              "src": "5142:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 584,
                                                  "name": "users",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 236,
                                                  "src": "5151:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                                  }
                                                },
                                                "id": 586,
                                                "indexExpression": {
                                                  "id": 585,
                                                  "name": "upline",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 516,
                                                  "src": "5157:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5151:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                                  "typeString": "struct BNBStaker.User storage ref"
                                                }
                                              },
                                              "id": 587,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "referrer",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 222,
                                              "src": "5151:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "5142:31:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 589,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5142:31:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 524,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 521,
                                  "src": "4823:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4827:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "4823:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 594,
                              "initializationExpression": {
                                "assignments": [
                                  521
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 521,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "4816:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 594,
                                    "src": "4808:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 520,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4808:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 523,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4820:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4808:13:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "4830:3:0",
                                  "subExpression": {
                                    "id": 527,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 521,
                                    "src": "4830:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 529,
                                "nodeType": "ExpressionStatement",
                                "src": "4830:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "4803:396:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 597,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5216:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                  "typeString": "struct BNBStaker.User storage pointer"
                                }
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 218,
                              "src": "5216:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5216:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5240:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5216:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 615,
                        "nodeType": "IfStatement",
                        "src": "5212:105:0",
                        "trueBody": {
                          "id": 614,
                          "nodeType": "Block",
                          "src": "5243:74:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 602,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 423,
                                    "src": "5249:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                      "typeString": "struct BNBStaker.User storage pointer"
                                    }
                                  },
                                  "id": 604,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "checkpoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 220,
                                  "src": "5249:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 605,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5267:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5267:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5249:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 608,
                              "nodeType": "ExpressionStatement",
                              "src": "5249:33:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 610,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5300:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5300:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 609,
                                  "name": "Newbie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "5293:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5293:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 613,
                              "nodeType": "EmitStatement",
                              "src": "5288:23:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          617,
                          619,
                          621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 617,
                            "mutability": "mutable",
                            "name": "percent",
                            "nameLocation": "5332:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "5324:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 616,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5324:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 619,
                            "mutability": "mutable",
                            "name": "profit",
                            "nameLocation": "5349:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "5341:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 618,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5341:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 621,
                            "mutability": "mutable",
                            "name": "finish",
                            "nameLocation": "5365:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "5357:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 620,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5357:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 627,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 623,
                              "name": "plan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "5385:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 624,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5391:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5391:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 622,
                            "name": "getResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "5375:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint8,uint256) view returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5375:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5323:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 634,
                                  "name": "plan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "5433:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 635,
                                  "name": "percent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "5439:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 636,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5448:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "5448:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 638,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 619,
                                  "src": "5459:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 639,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5467:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5467:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 641,
                                  "name": "finish",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 621,
                                  "src": "5484:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 633,
                                "name": "Deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "5425:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Deposit_$214_storage_ptr_$",
                                  "typeString": "type(struct BNBStaker.Deposit storage pointer)"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5425:66:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_memory_ptr",
                                "typeString": "struct BNBStaker.Deposit memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Deposit_$214_memory_ptr",
                                "typeString": "struct BNBStaker.Deposit memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 628,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5406:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                  "typeString": "struct BNBStaker.User storage pointer"
                                }
                              },
                              "id": 631,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 218,
                              "src": "5406:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5406:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$214_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$214_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$214_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BNBStaker.Deposit storage ref[] storage pointer,struct BNBStaker.Deposit storage ref)"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5406:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "5406:86:0"
                      },
                      {
                        "expression": {
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 645,
                            "name": "totalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "5499:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 648,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5529:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5529:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 646,
                                "name": "totalStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "5513:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1379,
                              "src": "5513:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5513:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5499:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 652,
                        "nodeType": "ExpressionStatement",
                        "src": "5499:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 654,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5560:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5560:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 656,
                              "name": "plan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "5572:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 657,
                              "name": "percent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "5578:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 658,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5587:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5587:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 660,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "5598:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 661,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5606:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5606:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 663,
                              "name": "finish",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "5623:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 653,
                            "name": "NewDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "5549:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint8,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5549:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "EmitStatement",
                        "src": "5544:86:0"
                      }
                    ]
                  },
                  "functionSelector": "581c5ae6",
                  "id": 667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "invest",
                  "nameLocation": "3918:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "referrer",
                        "nameLocation": "3933:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "3925:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3925:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "3949:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "3943:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3943:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3924:30:0"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3970:0:0"
                  },
                  "scope": 1354,
                  "src": "3909:1726:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 773,
                    "nodeType": "Block",
                    "src": "5667:692:0",
                    "statements": [
                      {
                        "assignments": [
                          672
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 672,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "5685:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 773,
                            "src": "5672:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                              "typeString": "struct BNBStaker.User"
                            },
                            "typeName": {
                              "id": 671,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 670,
                                "name": "User",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 231,
                                "src": "5672:4:0"
                              },
                              "referencedDeclaration": 231,
                              "src": "5672:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 677,
                        "initialValue": {
                          "baseExpression": {
                            "id": 673,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "5692:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                              "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                            }
                          },
                          "id": 676,
                          "indexExpression": {
                            "expression": {
                              "id": 674,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5698:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5698:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5692:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct BNBStaker.User storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5672:37:0"
                      },
                      {
                        "assignments": [
                          679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 679,
                            "mutability": "mutable",
                            "name": "totalAmount",
                            "nameLocation": "5724:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 773,
                            "src": "5716:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 678,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5716:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 684,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 681,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5755:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5755:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 680,
                            "name": "getUserDividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "5738:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5738:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5716:50:0"
                      },
                      {
                        "assignments": [
                          686
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 686,
                            "mutability": "mutable",
                            "name": "fees",
                            "nameLocation": "5779:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 773,
                            "src": "5771:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 685,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5771:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 694,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "3130303030",
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5820:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 689,
                                  "name": "WITHDRAW_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "5802:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 687,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "5786:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "5786:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5786:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1463,
                            "src": "5786:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5786:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5771:55:0"
                      },
                      {
                        "expression": {
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 695,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "5831:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 698,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "5861:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 696,
                                "name": "totalAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 679,
                                "src": "5845:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "5845:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5845:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5831:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "5831:35:0"
                      },
                      {
                        "assignments": [
                          703
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 703,
                            "mutability": "mutable",
                            "name": "referralBonus",
                            "nameLocation": "5881:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 773,
                            "src": "5873:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 702,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5873:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 708,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 705,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5918:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5918:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 704,
                            "name": "getUserReferralBonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "5897:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5897:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5873:56:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 709,
                            "name": "referralBonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "5938:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5954:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5938:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 726,
                        "nodeType": "IfStatement",
                        "src": "5934:99:0",
                        "trueBody": {
                          "id": 725,
                          "nodeType": "Block",
                          "src": "5957:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 712,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 672,
                                    "src": "5963:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                      "typeString": "struct BNBStaker.User storage pointer"
                                    }
                                  },
                                  "id": 714,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "bonus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 228,
                                  "src": "5963:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5976:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5963:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 717,
                              "nodeType": "ExpressionStatement",
                              "src": "5963:14:0"
                            },
                            {
                              "expression": {
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 718,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "5983:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 721,
                                      "name": "referralBonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 703,
                                      "src": "6013:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 719,
                                      "name": "totalAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 679,
                                      "src": "5997:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1379,
                                    "src": "5997:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5997:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5983:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 724,
                              "nodeType": "ExpressionStatement",
                              "src": "5983:44:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 728,
                                "name": "totalAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 679,
                                "src": "6047:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6061:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6047:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5573657220686173206e6f206469766964656e6473",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6064:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
                                "typeString": "literal_string \"User has no dividends\""
                              },
                              "value": "User has no dividends"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
                                "typeString": "literal_string \"User has no dividends\""
                              }
                            ],
                            "id": 727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6039:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6039:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "6039:49:0"
                      },
                      {
                        "assignments": [
                          735
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 735,
                            "mutability": "mutable",
                            "name": "contractBalance",
                            "nameLocation": "6103:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 773,
                            "src": "6095:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 734,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6095:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 741,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 738,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6129:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BNBStaker_$1354",
                                  "typeString": "contract BNBStaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BNBStaker_$1354",
                                  "typeString": "contract BNBStaker"
                                }
                              ],
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6121:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 736,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6121:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6121:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6121:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6095:47:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 742,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "6151:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 743,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "6169:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6151:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 750,
                        "nodeType": "IfStatement",
                        "src": "6147:76:0",
                        "trueBody": {
                          "id": 749,
                          "nodeType": "Block",
                          "src": "6182:41:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 745,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "6188:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 746,
                                  "name": "contractBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 735,
                                  "src": "6202:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6188:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 748,
                              "nodeType": "ExpressionStatement",
                              "src": "6188:29:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 751,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "6229:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User storage pointer"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "checkpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 220,
                            "src": "6229:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 754,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6247:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6247:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6229:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 757,
                        "nodeType": "ExpressionStatement",
                        "src": "6229:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 764,
                              "name": "totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "6296:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 760,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6275:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6275:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6267:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 758,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6267:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6267:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6267:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6267:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 766,
                        "nodeType": "ExpressionStatement",
                        "src": "6267:41:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6330:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6330:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 770,
                              "name": "totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "6342:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 767,
                            "name": "Withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "6320:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6320:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 772,
                        "nodeType": "EmitStatement",
                        "src": "6315:39:0"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 774,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "5649:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5657:2:0"
                  },
                  "returnParameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5667:0:0"
                  },
                  "scope": 1354,
                  "src": "5640:719:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 785,
                    "nodeType": "Block",
                    "src": "6424:38:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 781,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6444:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BNBStaker_$1354",
                                  "typeString": "contract BNBStaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BNBStaker_$1354",
                                  "typeString": "contract BNBStaker"
                                }
                              ],
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6436:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 779,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6436:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6436:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6436:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 778,
                        "id": 784,
                        "nodeType": "Return",
                        "src": "6429:28:0"
                      }
                    ]
                  },
                  "functionSelector": "6f9fb98a",
                  "id": 786,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractBalance",
                  "nameLocation": "6373:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6391:2:0"
                  },
                  "returnParameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 777,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 786,
                        "src": "6415:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6414:9:0"
                  },
                  "scope": 1354,
                  "src": "6364:98:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 809,
                    "nodeType": "Block",
                    "src": "6551:67:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 795,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "6556:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 796,
                                "name": "plans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "6563:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                }
                              },
                              "id": 798,
                              "indexExpression": {
                                "id": 797,
                                "name": "plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "6569:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6563:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_storage",
                                "typeString": "struct BNBStaker.Plan storage ref"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "time",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 194,
                            "src": "6563:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6556:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "6556:23:0"
                      },
                      {
                        "expression": {
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 802,
                            "name": "percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "6584:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 803,
                                "name": "plans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "6594:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                }
                              },
                              "id": 805,
                              "indexExpression": {
                                "id": 804,
                                "name": "plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "6600:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6594:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Plan_$197_storage",
                                "typeString": "struct BNBStaker.Plan storage ref"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "percent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 196,
                            "src": "6594:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6584:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 808,
                        "nodeType": "ExpressionStatement",
                        "src": "6584:29:0"
                      }
                    ]
                  },
                  "functionSelector": "aecaa634",
                  "id": 810,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlanInfo",
                  "nameLocation": "6476:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 788,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "6494:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "6488:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:12:0"
                  },
                  "returnParameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "6528:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "6520:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "percent",
                        "nameLocation": "6542:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "6534:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6534:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6519:31:0"
                  },
                  "scope": 1354,
                  "src": "6467:151:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "6685:196:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 817,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6694:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6694:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 819,
                            "name": "startUNIX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "6712:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6694:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 845,
                          "nodeType": "Block",
                          "src": "6836:38:0",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 840,
                                    "name": "plans",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 201,
                                    "src": "6849:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                      "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                    }
                                  },
                                  "id": 842,
                                  "indexExpression": {
                                    "id": 841,
                                    "name": "plan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 812,
                                    "src": "6855:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6849:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Plan_$197_storage",
                                    "typeString": "struct BNBStaker.Plan storage ref"
                                  }
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "percent",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 196,
                                "src": "6849:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 816,
                              "id": 844,
                              "nodeType": "Return",
                              "src": "6842:26:0"
                            }
                          ]
                        },
                        "id": 846,
                        "nodeType": "IfStatement",
                        "src": "6690:184:0",
                        "trueBody": {
                          "id": 839,
                          "nodeType": "Block",
                          "src": "6723:107:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 835,
                                        "name": "TIME_STEP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 188,
                                        "src": "6813:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 831,
                                                "name": "startUNIX",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 238,
                                                "src": "6797:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "expression": {
                                                  "id": 828,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "6777:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 829,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "6777:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 830,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sub",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1404,
                                              "src": "6777:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 832,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6777:30:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 826,
                                            "name": "PERCENT_STEP",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 179,
                                            "src": "6760:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 827,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1438,
                                          "src": "6760:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6760:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1463,
                                      "src": "6760:52:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6760:63:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "plans",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 201,
                                        "src": "6736:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                          "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "plan",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 812,
                                        "src": "6742:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6736:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Plan_$197_storage",
                                        "typeString": "struct BNBStaker.Plan storage ref"
                                      }
                                    },
                                    "id": 824,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "percent",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 196,
                                    "src": "6736:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 825,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1379,
                                  "src": "6736:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6736:88:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 816,
                              "id": 838,
                              "nodeType": "Return",
                              "src": "6729:95:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "a51b9533",
                  "id": 848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPercent",
                  "nameLocation": "6632:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "6649:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "6643:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6642:12:0"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "6676:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6676:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6675:9:0"
                  },
                  "scope": 1354,
                  "src": "6623:258:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 939,
                    "nodeType": "Block",
                    "src": "7004:378:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 861,
                            "name": "percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "7009:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 863,
                                "name": "plan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "7030:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 862,
                              "name": "getPercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 848,
                              "src": "7019:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (uint8) view returns (uint256)"
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7019:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7009:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 866,
                        "nodeType": "ExpressionStatement",
                        "src": "7009:26:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 867,
                            "name": "plan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "7046:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7053:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "7046:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 887,
                              "name": "plan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 850,
                              "src": "7151:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7158:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "7151:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 923,
                          "nodeType": "IfStatement",
                          "src": "7147:163:0",
                          "trueBody": {
                            "id": 922,
                            "nodeType": "Block",
                            "src": "7161:149:0",
                            "statements": [
                              {
                                "body": {
                                  "id": 920,
                                  "nodeType": "Block",
                                  "src": "7214:91:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 918,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 903,
                                          "name": "profit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 857,
                                          "src": "7221:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 915,
                                                  "name": "PERCENTS_DIVIDER",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 185,
                                                  "src": "7280:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 912,
                                                      "name": "percent",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 855,
                                                      "src": "7267:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "components": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "id": 908,
                                                              "name": "profit",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 857,
                                                              "src": "7254:6:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "id": 906,
                                                              "name": "deposit",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 852,
                                                              "src": "7242:7:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 907,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "add",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1379,
                                                            "src": "7242:11:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 909,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "7242:19:0",
                                                          "tryCall": false,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "id": 910,
                                                      "isConstant": false,
                                                      "isInlineArray": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "TupleExpression",
                                                      "src": "7241:21:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 911,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1438,
                                                    "src": "7241:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 913,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "7241:34:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 914,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1463,
                                                "src": "7241:38:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 916,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "7241:56:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 904,
                                              "name": "profit",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 857,
                                              "src": "7230:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 905,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1379,
                                            "src": "7230:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 917,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7230:68:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7221:77:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 919,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7221:77:0"
                                    }
                                  ]
                                },
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 894,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 891,
                                    "src": "7187:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 895,
                                        "name": "plans",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 201,
                                        "src": "7191:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                          "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                        }
                                      },
                                      "id": 897,
                                      "indexExpression": {
                                        "id": 896,
                                        "name": "plan",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 850,
                                        "src": "7197:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7191:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Plan_$197_storage",
                                        "typeString": "struct BNBStaker.Plan storage ref"
                                      }
                                    },
                                    "id": 898,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "time",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 194,
                                    "src": "7191:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7187:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 921,
                                "initializationExpression": {
                                  "assignments": [
                                    891
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 891,
                                      "mutability": "mutable",
                                      "name": "i",
                                      "nameLocation": "7180:1:0",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 921,
                                      "src": "7172:9:0",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "typeName": {
                                        "id": 890,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7172:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 893,
                                  "initialValue": {
                                    "hexValue": "30",
                                    "id": 892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7184:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "7172:13:0"
                                },
                                "loopExpression": {
                                  "expression": {
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "7209:3:0",
                                    "subExpression": {
                                      "id": 900,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 891,
                                      "src": "7209:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 902,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7209:3:0"
                                },
                                "nodeType": "ForStatement",
                                "src": "7167:138:0"
                              }
                            ]
                          }
                        },
                        "id": 924,
                        "nodeType": "IfStatement",
                        "src": "7042:268:0",
                        "trueBody": {
                          "id": 886,
                          "nodeType": "Block",
                          "src": "7056:85:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 870,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 857,
                                  "src": "7062:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 879,
                                          "name": "plans",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 201,
                                          "src": "7118:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                            "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                          }
                                        },
                                        "id": 881,
                                        "indexExpression": {
                                          "id": 880,
                                          "name": "plan",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 850,
                                          "src": "7124:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7118:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Plan_$197_storage",
                                          "typeString": "struct BNBStaker.Plan storage ref"
                                        }
                                      },
                                      "id": 882,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "time",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 194,
                                      "src": "7118:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 876,
                                          "name": "PERCENTS_DIVIDER",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 185,
                                          "src": "7096:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 873,
                                              "name": "percent",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 855,
                                              "src": "7083:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 871,
                                              "name": "deposit",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 852,
                                              "src": "7071:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 872,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1438,
                                            "src": "7071:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 874,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7071:20:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1463,
                                        "src": "7071:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 877,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7071:42:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 878,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1438,
                                    "src": "7071:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7071:64:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7062:73:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 885,
                              "nodeType": "ExpressionStatement",
                              "src": "7062:73:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 925,
                            "name": "finish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 859,
                            "src": "7316:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 934,
                                    "name": "TIME_STEP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 188,
                                    "src": "7366:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 929,
                                        "name": "plans",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 201,
                                        "src": "7345:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Plan_$197_storage_$dyn_storage",
                                          "typeString": "struct BNBStaker.Plan storage ref[] storage ref"
                                        }
                                      },
                                      "id": 931,
                                      "indexExpression": {
                                        "id": 930,
                                        "name": "plan",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 850,
                                        "src": "7351:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7345:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Plan_$197_storage",
                                        "typeString": "struct BNBStaker.Plan storage ref"
                                      }
                                    },
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "time",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 194,
                                    "src": "7345:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "7345:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7345:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 926,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7325:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7325:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1379,
                              "src": "7325:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7325:52:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7316:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 938,
                        "nodeType": "ExpressionStatement",
                        "src": "7316:61:0"
                      }
                    ]
                  },
                  "functionSelector": "5936cf61",
                  "id": 940,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getResult",
                  "nameLocation": "6895:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "6911:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "6905:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6905:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nameLocation": "6925:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "6917:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6917:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6904:29:0"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "percent",
                        "nameLocation": "6963:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "6955:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6955:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "profit",
                        "nameLocation": "6980:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "6972:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6972:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "finish",
                        "nameLocation": "6996:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "6988:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6954:49:0"
                  },
                  "scope": 1354,
                  "src": "6886:496:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1090,
                    "nodeType": "Block",
                    "src": "7464:809:0",
                    "statements": [
                      {
                        "assignments": [
                          949
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 949,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "7482:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1090,
                            "src": "7469:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                              "typeString": "struct BNBStaker.User"
                            },
                            "typeName": {
                              "id": 948,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 947,
                                "name": "User",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 231,
                                "src": "7469:4:0"
                              },
                              "referencedDeclaration": 231,
                              "src": "7469:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 953,
                        "initialValue": {
                          "baseExpression": {
                            "id": 950,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "7489:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                              "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                            }
                          },
                          "id": 952,
                          "indexExpression": {
                            "id": 951,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "7495:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7489:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct BNBStaker.User storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7469:38:0"
                      },
                      {
                        "assignments": [
                          955
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 955,
                            "mutability": "mutable",
                            "name": "totalAmount",
                            "nameLocation": "7522:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1090,
                            "src": "7514:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 954,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7514:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 956,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7514:19:0"
                      },
                      {
                        "body": {
                          "id": 1086,
                          "nodeType": "Block",
                          "src": "7591:653:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 969,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 949,
                                    "src": "7601:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                      "typeString": "struct BNBStaker.User storage pointer"
                                    }
                                  },
                                  "id": 970,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "checkpoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 220,
                                  "src": "7601:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 971,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 949,
                                        "src": "7619:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                          "typeString": "struct BNBStaker.User storage pointer"
                                        }
                                      },
                                      "id": 972,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deposits",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 218,
                                      "src": "7619:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                        "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                      }
                                    },
                                    "id": 974,
                                    "indexExpression": {
                                      "id": 973,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 958,
                                      "src": "7633:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7619:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                      "typeString": "struct BNBStaker.Deposit storage ref"
                                    }
                                  },
                                  "id": 975,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "finish",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 213,
                                  "src": "7619:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7601:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1085,
                              "nodeType": "IfStatement",
                              "src": "7597:642:0",
                              "trueBody": {
                                "id": 1084,
                                "nodeType": "Block",
                                "src": "7644:595:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 983,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 977,
                                              "name": "user",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 949,
                                              "src": "7655:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                "typeString": "struct BNBStaker.User storage pointer"
                                              }
                                            },
                                            "id": 978,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "deposits",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 218,
                                            "src": "7655:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                              "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                            }
                                          },
                                          "id": 980,
                                          "indexExpression": {
                                            "id": 979,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 958,
                                            "src": "7669:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7655:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                            "typeString": "struct BNBStaker.Deposit storage ref"
                                          }
                                        },
                                        "id": 981,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "plan",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 203,
                                        "src": "7655:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "33",
                                        "id": 982,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7679:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "7655:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1069,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1062,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "8120:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1063,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "8120:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 1064,
                                                "name": "user",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 949,
                                                "src": "8138:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                  "typeString": "struct BNBStaker.User storage pointer"
                                                }
                                              },
                                              "id": 1065,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "deposits",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 218,
                                              "src": "8138:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                              }
                                            },
                                            "id": 1067,
                                            "indexExpression": {
                                              "id": 1066,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 958,
                                              "src": "8152:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8138:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                              "typeString": "struct BNBStaker.Deposit storage ref"
                                            }
                                          },
                                          "id": 1068,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "finish",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 213,
                                          "src": "8138:23:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8120:41:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 1082,
                                      "nodeType": "IfStatement",
                                      "src": "8116:117:0",
                                      "trueBody": {
                                        "id": 1081,
                                        "nodeType": "Block",
                                        "src": "8163:70:0",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 1079,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 1070,
                                                "name": "totalAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 955,
                                                "src": "8171:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "expression": {
                                                          "id": 1073,
                                                          "name": "user",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 949,
                                                          "src": "8201:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                            "typeString": "struct BNBStaker.User storage pointer"
                                                          }
                                                        },
                                                        "id": 1074,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "deposits",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 218,
                                                        "src": "8201:13:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                          "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 1076,
                                                      "indexExpression": {
                                                        "id": 1075,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 958,
                                                        "src": "8215:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8201:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                        "typeString": "struct BNBStaker.Deposit storage ref"
                                                      }
                                                    },
                                                    "id": 1077,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "profit",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 209,
                                                    "src": "8201:23:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 1071,
                                                    "name": "totalAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 955,
                                                    "src": "8185:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1072,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "add",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1379,
                                                  "src": "8185:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1078,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8185:40:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8171:54:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1080,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8171:54:0"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1083,
                                    "nodeType": "IfStatement",
                                    "src": "7651:582:0",
                                    "trueBody": {
                                      "id": 1061,
                                      "nodeType": "Block",
                                      "src": "7682:428:0",
                                      "statements": [
                                        {
                                          "assignments": [
                                            985
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 985,
                                              "mutability": "mutable",
                                              "name": "share",
                                              "nameLocation": "7698:5:0",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1061,
                                              "src": "7690:13:0",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 984,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7690:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 1001,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "id": 999,
                                                "name": "PERCENTS_DIVIDER",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "7764:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "expression": {
                                                          "id": 992,
                                                          "name": "user",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 949,
                                                          "src": "7734:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                            "typeString": "struct BNBStaker.User storage pointer"
                                                          }
                                                        },
                                                        "id": 993,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "deposits",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 218,
                                                        "src": "7734:13:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                          "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 995,
                                                      "indexExpression": {
                                                        "id": 994,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 958,
                                                        "src": "7748:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "7734:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                        "typeString": "struct BNBStaker.Deposit storage ref"
                                                      }
                                                    },
                                                    "id": 996,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "percent",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 205,
                                                    "src": "7734:24:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "expression": {
                                                          "id": 986,
                                                          "name": "user",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 949,
                                                          "src": "7706:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                            "typeString": "struct BNBStaker.User storage pointer"
                                                          }
                                                        },
                                                        "id": 987,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "deposits",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 218,
                                                        "src": "7706:13:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                          "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 989,
                                                      "indexExpression": {
                                                        "id": 988,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 958,
                                                        "src": "7720:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "7706:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                        "typeString": "struct BNBStaker.Deposit storage ref"
                                                      }
                                                    },
                                                    "id": 990,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "amount",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 207,
                                                    "src": "7706:23:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 991,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1438,
                                                  "src": "7706:27:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 997,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7706:53:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 998,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1463,
                                              "src": "7706:57:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1000,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7706:75:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "7690:91:0"
                                        },
                                        {
                                          "assignments": [
                                            1003
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 1003,
                                              "mutability": "mutable",
                                              "name": "from",
                                              "nameLocation": "7797:4:0",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1061,
                                              "src": "7789:12:0",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 1002,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7789:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 1020,
                                          "initialValue": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1011,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "id": 1004,
                                                      "name": "user",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 949,
                                                      "src": "7804:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                        "typeString": "struct BNBStaker.User storage pointer"
                                                      }
                                                    },
                                                    "id": 1005,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "deposits",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 218,
                                                    "src": "7804:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                      "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 1007,
                                                  "indexExpression": {
                                                    "id": 1006,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 958,
                                                    "src": "7818:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7804:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                    "typeString": "struct BNBStaker.Deposit storage ref"
                                                  }
                                                },
                                                "id": 1008,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "start",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 211,
                                                "src": "7804:22:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": ">",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 1009,
                                                  "name": "user",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 949,
                                                  "src": "7829:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                    "typeString": "struct BNBStaker.User storage pointer"
                                                  }
                                                },
                                                "id": 1010,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "checkpoint",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 220,
                                                "src": "7829:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "7804:40:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "expression": {
                                                "id": 1017,
                                                "name": "user",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 949,
                                                "src": "7872:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                  "typeString": "struct BNBStaker.User storage pointer"
                                                }
                                              },
                                              "id": 1018,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "checkpoint",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 220,
                                              "src": "7872:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1019,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "7804:83:0",
                                            "trueExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 1012,
                                                    "name": "user",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 949,
                                                    "src": "7847:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                      "typeString": "struct BNBStaker.User storage pointer"
                                                    }
                                                  },
                                                  "id": 1013,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "deposits",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 218,
                                                  "src": "7847:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                    "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1015,
                                                "indexExpression": {
                                                  "id": 1014,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 958,
                                                  "src": "7861:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "7847:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                  "typeString": "struct BNBStaker.Deposit storage ref"
                                                }
                                              },
                                              "id": 1016,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "start",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 211,
                                              "src": "7847:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "7789:98:0"
                                        },
                                        {
                                          "assignments": [
                                            1022
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 1022,
                                              "mutability": "mutable",
                                              "name": "to",
                                              "nameLocation": "7903:2:0",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1061,
                                              "src": "7895:10:0",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 1021,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7895:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 1039,
                                          "initialValue": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1030,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "id": 1023,
                                                      "name": "user",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 949,
                                                      "src": "7908:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                        "typeString": "struct BNBStaker.User storage pointer"
                                                      }
                                                    },
                                                    "id": 1024,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "deposits",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 218,
                                                    "src": "7908:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                      "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 1026,
                                                  "indexExpression": {
                                                    "id": 1025,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 958,
                                                    "src": "7922:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7908:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                    "typeString": "struct BNBStaker.Deposit storage ref"
                                                  }
                                                },
                                                "id": 1027,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "finish",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 213,
                                                "src": "7908:23:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 1028,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "7934:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1029,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "7934:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "7908:41:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "expression": {
                                                "id": 1036,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "7978:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1037,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "7978:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1038,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "7908:85:0",
                                            "trueExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 1031,
                                                    "name": "user",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 949,
                                                    "src": "7952:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                                      "typeString": "struct BNBStaker.User storage pointer"
                                                    }
                                                  },
                                                  "id": 1032,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "deposits",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 218,
                                                  "src": "7952:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                                    "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1034,
                                                "indexExpression": {
                                                  "id": 1033,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 958,
                                                  "src": "7966:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "7952:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                                  "typeString": "struct BNBStaker.Deposit storage ref"
                                                }
                                              },
                                              "id": 1035,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "finish",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 213,
                                              "src": "7952:23:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "7895:98:0"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1042,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1040,
                                              "name": "from",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1003,
                                              "src": "8005:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "id": 1041,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1022,
                                              "src": "8012:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8005:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1060,
                                          "nodeType": "IfStatement",
                                          "src": "8001:102:0",
                                          "trueBody": {
                                            "id": 1059,
                                            "nodeType": "Block",
                                            "src": "8016:87:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1057,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 1043,
                                                    "name": "totalAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 955,
                                                    "src": "8025:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "id": 1054,
                                                            "name": "TIME_STEP",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 188,
                                                            "src": "8083:9:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "id": 1050,
                                                                    "name": "from",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1003,
                                                                    "src": "8072:4:0",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_uint256",
                                                                      "typeString": "uint256"
                                                                    }
                                                                  }
                                                                ],
                                                                "expression": {
                                                                  "argumentTypes": [
                                                                    {
                                                                      "typeIdentifier": "t_uint256",
                                                                      "typeString": "uint256"
                                                                    }
                                                                  ],
                                                                  "expression": {
                                                                    "id": 1048,
                                                                    "name": "to",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1022,
                                                                    "src": "8065:2:0",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_uint256",
                                                                      "typeString": "uint256"
                                                                    }
                                                                  },
                                                                  "id": 1049,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "memberName": "sub",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 1404,
                                                                  "src": "8065:6:0",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                  }
                                                                },
                                                                "id": 1051,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "8065:12:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "id": 1046,
                                                                "name": "share",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 985,
                                                                "src": "8055:5:0",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "id": 1047,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "mul",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 1438,
                                                              "src": "8055:9:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                              }
                                                            },
                                                            "id": 1052,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "8055:23:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1053,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "div",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 1463,
                                                          "src": "8055:27:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1055,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8055:38:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "id": 1044,
                                                        "name": "totalAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 955,
                                                        "src": "8039:11:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1045,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "add",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 1379,
                                                      "src": "8039:15:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1056,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8039:55:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "8025:69:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1058,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8025:69:0"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 961,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "7560:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 962,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 949,
                                "src": "7564:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                  "typeString": "struct BNBStaker.User storage pointer"
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 218,
                              "src": "7564:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7564:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7560:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1087,
                        "initializationExpression": {
                          "assignments": [
                            958
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 958,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7553:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1087,
                              "src": "7545:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 957,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7545:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 960,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7557:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7545:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7586:3:0",
                            "subExpression": {
                              "id": 966,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "7586:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 968,
                          "nodeType": "ExpressionStatement",
                          "src": "7586:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "7540:704:0"
                      },
                      {
                        "expression": {
                          "id": 1088,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "8257:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 946,
                        "id": 1089,
                        "nodeType": "Return",
                        "src": "8250:18:0"
                      }
                    ]
                  },
                  "functionSelector": "040a772e",
                  "id": 1091,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserDividends",
                  "nameLocation": "7396:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "7421:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "7413:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7413:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7412:21:0"
                  },
                  "returnParameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "7455:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7455:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7454:9:0"
                  },
                  "scope": 1354,
                  "src": "7387:886:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1103,
                    "nodeType": "Block",
                    "src": "8355:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1098,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "8367:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                              }
                            },
                            "id": 1100,
                            "indexExpression": {
                              "id": 1099,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "8373:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8367:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct BNBStaker.User storage ref"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkpoint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 220,
                          "src": "8367:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1097,
                        "id": 1102,
                        "nodeType": "Return",
                        "src": "8360:36:0"
                      }
                    ]
                  },
                  "functionSelector": "d7ffca91",
                  "id": 1104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserCheckpoint",
                  "nameLocation": "8287:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "8313:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "8305:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8305:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8304:21:0"
                  },
                  "returnParameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "8346:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8345:9:0"
                  },
                  "scope": 1354,
                  "src": "8278:123:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1116,
                    "nodeType": "Block",
                    "src": "8481:44:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1111,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "8493:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                              }
                            },
                            "id": 1113,
                            "indexExpression": {
                              "id": 1112,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "8499:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8493:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct BNBStaker.User storage ref"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "referrer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "8493:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1110,
                        "id": 1115,
                        "nodeType": "Return",
                        "src": "8486:34:0"
                      }
                    ]
                  },
                  "functionSelector": "36144c9a",
                  "id": 1117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserReferrer",
                  "nameLocation": "8415:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "8439:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "8431:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8431:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8430:21:0"
                  },
                  "returnParameters": {
                    "id": 1110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "8472:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8472:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8471:9:0"
                  },
                  "scope": 1354,
                  "src": "8406:119:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1148,
                    "nodeType": "Block",
                    "src": "8628:107:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1128,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 236,
                                    "src": "8641:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                      "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                    }
                                  },
                                  "id": 1130,
                                  "indexExpression": {
                                    "id": 1129,
                                    "name": "userAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1119,
                                    "src": "8647:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8641:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage",
                                    "typeString": "struct BNBStaker.User storage ref"
                                  }
                                },
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "levels",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 226,
                                "src": "8641:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                  "typeString": "uint256[3] storage ref"
                                }
                              },
                              "id": 1133,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8667:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8641:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1134,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 236,
                                    "src": "8671:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                      "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                    }
                                  },
                                  "id": 1136,
                                  "indexExpression": {
                                    "id": 1135,
                                    "name": "userAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1119,
                                    "src": "8677:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8671:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage",
                                    "typeString": "struct BNBStaker.User storage ref"
                                  }
                                },
                                "id": 1137,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "levels",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 226,
                                "src": "8671:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                  "typeString": "uint256[3] storage ref"
                                }
                              },
                              "id": 1139,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 1138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8697:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8671:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1140,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 236,
                                    "src": "8701:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                      "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                    }
                                  },
                                  "id": 1142,
                                  "indexExpression": {
                                    "id": 1141,
                                    "name": "userAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1119,
                                    "src": "8707:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8701:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage",
                                    "typeString": "struct BNBStaker.User storage ref"
                                  }
                                },
                                "id": 1143,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "levels",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 226,
                                "src": "8701:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$3_storage",
                                  "typeString": "uint256[3] storage ref"
                                }
                              },
                              "id": 1145,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 1144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8727:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8701:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1146,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8640:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1127,
                        "id": 1147,
                        "nodeType": "Return",
                        "src": "8633:97:0"
                      }
                    ]
                  },
                  "functionSelector": "03a93c0c",
                  "id": 1149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserDownlineCount",
                  "nameLocation": "8539:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1119,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "8568:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "8560:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8560:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8559:21:0"
                  },
                  "returnParameters": {
                    "id": 1127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "8601:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "8610:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8610:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "8619:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8619:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8600:27:0"
                  },
                  "scope": 1354,
                  "src": "8530:205:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1161,
                    "nodeType": "Block",
                    "src": "8820:41:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1156,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "8832:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "id": 1157,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "8838:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8832:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct BNBStaker.User storage ref"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bonus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 228,
                          "src": "8832:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1155,
                        "id": 1160,
                        "nodeType": "Return",
                        "src": "8825:31:0"
                      }
                    ]
                  },
                  "functionSelector": "e85abe09",
                  "id": 1162,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserReferralBonus",
                  "nameLocation": "8749:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "8778:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "8770:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8770:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8769:21:0"
                  },
                  "returnParameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "8811:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8811:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8810:9:0"
                  },
                  "scope": 1354,
                  "src": "8740:121:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1174,
                    "nodeType": "Block",
                    "src": "8951:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1169,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "8963:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                              }
                            },
                            "id": 1171,
                            "indexExpression": {
                              "id": 1170,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1164,
                              "src": "8969:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8963:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct BNBStaker.User storage ref"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalBonus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 230,
                          "src": "8963:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1168,
                        "id": 1173,
                        "nodeType": "Return",
                        "src": "8956:36:0"
                      }
                    ]
                  },
                  "functionSelector": "48c37203",
                  "id": 1175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserReferralTotalBonus",
                  "nameLocation": "8875:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "8909:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "8901:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8901:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8900:21:0"
                  },
                  "returnParameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1167,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "8942:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8942:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8941:9:0"
                  },
                  "scope": 1354,
                  "src": "8866:131:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "9086:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1187,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "9132:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                  }
                                },
                                "id": 1189,
                                "indexExpression": {
                                  "id": 1188,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "9138:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9132:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                  "typeString": "struct BNBStaker.User storage ref"
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 228,
                              "src": "9132:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1182,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "9098:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                  }
                                },
                                "id": 1184,
                                "indexExpression": {
                                  "id": 1183,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "9104:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9098:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                  "typeString": "struct BNBStaker.User storage ref"
                                }
                              },
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 230,
                              "src": "9098:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1404,
                            "src": "9098:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9098:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1181,
                        "id": 1192,
                        "nodeType": "Return",
                        "src": "9091:66:0"
                      }
                    ]
                  },
                  "functionSelector": "6bb18556",
                  "id": 1194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserReferralWithdrawn",
                  "nameLocation": "9011:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "9044:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "9036:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9036:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9035:21:0"
                  },
                  "returnParameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "9077:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9077:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9076:9:0"
                  },
                  "scope": 1354,
                  "src": "9002:160:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "9243:85:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1206,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1196,
                                  "src": "9310:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1205,
                                "name": "getUserDividends",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1091,
                                "src": "9293:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9293:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1202,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1196,
                                  "src": "9276:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1201,
                                "name": "getUserReferralBonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "9255:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9255:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1379,
                            "src": "9255:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9255:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1200,
                        "id": 1209,
                        "nodeType": "Return",
                        "src": "9248:75:0"
                      }
                    ]
                  },
                  "functionSelector": "153ab9df",
                  "id": 1211,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserAvailable",
                  "nameLocation": "9176:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "9201:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1211,
                        "src": "9193:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9193:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9192:21:0"
                  },
                  "returnParameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1211,
                        "src": "9234:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9234:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9233:9:0"
                  },
                  "scope": 1354,
                  "src": "9167:161:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1224,
                    "nodeType": "Block",
                    "src": "9416:51:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1218,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "9428:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                  "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                }
                              },
                              "id": 1220,
                              "indexExpression": {
                                "id": 1219,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "9434:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9428:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage",
                                "typeString": "struct BNBStaker.User storage ref"
                              }
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 218,
                            "src": "9428:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                              "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9428:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1217,
                        "id": 1223,
                        "nodeType": "Return",
                        "src": "9421:41:0"
                      }
                    ]
                  },
                  "functionSelector": "a8aeb6c2",
                  "id": 1225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserAmountOfDeposits",
                  "nameLocation": "9342:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "9374:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1225,
                        "src": "9366:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9366:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9365:21:0"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1225,
                        "src": "9407:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9407:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9406:9:0"
                  },
                  "scope": 1354,
                  "src": "9333:134:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1261,
                    "nodeType": "Block",
                    "src": "9559:144:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1259,
                          "nodeType": "Block",
                          "src": "9629:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1246,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "9635:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1249,
                                              "name": "users",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 236,
                                              "src": "9655:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                                "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                              }
                                            },
                                            "id": 1251,
                                            "indexExpression": {
                                              "id": 1250,
                                              "name": "userAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1227,
                                              "src": "9661:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9655:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_User_$231_storage",
                                              "typeString": "struct BNBStaker.User storage ref"
                                            }
                                          },
                                          "id": 1252,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "deposits",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 218,
                                          "src": "9655:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                            "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                          }
                                        },
                                        "id": 1254,
                                        "indexExpression": {
                                          "id": 1253,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1233,
                                          "src": "9683:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9655:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                          "typeString": "struct BNBStaker.Deposit storage ref"
                                        }
                                      },
                                      "id": 1255,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 207,
                                      "src": "9655:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1247,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1230,
                                      "src": "9644:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1379,
                                    "src": "9644:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9644:49:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9635:58:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "9635:58:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1236,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "9584:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1237,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "9588:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                    "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                                  }
                                },
                                "id": 1239,
                                "indexExpression": {
                                  "id": 1238,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "9594:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9588:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$231_storage",
                                  "typeString": "struct BNBStaker.User storage ref"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 218,
                              "src": "9588:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9588:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9584:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1260,
                        "initializationExpression": {
                          "assignments": [
                            1233
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1233,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9577:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1260,
                              "src": "9569:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1232,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9569:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1235,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9581:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9569:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9624:3:0",
                            "subExpression": {
                              "id": 1243,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "9624:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1245,
                          "nodeType": "ExpressionStatement",
                          "src": "9624:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "9564:135:0"
                      }
                    ]
                  },
                  "functionSelector": "7e3abeea",
                  "id": 1262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserTotalDeposits",
                  "nameLocation": "9481:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "9510:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "9502:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9502:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9501:21:0"
                  },
                  "returnParameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9551:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "9543:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9543:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9542:16:0"
                  },
                  "scope": 1354,
                  "src": "9472:231:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "9884:295:0",
                    "statements": [
                      {
                        "assignments": [
                          1283
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1283,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "9905:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1336,
                            "src": "9892:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                              "typeString": "struct BNBStaker.User"
                            },
                            "typeName": {
                              "id": 1282,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1281,
                                "name": "User",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 231,
                                "src": "9892:4:0"
                              },
                              "referencedDeclaration": 231,
                              "src": "9892:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                "typeString": "struct BNBStaker.User"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1287,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1284,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "9912:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                              "typeString": "mapping(address => struct BNBStaker.User storage ref)"
                            }
                          },
                          "id": 1286,
                          "indexExpression": {
                            "id": 1285,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "9918:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9912:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct BNBStaker.User storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9892:38:0"
                      },
                      {
                        "expression": {
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1288,
                            "name": "plan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "9937:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1289,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "9944:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "9944:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1292,
                              "indexExpression": {
                                "id": 1291,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "9958:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9944:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "plan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "9944:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "9937:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ExpressionStatement",
                        "src": "9937:32:0"
                      },
                      {
                        "expression": {
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1296,
                            "name": "percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "9974:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1297,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "9984:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "9984:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1300,
                              "indexExpression": {
                                "id": 1299,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "9998:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9984:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "percent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 205,
                            "src": "9984:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9974:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1303,
                        "nodeType": "ExpressionStatement",
                        "src": "9974:38:0"
                      },
                      {
                        "expression": {
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1304,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "10017:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1305,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "10026:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "10026:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1308,
                              "indexExpression": {
                                "id": 1307,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "10040:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10026:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
                            "src": "10026:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10017:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1311,
                        "nodeType": "ExpressionStatement",
                        "src": "10017:36:0"
                      },
                      {
                        "expression": {
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1312,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "10058:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1313,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "10067:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "10067:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1316,
                              "indexExpression": {
                                "id": 1315,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "10081:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10067:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "profit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 209,
                            "src": "10067:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10058:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1319,
                        "nodeType": "ExpressionStatement",
                        "src": "10058:36:0"
                      },
                      {
                        "expression": {
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1320,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "10099:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1321,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "10107:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "10107:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1324,
                              "indexExpression": {
                                "id": 1323,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "10121:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10107:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "start",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "10107:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10099:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "10099:34:0"
                      },
                      {
                        "expression": {
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1328,
                            "name": "finish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "10138:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1329,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "10147:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                                    "typeString": "struct BNBStaker.User storage pointer"
                                  }
                                },
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 218,
                                "src": "10147:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Deposit_$214_storage_$dyn_storage",
                                  "typeString": "struct BNBStaker.Deposit storage ref[] storage ref"
                                }
                              },
                              "id": 1332,
                              "indexExpression": {
                                "id": 1331,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "10161:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10147:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$214_storage",
                                "typeString": "struct BNBStaker.Deposit storage ref"
                              }
                            },
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finish",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 213,
                            "src": "10147:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10138:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1335,
                        "nodeType": "ExpressionStatement",
                        "src": "10138:36:0"
                      }
                    ]
                  },
                  "functionSelector": "c0806b03",
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserDepositInfo",
                  "nameLocation": "9717:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "userAddress",
                        "nameLocation": "9744:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9736:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9736:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "9765:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9757:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9757:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9735:36:0"
                  },
                  "returnParameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "plan",
                        "nameLocation": "9798:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9792:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "9792:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "percent",
                        "nameLocation": "9812:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9804:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9804:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9829:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9821:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9821:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "profit",
                        "nameLocation": "9845:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9837:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9837:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "start",
                        "nameLocation": "9861:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9853:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9853:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "finish",
                        "nameLocation": "9876:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "9868:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9791:92:0"
                  },
                  "scope": 1354,
                  "src": "9708:471:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1352,
                    "nodeType": "Block",
                    "src": "10247:102:0",
                    "statements": [
                      {
                        "assignments": [
                          1345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1345,
                            "mutability": "mutable",
                            "name": "size",
                            "nameLocation": "10263:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1352,
                            "src": "10258:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1344,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10258:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1346,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10258:9:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "10287:29:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10289:25:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10309:4:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "10297:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10297:17:0"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "10289:4:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1339,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10309:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1345,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10289:4:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 1347,
                        "nodeType": "InlineAssembly",
                        "src": "10278:38:0"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1348,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "10333:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10340:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10333:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1343,
                        "id": 1351,
                        "nodeType": "Return",
                        "src": "10326:15:0"
                      }
                    ]
                  },
                  "id": 1353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "10193:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "10212:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "10204:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10204:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10203:14:0"
                  },
                  "returnParameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "10241:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10241:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10240:6:0"
                  },
                  "scope": 1354,
                  "src": "10184:165:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1465,
              "src": "2083:8269:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1464,
              "linearizedBaseContracts": [
                1464
              ],
              "name": "SafeMath",
              "nameLocation": "10364:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1378,
                    "nodeType": "Block",
                    "src": "10449:114:0",
                    "statements": [
                      {
                        "assignments": [
                          1364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1364,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "10468:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1378,
                            "src": "10460:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10460:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1368,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1365,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "10472:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1366,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "10476:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10472:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10460:17:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1370,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "10496:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1371,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1356,
                                "src": "10501:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10496:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10504:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 1369,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10488:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10488:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1375,
                        "nodeType": "ExpressionStatement",
                        "src": "10488:46:0"
                      },
                      {
                        "expression": {
                          "id": 1376,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "10554:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1362,
                        "id": 1377,
                        "nodeType": "Return",
                        "src": "10547:8:0"
                      }
                    ]
                  },
                  "id": 1379,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "10391:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1356,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "10403:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1379,
                        "src": "10395:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1355,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10395:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "10414:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1379,
                        "src": "10406:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10406:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10394:22:0"
                  },
                  "returnParameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1379,
                        "src": "10440:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10439:9:0"
                  },
                  "scope": 1464,
                  "src": "10382:181:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1403,
                    "nodeType": "Block",
                    "src": "10638:117:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1389,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "10657:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1390,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1381,
                                "src": "10662:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10657:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10665:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 1388,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10649:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10649:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "10649:49:0"
                      },
                      {
                        "assignments": [
                          1396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1396,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "10717:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1403,
                            "src": "10709:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1395,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10709:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1400,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1397,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1381,
                            "src": "10721:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1398,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "10725:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10721:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10709:17:0"
                      },
                      {
                        "expression": {
                          "id": 1401,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1396,
                          "src": "10746:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1387,
                        "id": 1402,
                        "nodeType": "Return",
                        "src": "10739:8:0"
                      }
                    ]
                  },
                  "id": 1404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "10580:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "10592:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "10584:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10584:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "10603:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "10595:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10595:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10583:22:0"
                  },
                  "returnParameters": {
                    "id": 1387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "10629:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10629:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10628:9:0"
                  },
                  "scope": 1464,
                  "src": "10571:184:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1437,
                    "nodeType": "Block",
                    "src": "10830:183:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1413,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "10845:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10850:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10845:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1419,
                        "nodeType": "IfStatement",
                        "src": "10841:47:0",
                        "trueBody": {
                          "id": 1418,
                          "nodeType": "Block",
                          "src": "10853:35:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10875:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1412,
                              "id": 1417,
                              "nodeType": "Return",
                              "src": "10868:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1421
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1421,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "10908:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1437,
                            "src": "10900:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1420,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10900:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1425,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1422,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "10912:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1423,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "10916:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10912:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10900:17:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1427,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "10936:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1428,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "10940:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10936:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1430,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1408,
                                "src": "10945:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10936:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 1432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10948:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 1426,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10928:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10928:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1434,
                        "nodeType": "ExpressionStatement",
                        "src": "10928:56:0"
                      },
                      {
                        "expression": {
                          "id": 1435,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "11004:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1412,
                        "id": 1436,
                        "nodeType": "Return",
                        "src": "10997:8:0"
                      }
                    ]
                  },
                  "id": 1438,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "10772:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1406,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "10784:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "10776:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1405,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "10795:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "10787:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10787:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10775:22:0"
                  },
                  "returnParameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "10821:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10821:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10820:9:0"
                  },
                  "scope": 1464,
                  "src": "10763:250:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1462,
                    "nodeType": "Block",
                    "src": "11088:112:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1448,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1442,
                                "src": "11107:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11111:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11107:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11114:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 1447,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11099:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1453,
                        "nodeType": "ExpressionStatement",
                        "src": "11099:44:0"
                      },
                      {
                        "assignments": [
                          1455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1455,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "11162:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1462,
                            "src": "11154:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1454,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11154:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1459,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1456,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "11166:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1457,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "11170:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11166:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11154:17:0"
                      },
                      {
                        "expression": {
                          "id": 1460,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "11191:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1446,
                        "id": 1461,
                        "nodeType": "Return",
                        "src": "11184:8:0"
                      }
                    ]
                  },
                  "id": 1463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "11030:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "11042:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "11034:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "11053:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "11045:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11045:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11033:22:0"
                  },
                  "returnParameters": {
                    "id": 1446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1445,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "11079:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11079:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11078:9:0"
                  },
                  "scope": 1464,
                  "src": "11021:179:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1465,
              "src": "10356:847:0",
              "usedErrors": []
            }
          ],
          "src": "239:10964:0"
        },
        "id": 0
      }
    }
  }
}
